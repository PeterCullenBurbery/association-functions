Notebook[{

Cell[CellGroupData[{
Cell["PeterBurbery/AssociationFunctions", "Title",
 Deletable->False,
 TaggingRules->{},
 CellTags->{"Name", "TemplateCell", "Title"},
 CellID->909387,ExpressionUUID->"56f50c17-8057-432e-b00b-4baca9831042"],

Cell["Functions for modifying associations", "Text",
 Deletable->False,
 TaggingRules->{},
 CellTags->{"Description", "TemplateCell"},
 CellID->570458600,ExpressionUUID->"2b28db12-2931-41e9-9119-421b55b838e3"],

Cell[CellGroupData[{

Cell["Paclet", "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Paclet"},
 CellTags->{"Paclet", "TemplateSection"},
 CellID->864524491,ExpressionUUID->"a078b9c0-fb1d-46ed-b1f8-17734107542c"],

Cell[CellGroupData[{

Cell["Paclet Directory", "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "PacletDirectory"},
 DefaultNewCellStyle->{
  "LocalDirectoryInput", 
   TaggingRules -> {"FileInputProperty" -> "PacletDirectory"}},
 CellTags->{"Paclet Directory", "PacletDirectory", "TemplateCellGroup"},
 CellID->95800296,ExpressionUUID->"c4924114-6cec-4bfc-a3dc-fda38bc9fa55"],

Cell[BoxData[
 RowBox[{"NotebookDirectory", "[", "]"}]], "LocalDirectoryInput",
 Deletable->False,
 TaggingRules->{},
 CellChangeTimes->{3.8663023651871862`*^9},
 CellID->365354817,ExpressionUUID->"5f5ffd8f-ca74-4ab5-ace5-580d8c927e47"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Manifest", "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "PacletFiles"},
 CellFrameLabels->{{None, 
    Cell[
     BoxData[
      ButtonBox[
      "\"Refresh\"", ButtonFunction :> 
       DefinitionNotebookClient`RedirectOutputsToConsole[
         Block[{$ContextPath}, Quiet[
            Needs["PacletResource`DefinitionNotebook`"], 
            MessageName[General, "shdw"]]; 
          PacletResource`DefinitionNotebook`RefreshNotebookPacletFiles[]]], 
       Appearance :> 
       FEPrivate`FrontEndResource[
        "FEExpressions", "GrayButtonNinePatchAppearance"], 
       FrameMargins -> {{5, 5}, {0, 0}}, 
       BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, Method -> 
       "Queued"]]]}, {None, None}},
 CellTags->{"Manifest", "PacletFiles", "TemplateCellGroup"},
 CellID->324117918,ExpressionUUID->"328d9d60-0532-4187-a3e0-9fb210ae6af4"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Documentation\"\>", {"\<\"Open/Close Group\"\>":>(
    SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], "Documentation"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"ef849940-b5f4-4dc7-9a24-106423d2593d"]], \
"FileManagerDirectory",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDocumentationIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->699134580,ExpressionUUID->"088ada99-6989-4fb9-a63e-e4fe5dc230fd"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"English\"\>", {"\<\"Open/Close Group\"\>":>(
    SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], "Documentation/English"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"ad33cabb-f80b-43cc-9bfe-3757d11a1018"]], \
"FileManagerDirectory",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->73914077,ExpressionUUID->"51949d3c-88cd-4619-a109-72b595d32e98"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Guides\"\>", {"\<\"Open/Close Group\"\>":>(SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], "Documentation/English/Guides"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"d115e275-a0d9-4c02-aeb1-4c74ddc7003f"]], \
"FileManagerDirectory",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->119008622,ExpressionUUID->"ac5a6bbe-337c-4443-b09b-ef79f2704f8e"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"AssociationFunctions.nb\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], 
        "Documentation/English/Guides/AssociationFunctions.nb"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], 
     "Documentation/English/Guides/AssociationFunctions.nb"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->823240219,ExpressionUUID->"146e2e91-a09d-47f4-b220-69bf020f05c9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"ReferencePages\"\>", {"\<\"Open/Close Group\"\>":>(
    SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], "Documentation/English/ReferencePages"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"91b18e95-1f03-4344-a540-ecd4ec93e5de"]], \
"FileManagerDirectory",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->274094384,ExpressionUUID->"0cbc2bf6-6e11-4730-89b4-38ffeb5fed42"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Symbols\"\>", {"\<\"Open/Close Group\"\>":>(
    SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], "Documentation/English/ReferencePages/Symbols"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"ad82b700-d286-4977-8a8e-6527a3821d1a"]], \
"FileManagerDirectory",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->227905760,ExpressionUUID->"8b520048-7ec2-4e47-a8b1-b9b125610176"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"LinearOptimizationInformation.nb\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], 
        "Documentation/English/ReferencePages/Symbols/\
LinearOptimizationInformation.nb"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], 
     "Documentation/English/ReferencePages/Symbols/\
LinearOptimizationInformation.nb"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1617471,ExpressionUUID->"a1a109dc-08e1-450b-a599-f67a0bd6551c"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"QuadraticOptimizationInformation.nb\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], 
        "Documentation/English/ReferencePages/Symbols/\
QuadraticOptimizationInformation.nb"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], 
     "Documentation/English/ReferencePages/Symbols/\
QuadraticOptimizationInformation.nb"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->397730577,ExpressionUUID->"3f5a8818-169e-4c89-b6e7-16c2af33e13f"]
}, Open  ]]
}, Open  ]],

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Tutorials\"\>", {"\<\"Open/Close Group\"\>":>(
    SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], "Documentation/English/Tutorials"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"824192a5-e8e6-4b21-9759-dbe55578d1e8"]], \
"FileManagerDirectory",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerEmptyDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->356243665,ExpressionUUID->"328f6f78-39cb-4739-8b8d-35d9bc32d46b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Kernel\"\>", {"\<\"Open/Close Group\"\>":>(SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], "Kernel"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"4cae0f4c-b3f2-4e31-b7fe-a035c93f3774"]], \
"FileManagerDirectory",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerKernelIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->181061186,ExpressionUUID->"ad660bea-b981-4719-ab06-13ed99f92318"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"AssociationFunctions.wl\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], "Kernel/AssociationFunctions.wl"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], "Kernel/AssociationFunctions.wl"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->136335675,ExpressionUUID->"0b81f646-d6ff-41a3-924c-9e38a6517619"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"LICENSE\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], "LICENSE"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], "LICENSE"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->3550024,ExpressionUUID->"5fa8149c-d892-43bc-91ab-3765c8c80055"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"PacletInfo.wl\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], "PacletInfo.wl"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], "PacletInfo.wl"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerPacletInfoIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->206435982,ExpressionUUID->"ece19865-a5ab-41ff-8f5e-12a6677f6aeb"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ResourceDefinition.nb\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], "ResourceDefinition.nb"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], "ResourceDefinition.nb"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->105042780,ExpressionUUID->"8e933dba-50d6-4b7a-b1f8-4deab1117fa7"],

Cell["", "FileManagerBottomSpacer",
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->286911599,ExpressionUUID->"f44c5ffc-aa8a-4ba4-af06-5638db150f93"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Web Content",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"WebContent", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Provide content that you want to display on the main landing page \
for your paclet.", "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoWebContent"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "c2dbcd0c-f829-4291-84ee-0098a3426012"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "WebContent"},
 CellTags->{"TemplateSection", "Web Content", "WebContent"},
 CellID->184208365,ExpressionUUID->"0dd866c9-02e3-466f-93dc-be2ae58d9abf"],

Cell[CellGroupData[{

Cell[TextData[{
 "Headline Image",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"HeroImage", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Give an image that you want to display on the main landing page for \
your paclet. This will be displayed along side the basic description that's \
given below.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoHeroImage"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "a6846b8f-fa0f-45ce-bf6e-126ef402260d"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "HeroImage"},
 CellTags->{"Headline Image", "HeroImage", "TemplateCellGroup"},
 CellID->670275254,ExpressionUUID->"5cf6c978-11d5-49a4-a934-e9bfd64c732a"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnQm81NTdvw9c4LKDrCooCAKKXBQVrIgoKii4VAT3rYAKQhF3sC4girK4
IAoiuBbceG1tq62tS92pVqtWXEAF/LuvuFv3888vYS6XuclMkslMkjnPcz7f
t7yTc7JN5uYxyTnZavSkQ06qq5Q6o6H1fw4ZNXnQ6aePOmdES+v/OfSUM04e
e8qJJww95cwTx554+q9GV1gfrqij1DSrfj0FAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUJZol5QrJm0r
AAAAgBcmOZFJ2woAAADghUlOZNK2AgAAAHhhkhOZtK0AAAAAXpjkRCZtKwAA
AIAXJjmRSdsKAAAA4IVJTmTStgIAAAB4kcuJeliZa2WllW+sfGXlVSsLrGwb
YH6Z/Lx+Hu9aedzK1Vb2tVInzzr2tjJzfZv3rHxr5af181pt5cH163mMlU4l
3FYAAACANOLlRGda+c5juuR7K8f6nF++PGelu8u86lqZb+WXgPMr1bYCAAAA
pBE337nI4/Ps/KCca3P55ucnH1hpnTWv00LOq1TbCgAAAJBGvHxnlZXhVlpY
aWzlECsfutS7KWt+0k7uox5lZUcr7aw0Us61vIZWtrBykHLu5WbPa2bWvF51
qTPdymZW6llprhwnm2jlqRp1SrWtAAAAAGnEzYfeUrWvxQkjXequCbncli7z
WpFV53uXOr1yzHNnKw/kmB7XtgIAAAAkCTcnGutRd1OXuv9zqSfX5uR62mLl
XJeTa2nSpyLfc3xfZs3nE5c666zcrJxn9mQZ265fXlzbCgAAAJA23Jyos0fd
So/6NdnFyhse9YI+u3erzzbSV/evVg5VufsSR72tAAAAAGnEzXHqe9St41E/
Q1crX3vUCeN/nay8HbD93600KMG2AgAAAKSVoI6Tq/5NLtPkHu5vrWylnP4f
Gfz6lTybd6lyntPz64C/K8G2AgAAAKSVKJ3I7VrdMI/5tA2xbHHIg5Xz7J+M
y7xcOWNKZ8/jvyHWPYr6AAAAAGkgSif6wWVaU4/5HBdi2W4McZnHNyHWPYr6
AAAAAGkgSidyGzOvv8s82ivv+7k1kbFc+uVZH7friF79dPE/AAAAgGid6A6X
adIXeKhyxmqWyLh6azzmk73szGfyfrgpVgYqxx3rr5+X9DW+z2Ue/ynBtgIA
AACklSidqErlfo9uzVzhY9l+5uOWo0qwrQAAAABpJWonkne7felRTyJjQIv7
+en/G9T75L7vpBJuKwAAAEAaKYYTbWnlcisvK6cvhkTuA9+kNn4eMN+8ZD5H
rZ+XjOsn7wP+TDn9TH608oWV16z8xcppynnXcKm3FQAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgDWiXAPihjpWjrfzd
ygdWflAcS1HAbxLixrRj0LTtBRA47iEMda38QbkfPxxLhcF+hLgx7Rg0bXsB
BI57CMOJKr/7mX4shd0f7EeIG9OOwSRvb5LXDdINxxaE4TFV+7iZY6VpnCuV
MPA/SCumHYNJ3t4krxukG44tCMNnqvZx0z7WNUoe+B+kFdOOwSRvb5LXDdIN
xxaE4RdV+7ipG+saJQ9+W5BWTDt2k7y9SV43SDccWxAGjpv8sI8grZh27CZ5
e5O8bpBu/B5bszzqnu1Sd7P1n99jZa2VL6x8b+V9K49bmWZlC4/l/MtlGffm
2YaFLm2edanX28rM9evwnpVvrfxk5Ssrq608aGWulWOsdMqzTBNx+/5zxU/7
oMsLUqeHcr7PlVa+Uc73/KqVBVa2zbNsoYtyjtUHrLyzfh4yxo2MdfOIlenK
OabyrU+x95Ns54z16/Suco7r/ynnGH/UyqXK3/bmW3ah+xPSQ67j4FdWbray
RjnH2adWlls5y0qTkPMstH6Y32qYZZXqPBjF3xHOd5APP8fR5S51frZyQla9
Rso5ntzGgcuO/A7k2KzImsdIl7pyr3Ebj/WXvzdfurQ5sUYduS85X7nfswzy
ezKdNPnfmVa+y7Fucvwd67Hc5lZuUs4xHnQ7o/i77Xc/tbRym/J/XN9ppZXH
vPItu5D9CenD7TuW8T5nq9zHm7hX3wDzDLoO2RTyWw26rFKeBwv5O8L5DvyS
7zi4ymW6HLMjsurJ7/A/HvPLlb9aqVdjPvI7WONS7zqP9T/Bpa74YM1+qKeF
WC9+D7UpdP8V4++/W52LfK6f/H3OvibQxsorBWxnFMeZnzrtrLwWYllvqNz9
dKLen5BO3L5fN/9xy9fK/TiI+vdf6G81yLJKfR4s5O8I5zvwi9dxIP+tN99l
mvy2B7vM516XunLN+XjlnKsaWNnBo96crHlNcqkj167buCz3GZe6C7PqvOpS
R+4HyPV5+c3Jb1b+Xk208pTi9+CHMH8/suv/EsEyvP6WrbIy3EoLK42tHGLl
Q5d6N2XN758uddZZOdVKZ+Ucx5tbGbV+GYWcUwpp96hLneet7Kuc//aR6+L7
WHnOpd5jAZddyP6EdOJ1HLygah9jbr4jXpbvmlahv/9S/FbjPA/63Q/ZcL4D
v7gdW3LMuz1TJ8957OIyjyEudeX30d2lrlybfiCrrlw32KpGHfnb4ja+yPlZ
8+rjsf47ZtX73qVOL7edsZ6d168jeBPGbbLr/xTBMtzqvGWltUtdt2cL1tSY
foDLdLmW3NNj/eor59m3QtY/TLsDXabL8zzNXebVfP207PoHBlh22P0J6cXt
OPA6xuTv9Rsu9Y/IM89Cfv+l+K3GfR7MtW654HwHfnE7tq53+UyeK9/OYx6/
d6k/Nccyd3epf3FWndkudeRZ3soaddx+m8+4LO8Tl3ry34k3K+e5JrmuIc+v
13NpC+6EcZvs+j9GsAy3OmM95repS93/1Zh+q8v08/KsY6HrH6ad23qeqLxx
e1fL0gDLDrs/Ib24HQe5jjG353CW5ZlnIb//UvxWk3Ae9Fq3XHC+A7+4HVvZ
eV25/3dJBrfrCzvlqN/Ypf6/sup0VO7Pz45aP92r30f2s7iC298Kt0i/KHkO
41Dl/LcfeBPGbbLrfxfBMtzqdPaYX2Weebo9d+p1PcEPYfaRn3Zu69klx/y6
utT3uk4X5f6E9OL2veY6xrq41H8zzzwL+f2X4reahPOg17rlgvMd+MXPcXJM
nnl843M+ufKhy3yXutR7cf00r34fbuMPdLLydsD1+btyntUAd8Kc96P8+5+r
Tn2P+dXJM0+347hhnnUsdP3DtHNbz0rljZunfRNg2WH3J6QXt+816DH2bZ55
FvL7L8VvNSnnwaC/Mc534Bc/x4b8Tg/IMY8ojnu3Z0G8nu+T527d+n1cm2Md
5fklGQftrQDr9Lsc8zOdMOf9IH//6/tcRtD1iPucEkW7KPzv64jWOew2QrJx
+14L/W+MKH//cfhfXOfBML8xznfgB7fjwG0MZrkXe4jHPNyuxYeJGw+71HPr
3yTp43Ob5Rr+wcp5FkKeCZaxS93Gj/qvz/mZSJi/Sdn1pf+f132Hzj6XEaWv
uB3HhYxrHGYf+Wnntp657ksVev+3kHWFdOL2veY6xsLc/y3k91+K32pSzoOF
/sY434EXbseWjPHwrMvn8rxudp8uwe0+rdczskFx6+flln8XuBy3vlte98gg
3N8kt35pXuMRn+RzGVH6ittzM+fmmV/YZRXSzm093Z57zVBo/49C1hXSidv3
musY89P/I8rffyl+q0k5DxbjN8b5DgSvY2sT5Ywnlj1Nrk8flzWPYS717lBO
H/dcyHQZh+KJHHXkvw9Xeqyn379N0re9X551aesyT/oyehPmb9KbLm2Gu9Tb
xKNusf3P7b815J1NXu+ekfHNrsixrG9d5uc2jkqQdRTcxn+RZ9Obqtp4jc0R
ZPyXQtYV0onb95rrGHvdpX62I73pUifs7z/q32qSz4NB/45wvgO/5PqNyXjL
K1ymy3X77LEAsscykjyknN/3lsp5PqSZlW5WDlPOmJrvuyzTjbEe61nzd+/n
vZMyFu4UKwOV8w4EecZExrOSsZzuc5nvf/Ksl8mEOe/f4tJGxiWQ/mfSF06+
i4OU9/39Yvuf8IjLdBnv6xTlHMdyzMi4J0cqZyzcXMtz+++Wy5T7OOZBt8lt
/Gc5XuXZWPktyP7cS7lfvwg6/nOh6wrpw+v3J39Dax5jeyv3Y0x+w9njP0f9
+3/EZXrY32qSz4NB/45wvgO/5PuNyZjlbu/YkWN/Yo16ch3f7TfiN7mQ9yl+
nKNtrnE9vbbRT47KM1+TCXPel+czf/Romx2vd44Vuh756st/F6/yqBf02J0X
sr2fOvK7dLvmki8yRkXQ97/lIsxxAMnH7Xu9wuPz7Ejfou1d5hn17z/K32q+
unGeB4P+HQm7bM535uHnGJT3xni9a/TMGvXkPoD894zf33iQc8b0HG13CLGN
uSLXwSf5WCeTCfMdCjJ+Y673osszQmcFWEbQ9fBTv6VyxnL1+/50Lzqojf/b
3m97v8uQe1O3BVjPO5X381ZBlx22PqQDt+9VnsWR6065jjcZHznXvceof/9R
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
vFxxa3fxqxfrkbNH6t4H9NZtOrfR9Srr6QaNGui2XdvqAaMH6AueuyDncmeu
mamPv/543e/Ifrp5++Y5lxW2nPnQmbrfEf3s9avfsL69jq07tdZ9D++rz3jw
jJxtZ705Sw+aMMjeHmnXpFUT3WPPHvqEpScUtC/9bOe1/7tWH37l4Xrr3bbW
Tds01RX1K3Sbrdro3cfsrs9Zfk6k+8ir4H8AZoL/mRKz/G/p0u91VdVgz3Py
9tvvp2+99QfXtl5tTPW/fG3qVtTVh845NPByo9imxb8s1nuO2zPvOkodqZvd
XtywYbOGnu3EKRf/XLudn30p2WKHLTzXffrL03XbLm1Du2NUBf8DMBP8z5QU
5H91rexvZfv1/y4pYfxv//1Pt89pzZu31RMn3qZvvPFzO/Jv+UymHXTQ2a5t
27TppAcOPE6PG3ejvvrqtWXnf0Hbte/eXg8+bbAe/8fxesZrM/SCbxbYket+
/Y/vXz3fU+45xbW9XIfrf1x/PerGUXrm2pmRus3R1xxd7aCDxg+y1+nqz6+2
c/5/zre9r07dOnado+cfvVHbOW/P0Y1aNLKn7TZqN3vbFn6/0P7fmtt18PSD
A69Xjz162G2PXXis6/TZb83Wzdo1s+tUDa2yPXTeZ/Ps5V/y+iX2dm3ZZ8tI
9lG+gv8BmAn+Z0oK8r+D1IZrEp9audvKJFUiHwzqf9de+66uX79S161boS+5
5Jla02fM+Lc9rX79hvq66z7IOz9luP/lK0OnDLXnK85T6vXoWNXRntcRc4/w
rHP4FYfbdTr27rjR50NOH2J/3nv/3q7teu3Xy55e2aRSz/1kru91unjlxU67
ppX6mi+vca1TNazKrrP3xL0j2Q+FFPwPwEzwP1NSkP8dq7zvUYkP/kkV0QeD
+t+oUVfb67bLLiM868g0qTNmzAL8r8By+XuX2/OV+6ilXg95Xk/mJdf7vOrI
dTWpI88F1vx8s203sz+f/Phk13ZnP3p29boev/h43+sk10qlzR5j93CdPvWF
qfZ0ec5PrvdFsR8KKfgfgJngf6akaP6XnS+tPGBlspWdVAQ+GNT/Mm43YcIS
zzoTJvx+vSOOxP8KLPO/nl99nazU69Fisxa+/a/l5i03+lz6sMjnV316lWs7
+TyzrtKPxM/6SH8O6T8ibbz6xex31n729OEXD49kHxRa8D8AM8H/TEnJ/C9y
Hwzqfx06bGsve86cFZ51Zs9+0bkn2HE74/yvy6+62K7WoHEDvXnPzfWQM4bo
y969LPR8J/11UvV8g6xHFNskfYplXkfOO9KzjvSvlTq7HLXLRp/L9UDl0/86
9Orga33G/H6MXX+rflt51uk2oJtdR/r3SrY/cHvdtHVTe32kD7I8s3jpG5dG
sn/8FPwPwEzwP1MSm/8V7INB/a9Jk5b2sqS/h1edG274zK7TtGkr4/zPLY03
aazPeviswPNc9OMiu5+CCnCPNMrtlr4a4k5169XVe5+yt576/FR99RdX25Hr
b3v9di+7b4iMrSJ1a7Zt380Z22fKE1Nc5z35scnV6yrL8LM+Mo6L1P/NDb/x
rJMZA0f6TMu6uX0f4uan3Ovenybqgv8BmAn+l95cu+Kv+qQrfqfPv3tB3hx5
/oQrra97n5CZqaLzv+x8ZeVJKwus7OF2jAb1v4oK57rOrbf+6FlHxn6ROvXq
NTDG/+S606ibnD641/1wnZ63bp6e+JeJutOOnRwHbNlYz3lnTqB5Sp9badu5
b2fbBf20iXq7pb/FTiN28jzGZJrU8Vp3uf7mNt9MHw37OGlQL+96TH9pul1X
+hRL/2iveplnFmWsP/lfr77H0n9Evquo9pNXKTv/07rKyt6ElGGaRPlTwf/S
mYUv/003bNKoWE4WV36x0iD7GC2O//1onP95lYXfLdRddulir4v0ifXbbsRM
5zlLed5Nxizx2y7q7T79gdPt+7Nex5VMkzrZ7WSdM88A7n7C7vb/L14s/yvj
Wqsajpbdd8StyLVGqSv/m6teZp4SGVPbrU6m73Ep+geXof/dbUUTUoapivKn
gv+lL+J+m3V17rmJA263+866ao9+OdN2y81fUc591zB5SRXf/b638qzbMcr9
3+IXGX9O1kX6xPqpf9jlhznXqJpU6t/963eBluVnu72Ok+x68vycXJuTMf7k
uTkZ889t/D+p4/Y+jfF/GF/9HGB25N6svPdE/t1i0xY511eu98n1U6l74YoL
c9aVe+2ZZXj1Pc7ce950m00D7dswBf8jJDXB/wzOopX/0B26b+Vc1+jW2f7/
/bVNzPN/mXxk5R614TnAOl4LD+p/9P8IXjJ9eOV6WL66GfeT+5hu19XyFT/b
7XXcZNfLXCeTdcq3vlLXbfqMVTP0wBMH2uOxZN7/JveExRfl2UBp231g95zr
K2NbSz15/i/f9m++3ebV25Ov74mf76PQgv8Rkprgf4YmvPslwv98+142Qf2v
X79D7GUy/ov/Uu1/jXP7RuZ6mNzD9HrfR74S5XZnxlqRMV686mTGf/Hbh6Nm
Ofiig+22QycPzVkvc//8hCXe7wzOlL6H9fXvf3m+jygK/kdIaoL/GZjC3C8W
/wvte9kE9b8g4z+PHj0f/7PK6fefnvf+7yGXOF4tfW3lvmnYZUW53Znn93KO
/7duXiiXkv4Yck1Q2k57cZpnvcx4zuKiMv5fvvnKO+Ey+yDf2NN+78cXUvA/
QlIT/M+wFO5+JfG/D60sszLeSk9VgO9lE9T/5P1v0q/D6/1v8pnz/rdKvXDh
+8b734JvF+jOO3e210XGAnSrI+/AVevdb9yycQUtL8rtzow9I+9486qTuWYp
/ZyDzFv6Xkg7rz4amSLPGNr7zmffmSs/utJ2UXveed49F6Q/TtiC/xGSmuB/
BuXal/6mN+2yRYHuV7D/HaNK6HvZBPU/ybBhp9rr2bx5Wz1x4m12XxCJ/Fs+
k2kHHHCmr3mpMvC/Tjt1sh3p/Ged/hGLflqk5348V59818nV79CV61fyLrfs
tgdNO8hxv4q6euydYwtelyi3++hrjrbn5dr/w9rWgScNtKdJnWOuPab2frGc
UK7HzVzjjIkj7aQvTGbsl2btmuk5b3uPiSP3zeW9d1LXbYwZr3LQ1IOq94P0
Nc70PZbxX3b7zW725zKOTNDxeMIU/I+Q1AT/MyTRuV/B/reVlX+pEvleNmH8
b8mS73SvXnt7Xq+sqhqsly79Pqfv5Uua/C/ftkj/Vrf+sX7a1szl79f2R79t
w2zX4p8X6/7H9c87bxljT+oGWbe2Xdrq6S9Pz7n84xYdZ9fdZtA2gdZb/Hun
kd5jFopThulbE6bgf4SkJvifAYnW/Qr2v1gJ43+S2277Sf/mN/N0ly476YYN
m9rp0mVn+/lAmZbvel++pMn/5L0YQ6cMtd/RJuOUyLU8GYek665d9fAZwz37
IUjxuz9UDP6XKfKuDBnnudUWreyxXiTyb/lM3k/n1U6cV66/yXN+0qdFroF2
7d/V7jMs98XzLVeuq8q6j70j3HVReV+c9C2W70LWWZxzz5P3LMm4z5mC/xGS
muB/ZZ7o3c9M/0tQYvc/CsWr4H+EpCb4XxlnI/frvlVE7of/4X8UinvB/yJI
5jp20ucZZZYv1+qYY7TaaiutGjbUqkEDrTp21GrIEK0uvlirl14q/ToVus+S
vs/xv7JN8dwP/8P/KBT3gv8lwDvS5iLnn69VnTr5n+tI0vfgZ52SvM+d4H9l
mOK6H/6H/1Eo7gX/K7J3JGmeUWTZMme96tfX6tRTtXr+ea0++0yr77/X6p13
tPr737U65xyttt229OuG/wUC/4s/xXc//A//o1DcC/5XZO9I0jyjyIABznot
Xhz/ukS9P5O6zzcE/yujlMb98D/8j0JxL/hfidwiCfOMIk2cdy6qr7+Of12i
3p9J3ecbgv+VSUrnfvgf/kehuBf8rwRu8eGHWp19tlbbbef4U+PGzr8nT9bq
o4/yz1PuqQ4bplWbNk4/i06dtJowoTht86Wy0pn3xx8Xtp/uu0+rAw7Qql07
Z722sM6FY8c695Az9R97TKuRI7XabDPnfnOHDlqNG+dvu7M/8/OMYjH3G/5H
YnE//A//o1DcC/5XZP975hmt2rb19o/27bX6z3+85yl9Lbzadu3qPHsXZdt8
2WEHp/28eeH307nneq+XuN5bb2k1a5Z3H5Nu3bT64ovi+V8x9hv+R2JxP/wP
/6NQ3Av+V0T/E0+Qa1YybccdtfrHP5z7phK5vpRxKbn29fnn3t6y775aPf64
VuvWOdefli7VqnVrZ5r0tfBanzBt82XRIqdtvXpanXyyVk884fT9CLKfJHvt
pdUjj2j16afOtUTpVyLXAmWaXBvN1Hn4Ya0++cSJ9ce02qXPO8//95BvWin2
G/5nfOJxP/wP/6NQ3Av+V0T/u/RS5/OePd2fl/vqK6222capI9e73OYpY+y5
LfPmm53pvXp5r0+Ytn4i963r1t2wHLk/Kn4rPnj33d4+mKl/+OHu08Wx8tVZ
ssSZXlVVPP8r1n4rPPhfShOf+6Xb/6ZN03Wt/zSsSGtk/V02C/+jJKLgfxHE
yy36r3839Z13ere9/XanjvSrdZvnK6+4t3vvPWe6PEvotT5h2vrNyy8747/I
OC/Z92m33NK5vum1Xl5jQ7//vv86ubY7yHdU6v1WWPz43yQrP2z0fUSQTTZt
q/c86kA9etbZ+uJ/3KiXvPtE7E6VlsTrfun2vzKl2v8ISUj+oMqBJPnfJps4
n0v/D6+2GZ9p1cp9nj/9FHy5hbQNE3kWT+7lXnSRVt27O/OV/hpyb9htmT/+
mH+9/NQJsk1+trfU+y14/PjfBar2bzvyVNSr0Fv23BonDOB+nbbrpm94/cEY
1gP/SxiNVPzne0Jq5h5VDiTJ/yoqnM9zucwPPzh15Hm6sL5SiOtEvS9kW484
wpn3PvsUZ73CbHexl12a+L3/28zKJvmy4L/3zL5pzT91vlz36j/0tHsW6eMu
Pk0PGLmf3nzrTrpOzfv/64MTZrnfir8mwP3wvwRSff1v3rp5hMSWYecMy/z9
5v5v2Hg5gZ/rfx984NTxuv4XtQeVwmPWrnXm3bRpaR0M/wtEIc//3fLWY3r6
367Xv7nkDD3w8GG6Y48urk5Yt6KuPU3qSF1ps+Sdx2N3s1K4X/utOibA/dLt
f3fcoZ+z8mmKs8Jls3j+j5KIwvN/EcTLCXbd1flc+rZ6tc08/7fbbqXxoFJ4
jPRrkXk3a1ZaB8P/AhF1/4/fv40TJs/9Uu9/9P+lUIpU8L8I4uUEmf6/0l/0
229rT5c+wdI3WOp49f+N2oNK4TELFjjzlv4vpXSwXG0bNXKmffllcZZdmiTa
/3DCJLof/of/USjuBf+LIF5OIGPHyXjGMq1vX60eeGDD+H/33++MmSLTZIxA
r/H/ovagQj1G+ndIv1+5pil9gKXvx08/OWP4PfWUVuPHb3ju8dZbi7NeYbZb
xovJeLaXA+J/JUm5OmEy3Q//w/8oFPeC/0WQXE4gTpQZN9gtMp6xvCOkVB5U
qMd4bUfNyHgwU6YUb73CbPeMGe7rWqr9Fk3Kwv/K0QmT6374H/5HobgX/K/A
fPeds/8aNvSuI2O8nHmmM1ae3IeUyL/POsu7b0hS/W/lSq2uuEKrESO06tHD
6eMh1/vkWT+5xibv53Xz2SjXK8x2S7/kadOc65cyXjX+lyj/S7MTJtv98D/8
j0JxL/hfgVm92tl/HTvG5QTEnBjlf2lwwuS7H/6H/1Eo7gX/KzDXXOPsv2HD
4nYDUv4x3v+S5IQbuV+v7gl1P/wP/6NQ3Av+FzLS78H6cauWLZ39d8MNcbsB
Kf/gfwlxwvS4n5n+d/vtP+vRo6/RXbv21Y0aNbMj/x49er49za3NFVe8qo8+
erbecccDdNu2nXX9+pW6QYNGun37rnrQoNF65sznUut/Kuu4d4tbu4tfvViP
nD1S9z6gt27TuY2uV1lPN2jUQLft2lYPGD1AX/DcBTmXO3PNTH389cfrfkf2
083bN8+5rDAl7PwL3a5pL07TB15woO62ezfdpFUTXbdeXd20dVO93ZDt9Ng7
xwbaht/963e6To13qEa1b/wU/C9Esn87MnZfrnd8EBJN8L8EOGG63M88/1u6
9HtdVTXY03O2334/feutP9Rq51U/k7p1K/Qxx8wxyv/y7hPrt3LonEMDL7fY
21Xo/gi7XZmIjy7+eXHe9Vj00yK9xQ5b6MomlfhfFJTK/6S/h4zdN3WqM55L
/G5Ayj/4X8xOuMuBe+lmrZxr/vKuu+S7n3n+t//+p9vfT/PmbfXEibfpG2/8
3I78Wz6TaQcddHatdptt1l0PG3aaPuOMP+q5c1/Tt9zyjR257rfHHsdXHwtn
n31Pav0vaLv23dvrwacN1uP/OF7PeG2GXvDNAjtyfaz/8f2r53vKPae4tm/d
qbXuf1x/PerGUXrm2pmRO07Y+Re6XeJsI2eN1Oc/e76e/9V8Pf/r+frCFRfa
85RrgdL2yKuOzLseR8x13pV6yCWH4H9REMf4L4SUJvhfTE4o/qciunecMv/b
zMqfrFxtZYSVtgUfeAEI6n/XXvuufd9WrtVdcskztabPmPFve1r9+g31ddd9
EMgrf/3rKfb33rPnHsb4X74ydMpQe7499ugR63pEPf+g21WzjJg5wm7bsXfH
nPUuf+9y3ah5I91u63Z64XcL8b8owP9I+Qb/iylzn75Lt9rMuXbUpGVzvfnW
nfI64dFTJ+rJt12hb1rzzzT739FZ2/iLFXmnbUl8MKj/jRp1tb2eu+wywrOO
TJM6Y8YsCOR/Cxe+Z7eTZwnxP6eIw8h8GzZrGOt6RD3/oNtVs8x5Z47dtn7D
+jnr9T28r3ON8d5TSrJv3Ar+R0hqgv/FEK/n/fxeJ5Rs0r6N3mnf3fWhk0+K
wQkL8r9j3bZHufvgSBWxDwb1v4zbTZiwxLPOhAm/X++IIwP53y23fG23q6xs
gv+tL3Lf094nTSpjXY+o5x90u2qWKz+80m7brF0zzzqnP+A8o9B7/94l2zdu
Bf8jJDXB/xLifl5JphMW1f/cstrKdVaOs9KxgGUH9r8OHba112HOnBWedWbP
ftG5P9dxu0D+N3nyX+123br9KrX+1+VXXWynadC4gd685+Z6yBlD9GXvXhZ6
vpP+Oql6vkHWo9jbWeh8gm5XzXL0/KPttn0O7uM6feH3C+3nD+s1qKcvef2S
ku0bt4L/EZKa4H8Jdr/kOmHJ/S8yHwzqf02aOH1zpL+HV50bbvjMrtO0aSvf
87311h9158597HYnnbQ4tf7nlsabNNZnPXxW4Hku+nGR3rLPlvY8jl98fKD1
KPZ2FjKPMNt17f+u1TNWzdAHTTvIvu8rju01hszB0w+25z3snGEl3TduBf8j
JDXB/1Lmfslwwtj9L7QPBvW/ior69jLE17xd7ge7Tr16DXzPd8iQ8XYbGUMw
17yT6n/dBnTTo25y+she98N1et66eXriXybqTjt2chywZWP7ubUg8xw0fpDd
tnPfzrYz+WlT7O2OYv5Btsvt+O4+sLs+79/nuda/dPWlth9u0mET+x5zKfeN
W8H/CElN8L8ycL9CnVA+a9NxU72ptY4yHs2uv94nZ7bYpsuzVrtlIfN09vKL
kC+s/N3tGC2O//0YyP+OOmpm9fXCuXNfD3TPOCn+51Wk32mXXbrY6zLk9CG+
22X6uMrYxzXvYeYrxd7uQucfdLvcjme5nipjSF/xwRW16lcNq3KuId9+Usn3
jVspQ/8bYOVIQsowLaL8qeB/yXG/Qp2wTNIg+xiN+/7vscc6/UClz8dFF/0r
qPsl3v+knPHgGfa6bLbtZr7qH3b5Yc4+aVJpv7siyLL8bLfX8RHV/IuxXXKd
8PL3L7f78u7w6x3s+Uj/D3nPSKbOyXedXH19MOp1D1vKzv8AwBf4X7LdL5cT
nrlkjh5x1gn6tJtm5s3+Jx8j91oPDRnp11ss3/vJykorf7RylNsxGtT/ouz/
kXE/GU/w3HMfCON+qfC/TF9Xef9ZvroZR5L3pUkf1qDL8rPdXsdLVPMvxnZl
l/3P3d+eX83+vZt03MT+b7dp/50W6boXUvA/ADPB/9LnfuGSmOf/xPfkXvRV
ynHLvNezg/pfv37OexQKHf9F3gMsdeR+csD3faTX/xrn9j95X669T+pXeL4X
I18p9naHmX8U25Vd5PlKpTYePybMb6ZY+ylT8D8AM8H/THC/WP0v43szrRyo
fPheNkH9L8j4z6NHz3edfsQRl6x3v3r69NP/UIj7pcL/Tr/fGYsu1/3fzPvJ
5N1m4/8wPvSyir3dQecf1XZllys/csYAlPd7ZK9bkBRrP2UK/gdgJvifCe5X
Uv8r2PeyCep/8v436dfh9f43+cx5/1ulXrjw/VrTDztserX7nXrqskLdL/H+
t+DbBbrzzp3tdZGxAN3qZMYrEUcat2xcQcsr9nYHmX+U25VdMu+P23bvbROz
b9wK/gdgJqb7nxnuV1T/+8HKk1ZmWBlipUlBB6QLQf1PMmzYqfb6NW/eVk+c
eJvdF0Qi/5bPZNoBB5xZq93IkdMcH7D8cNKkO6Nwv0T4X6edOunDrzhcn//s
+frqz6/Wi35apOd+PNfuj9Cxyjn+pb+rvPMsu62MZ2fvk4q6euydYwtel2Jv
t9/5F7JdMjag9BOe8sQU+10fMp5Opv+HjBst4z7LvOvUqWP3rUnKvnEr+B+A
mZjsfwtevNcQ9yvY/+QdvyXzvWzC+N+SJd/pXr329rxOWVU1WC9d+n2tdl71
3eJ27TCp/pdvW1ps2kKfs/ycUG1rRvwnbPtibZvX/AvZLj9tKptW6jG/HxNq
W0pxTGQK/gdgJqb6n+1+nTsY4n4F+199K2OsDFYl8L1swvif5LbbftK/+c08
3aXLTrphw6Z2unTZ2X4+UKa5tVFl6n9Tn59q34+Ud5nJOM9yzUvGqOu6a1c9
fMZwfdWnV+V1Ej8xxf8uXHGh7U3b7LWNbrFZC/v+sfQbln/LZyMuHeE69p/f
bSn+EbGh4H8AZmKi/9V0v85VJrhfwf4XK2H9L0GJ3f8oFK+C/wGYiWn+V8v9
3ngo9nXC/3KD/1EoxSv4H4CZmOR/5rof/of/USjuBf8DMBNT/M9s98P/8D8K
xb3gfwBmYoL/4X74H/5HobgX/A/ATMrd/3A//C8Bwf8oiS34H4CZlLP/4X74
X0KC/1ESW/A/ADMpV//D/fC/BAX/oyS24H8AZlKO/of74X8JC/5HSWzB/wDM
pNz8D/fD/xIY/I+S2IL/AZhJOfkf7le2/jfbyk0pzuUum4X/URJR8D8AMykX
/8P9ytf/ypRq/xt82mBCYou8A3r9sej23ykAUKaUg//hfvhfCmmk1vsfIQnJ
IwoAjCHt/of74X8ppfr637BfDyMktnTbplvG/66P9ycBAKUkzf6H+5nhf2s+
XTPkjc/eGJ7afPrGfi6bVe1/q9etJiS2nDrl1Iz/8fwfgEGk1f9wP3P8zzpH
rY37HFlgcvb/TcD6EYOD/wGYSRr9D/fD/1IW/I8kNvgfgJmkzf9wP/wvhcH/
SGKD/wGYSZr8T9yvXafNcT/8L23B/0hig/8BmEla/A/3w/9SHPyPJDb4H4CZ
pMH/cD/8L+5zZIHB/0hig/8BmEnS/Q/3w/9W43+EFC34H4CZJNn/cD/8T1iN
/xFStOB/AGaSVP/D/fC/DKtD+t/rn7yup82epnv36a2bNG1iR/594ZwL7Wle
7f72xN/0xLMn6r679tUtN2mpK+pV6JatWurdB+2u5904L8w5Fv8jiQ3+B2Am
SfQ/3A//q8nqEP638oOVesCeAzzfdTpw74F61YerXNt6tcnkwBEH5vRHl+B/
JLHB/wDMJGn+V9P9turdA/fD/0L535jxY+xjqFWbVnru4rn6hTdfsCP/ls9k
2kmnnOTatmdVTz152mT953/+Wa94e4Ve8c4Kfd+T9+nRJ4+2rwVK2wsuvSDI
+uB/JLHB/wDMJEn+h/vhf26sDuh/y19ZrhtUNtAVFRX6Tw/9qdb0ux+6255W
WVmpn171dKBz5dlTz7aPz2222yZIO/yPJDb4H4CZJMX/cD/8z4vVAf1v6qyp
9nG034H7edaRaVJn+mXTA50rl7+83G4n7higHf5HEhv8D8BMkuB/uB/+l4vV
Af0v43aXL7zcs85l115m1xl60NBA58p/r/q33a5129ZB2uF/JLHB/wDMJG7/
w/3wv3ysDuh/W3ff2j6e5Jk9rzrSx1fqdNumW6BzpfQdlnaD9x8cpB3+RxIb
/A/ATOL0v/n/vQf3w//ysjqg/zVv0dw+pqS/h1ed59c+b9eR8V3yze+V91/R
Dz7zoJ40eZJ937dx48b6nkfuCXKOxf9IYoP/AZhJXP6H++F/flkd0P/q1a9n
H1evffSaZx0Z+0Xq1G9Q37OOchn7pV//fnb/kYDnWPyPJDZl539aV1ppQkgZ
pk6UP5U4/C/b/W5c/c8E+FG5B/+rGZmmQvhfi5Yt9KFHHxq03zD+RxKbMvS/
u61oQsowVVH+VErtf7gf/heU1THf/xVXfGrlU/r6O67X+wzbp7r/x/1P3+93
nfA/ktjgf4SkJqn1P9wP/wvD6gT1/5BMOGOC3XbQkEF+2+B/JLHB/whJTVLp
f7hf3DHH//Y9cN+ijf8ieW7Nc3Zb6Qfisw3+RxIb/I+Q1CR1/of7JSHm+F+Q
8Z9lPJeg58tnXnvGbtu0WVO/bfA/ktjgf4SkJqnyP9wvKTHH/+T9b9Kvw+v9
b/KZTJN3xMlzfUHPl+NOHWcfz/336O+3Df5HEhv8j5DUJDX+h/slKeb4n2TU
yaPs465Vm1Z67uK5dl8QifxbPpNpJ/72xFrtevbuab/jd9l9y+x3fcg4MZn+
HzfceYM97rO0rVOnjl5y9xK/64P/kcQG/yMkNUmF/+F+SYtZ/vfq+6/a1+eU
yxgukgF7DtArP1hZq51X/Zpp3KSx/fxggPXB/0hig/8Rkpok3v9wvyTGLP+T
vPbxa3rqzKm61w69bGeTVPWpsp8PlGlubaTPsJwPdx24q27Xvp2uqOfcJ5Z/
y2dnXXBW0LH/JPgfSWzwP0JSk0T7H+6X1JjnfwkK/kcSG/yPkNQksf6H+yU5
+F+Mwf9IYoP/RZzMsyLFbhNXli/X6phjtNpqK60aNtSqQQOtOnbUasgQrS6+
WKuXXkrHPk/n/k+k/+F+SQ/+F2PwP5LY4H8JcJG0+Mf552tVp07+56STtM/9
rFNa9n8C/U/cr+2W691v+21wv0QG/4sx+B9JbPC/ErpImv1j2TJnHevX1+pU
65h5/nmtPvtMq++/1+qdd7T6+9+1OuccrbbdNln7HP/zpFD/w/3SEvwvxuB/
JLHB/0roImnOgAHOdi1eHP+6RP19pOc7S4z/4X5pCv4XY/A/ktjgfzH4RhrT
pImzXV9/Hf+6RP19pOc7S4T/4X5pC/4XY/A/ktjgfzH4RpA2L76o1bHHatWp
k9PXQvpcdOum1ahRWj32WO36cl928mSt+vXTqkULrerV06ptW62GDtXq7rvD
b1dlpbOOH39c2D657z6tDjhAq3btnO3ZYgutxo517iFn6st2jRyp1WabOfeb
O3TQatw4rT76yP/+C/KMYs3P5D72sGFatWnjrJ/s9wkTvJdtmP/hfmkM/hdj
8D+S2OB/Cfa/hx7a4F1++1rk855Jk8Jt1w47OO3nzQu/T84913u9xPXeekur
WbO8+5iI937xRfH8T/q3eNXv2tV53tFg/8P90hr8L8bgfySxwf8S7H877eR8
vt9+Wj39tOM+0t9izRqtbrlFq913r91ml120mj9fqxUrnHu1//ufVqtWaTVt
mnPtUOYn17iCbteiRU5buZ548slaPfGEsy5Btk+y115aPfKIVp9+6lxLlH4l
ci1Qpm233YY6Dz+s1SefOLnjDucapkw777xg+zzI/V/Jvvtq9fjjWq1b51zz
W7pUq9atnWnSv8VQ/8P90hz8L8bgfySxwf8S7H+Za38ffhjNuknfDZnfiBHh
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
ORfa8xm8/+Ag7fA/ktjgfwBmgv+ZEvxPhXStV95/RT/4zIN60uRJ9n3fxo0b
63seuSfIPPA/ktjgfwBmgv+ZEvxPBXStTJua6de/n777obuDLh//I4kN/gdg
JvifKcH/VAT+16JlC33o0Yfqp1c9HWRe+B9JbMrO/7Sea2UFIWWYblH+VPA/
U4L/qZCu9dpHr+mnVj6lr7/jer3PsH2q+3/c//T9fueB/5HEpgz9724rmpAy
TFWUPxX8z5Tgfyoi15pwxgR7XoOGDPLbBv8jiQ3+R0hqgv8R/C9gVISu9dya
5+x5ST8Qn23wP5LY4H+EpCb4H8H/AkZF6FrPvPaMPa+mzZr6bYP/kcQG/yMk
NcH/CP4XMCpC1xp36jh7Xv336O+3Df5HEhv8j5DUBP8j+F/AKJ+u1bN3T/sd
v8vuW2a/62PVh6uq+3/ccOcN9rjPMp86deroJXcv8bt8/I8kNvgfIakJ/kfw
vzxRLmO3uCVMu8ZNGuvLrr0syPrgfySxwf8ISU3wP4L/5YkK6X/3PXmffT7c
deCuul37drqiXoVuUNnA/rd8dtYFZwUd+0+C/5HEBv8jJDXB/wj+l67gfySx
wf8ISU3wP4L/pSv4H0ls8D9CUhP8j+B/6Qr+RxIb/K+ALF+u1THHaLXVVlo1
bKhVgwZadeyo1ZAhWl18sVYvvRS3L/hP5rmYuNfDa71qpnFjrTbdVKsddtBq
1CitbrhBqy+/jH9dix/8j+B/6Qr+RxIb/C9kzj9fqzp18j9nHL8zBPOsuNfD
a73ypUkT5zv54Yf417l4wf8I/peu4H8kscH/QmTZMmef1a+v1anW/nv+ea0+
+0yr77/X6p13tPr737U65xyttt02bl8I7llxr4ef9frxR60++cTZ74sWaTVo
0IZ6u++u1f/+F/96Fyf4H8H/0hX8jyQ2+F+IDBjg7LPFi+P2geiSJv9zyz/+
oVWbNk7dMWPiX+/iBP8j+F+6gv+RxAb/CxG51yj77Ouv4/aB6JJ2/5M8+aRW
des6efXV+Nc9+uB/BP9LV/A/ktjgfyFSWenss48/Dt5W7llOnqxVv35atWih
Vb16WrVtq9XQoVrdfbc/D5L7y8OGOde7pM9Jp05aTZig1Ucfebd/7z2tfvtb
rTp3dtpI23331epPf8rtWTU//+c/tTrsMKePi8yjoqLw7cqXoF565JFO/fPO
qz3tu++0uuYa5x5xq1bO/fsOHbQ66iitnnvOe55h2+F/JBHB/2IM/kcSG/wv
RKTfqeyzefPC+4xXJk3K3U76OHi17drVeQ4xu604SubeqFvOOiu//4lPZbeT
/i+FblfU/vfHP254DrDm5/Jc5vbbe6+f+OqNN9aeX9h2+B9JTPC/GIP/kcQG
/wsR6XOQOfeffLJWTzzh9P3w03aXXbSaP1+rFSuc+8fSV2HVKq2mTXPGkJH5
yvW9XN4o1+0ef1yrdeuca35Ll2rVurUzTfqd1Gwn46LI9UGZtvPOWj3wgLNc
yf33a7Xjjrn7K9ectvfeWj3yiFZffRXddkXtf2+95dSX63OZz6RP8E47bfDC
e+/V6t13tfr2W61eftlxU7lnLN/nCy8U3g7/I4lKev1vzadrTrByRlrzxro3
3PY9/kcSEfwvZORep5z7M34i90PFpcQH5X6nXx+sGelPIvMaMcLbg2S8Qbe2
N9/sTO/Va+PPL7/c+byqyvGW7Hbiaj175ve/vfbS6uefw+2rXNsVtf/JNkr9
Ro02fCbjA8pnci9a+g67tZs61alz3HGFtyte/PjftlYusTIzX/rut8eTv550
vM6VAyYco7cbsJM+/NyT9exHb9O3f/hUAnyGmOJ/ZUq1/+2w8w6ExJZNN980
c46dH+9PIiJKOf6zXAOS8V9knJfssQC33DL49S65nidtt9jC24NeecW9rTzf
J9NlbOSan2f6Kv/f/3kv94478vvfww+H30+5titfgvrfN9/U9r/Bg53PHnvM
u93bb2/43gptV7z48b+bNzoOI079yga6a5+eevCoEXrsVefpWY/cihMmPvhf
wmikivgbJSREHlPlQFzvf/viC+fe6EUXadW9u7NPpZ+A3BuuWU/ux86a5dxP
lP4Rcu8w+7uQ/iVeHvTTT8FcSforyGcffujd7oMP3NvWnKfbPd8otitq//t/
/8+pL31UMp/J+shn0l8lk0w/YfH2mu4u31mh7eL1v65WzrYyOV8GHrH/g0dP
nahz5YjzxusdhwzQ2++1q27TcVO3vxs4YeKD/yWM6ut/I2aOICS29Bxcfe9v
Xrw/iYhIwvt/5V7hEUc4+3WffTZ8/uabG57Fy5cwHuRWJ+NhXvcvJfKcWyHL
LWS7ova/P/zBqT9wYO194DeFtovX/3wT5vm/m998RE//2/X6N5ecoQcePkx3
7NFF13F5D05F/Xr2NKkjdaXNre8vT4ALmZj0+t8dd+iJVi5IcU512axq/7ue
Qomx/PrCX2f+ZvP8X5RZu9bZr02bbvjs0EOdz6T/8F13abVmjXO/MvNcnTha
1P63ySbOZ7nGhvFz/S/XcgvZrqj9L+Pd0k8681nLls5n0jckyLLDtiteYvc/
nDCNSbX/rbWiU5yc/X/jPv9TzC74X5Ei90tlvzZr5t8nXnopev/z8/zfnXcW
ttxCtitfgrTLjP8s92lXrtzw+W67OfOQftJBlh22XfGSSP/DCZMe/A//o1Bq
F/yvSFmwwNmv/ftv+CwzDoqbJ/3yi9M/Nmr/u+wy57Pevd3fiyv9ZaXPcCHL
LWS78sVvOxnLJjPG4QknbDztyiudz+Ue9eef+1922HbFS2r8DydMUvA//I9C
qV3wvxCR/h3S73fZMqcPsPT9+Okn530gTz2l1fjxzjUo2a+33rqhXeZanDih
XKuSsVfkvqyMySfPq+V6liys/8m6Sd9U+VzG6HvooQ3j/z34oDMmYKHLLWS7
wvif3E/+9FPnnSMytoyMTZOpJ/1Psj1X7kVn+uRst53zvcn6yXcmXvfMM44n
y1h/UbTD/3DCRAX/w/8olNoF/wuRrHOTa+QcNmXKxu2kL3Dm3XFukbGbo/Y/
ybPPbugH7BY/7//ItdxCtiuKfS2RcW/kHSXSl8VtPq+/vsHlciWqdvhf8Z2w
XgVOiP8lPfgfJbEF/wsRebbsiiuc+5o9ejh9POR6nzzrJ+MsjxvnXBtyayvv
Yhs+3Hlfh/QvbddOq/33d94tkcu3CvE/ibzHTK5Lyr1MGatEfFD6Jkt/2UKX
W8h2hfE/ud8s85f3sh1/vFbXX+9c58w3L7meJ/d05Xql9IuR70yeXZR3Fss4
znItN8p2+B9OmIjgf/gfhVK74H+EpCbG+h9OiP+lNPgfJbEF/yMkNcH/cEL8
L13B/yiJLfgfIakJ/ocT4n95Mm/eGj127PV6t92O1C1atK/+fsP420UX/Wuj
YyWt/qeUy3M0WXFrd/GrF+uRs0fq3gf01m06t9H1KuvpBo0a6LZd2+oBowfo
C567IOdyZ66ZqY+//njd78h+unn75jmXFbbMenOWHjRhkL1Osn5NWjXRPfbs
oU9YeoKv9tf+71p9+JWH661321o3bdNUV9Sv0G22aqN3H7O7Pmf5OZHuz0Lb
Rl3wP0JSE/wPJ8T/8kR5nFODzue2237SnTvvoCsrmxjrf/na1K2oqw+dc2jg
5Ua1XWc8eIZu2Kyh53L6HdFPL/55sWf76S9P1227tI18v+TaxkLaRl3wP0JS
E/wPJyy1/9WxspeVbhEccoEJ439t2nTSAwcep8eNu1FfffXa0O52/PFz7XZH
HHFJ2fhf0Hbtu7fXg08brMf/cbye8doMveCbBXbkul//4/tXz/eUe05xbd+6
U2vd/7j+etSNo/TMtTMj9Zs5b8/RjVo0sue326jd7PVb+P1C+39rrtvB0w92
bT/7rdm6Wbtmdp2qoVW2S877bJ49j0tev0Qffc3Ress+W0a6PwttG3XB/whJ
TfA/nLDU/rd/je0Ul1lq5QRVIh8M439e1wODtFm48D3dqFFzvemmW+slS74z
1v/ylaFThtrz7bFHj5Kvx5DTh9jz6r1/b9fpvfZz3mtQ2aRSz/1kbq3pVcOq
7Ol7T9w78LIL2Y5Sf/e5Cv5HSGqC/yUghTjh0veeTJv/HZu9XaqEPhiX/+26
6+F2m8mT7w09DxP87/L3LrfnK/dgS70em227mfMdPT7ZdfrZj55dvbzjFx+/
0bSpL0y1P5fn/OR6Xyn3Z6m/+1wF/yMkNcH/EppkO2HR/C8771tZZmWSlZ2U
c++4IOLwv3PPfcCu36fP/gU5pAn+N//r+dXX2Eq9HtIPReZ11adXuU6XzzPL
63t4342m7XfWfvbnwy8eHmrZhWxHqb/7XAX/IyQ1wf9SlOQ4Ycn8L3IfLLX/
LV36vd5ss+66Xr0Geu7c18vO/7r8qovtag0aN9Cb99xcDzljiL7s3ctCz3fS
XydVzzfIekSxTfUb1vftfx16ddhoWrcB3ezPpX+vZPsDt9dNWze15yn9iPcc
t6e+9I1Li7I/i/VdhCn4HyGpCf6X8sTjhLH5X3Y+UAF9sNT+d9hh0+26Bx98
TkHXEJPqf25pvEljfdbDZwWe56IfF9n9I5TL/dV86xHFNrXv5oztM+WJKa7T
Jz82uXp54nY1p2XGopG+y9KH2W2/iJedcq97v5ZC9mcxvouwBf8jJDXB/8ow
N67+pz7vj/P1URf8Vv/qoL11u06bu54b6jWor7vssK3e+7jhetTMs/T4+VP1
+XcvyJsjz59wpdV+n5CZ6bYuEeUTKw9ZucJKH7djtJT+N2/eal2/fkPdqlUH
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
AAAAAAAAAAAAAAAAAAAAgMH8f96ku7I=
    "], {{0, 467.}, {640., 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{640., 467.},
  PlotRange->{{0, 640.}, {0, 467.}}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8663031730231915`*^9, 3.8663031730271883`*^9}, {
   3.8663032958628035`*^9, 3.866303321769836*^9}, {3.8663042162307863`*^9, 
   3.866304242761509*^9}, 3.8663046498083286`*^9, 3.866304753760747*^9, 
   3.866304894468725*^9},
 CellLabel->"Out[31]=",
 CellID->495131198,ExpressionUUID->"a6e8d116-877c-46d7-ab11-99473d3db0a6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Basic Description",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"LongDescription", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Give a short paragraph explaining your paclet. This is the first \
text that users will see when visiting the main landing page of your paclet.",
          "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoLongDescription"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "a09933b7-a188-4093-9dd7-c9415ced416e"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "LongDescription"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Basic Description", "LongDescription", "TemplateCellGroup"},
 CellID->433339604,ExpressionUUID->"c8dc1a9d-e5b5-419a-9c71-58563fa45ecd"],

Cell["Functions for manipulating and creating associations.", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8663023726468997`*^9, 3.8663023912400208`*^9}},
 CellTags->"DefaultContent",
 CellID->441612482,ExpressionUUID->"c964c2b7-56ff-4c8b-a1e2-e552d0bcc035"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Details",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Details", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Details may include a long description of the resource's contents, \
history, methodology or other relevant information. Give references here if \
they are directly relevant to the resource. The details will appear above the \
examples on the webpage for the resource.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoDetails"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "cb2d89c3-d3d1-4933-93ad-caed943abbc4"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Details"},
 DefaultNewCellStyle->"Notes",
 CellTags->{"Details", "TemplateCellGroup"},
 CellID->484110581,ExpressionUUID->"f9962572-297b-49a2-b55a-9a51f1d1fe6d"],

Cell["Additional information about the paclet.", "Notes",
 TaggingRules->{},
 CellTags->"DefaultContent",
 CellID->889292814,ExpressionUUID->"f71be5cf-fda5-48dc-8f96-cdf292f5cdf7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Main Guide Page",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"MainGuidePage", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Choose one of your documentation guide pages to feature as part of \
the main landing page for your paclet. This guide page should correspond to a \
general overview of your paclet.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoMainGuidePage"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "82528383-05f1-4373-a0a5-b53f3e23d334"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "MainGuidePage"},
 DefaultNewCellStyle->{
  "LocalFileInput", TaggingRules -> {"FileInputProperty" -> "MainGuidePage"}},
 CellTags->{"Main Guide Page", "MainGuidePage", "TemplateCellGroup"},
 CellID->254653237,ExpressionUUID->"5db90e8e-4948-49a2-b130-2139b453c67d"],

Cell[BoxData["\"\<Documentation/English/Guides/AssociationFunctions.nb\>\""], \
"LocalFileInput",
 TaggingRules->{"FileInputProperty" -> "MainGuidePage"},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->835369788,ExpressionUUID->"d549e634-daa3-487e-abc1-aecdf2a35fb1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Examples",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"ExampleNotebook", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Provide examples showing how to install, configure, and load your \
Paclet along with some basic usage. This section will be displayed on the \
main landing page for your Paclet when deployed to the cloud or published in \
the Wolfram Language Paclet Repository.\n\nThe default content appearing here \
shows the recommended structure for this section, but any of it can be \
removed or changed as desired. Use additional cells and cell styles as \
needed.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoExampleNotebook"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "13135d60-7022-4eda-9d6a-51a7787cd0cf"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "ExampleNotebook"},
 CellTags->{"ExampleNotebook", "Examples", "TemplateCellGroup"},
 CellID->405986742,ExpressionUUID->"cee4afc8-2dae-4ce7-a573-10b114217414"],

Cell[CellGroupData[{

Cell[TextData[{
 "Initialization for Examples",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"ExampleInitialization", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Put any initialization code that's needed for evaluating examples \
here.\n\nCells marked as excluded will not appear anywhere in the published \
paclet except for the definition notebook.\n\nCells can be toggled as \
excluded using ", 
           Cell[
            BoxData[
             StyleBox[
              RowBox[{"Tools", 
                RowBox[{" ", "\[FilledRightTriangle]", " "}], "Cells", 
                RowBox[{" ", "\[FilledRightTriangle]", " "}], 
                RowBox[{
                  RowBox[{"Mark", "/", "unmark"}], " ", "selected", " ", 
                  "cells", " ", "as", " ", "excluded"}]}], StripOnInput -> 
              False, ShowStringCharacters -> False, FontFamily -> 
              "Source Sans Pro", FontSize -> 14, FontWeight -> "SemiBold", 
              FontColor -> GrayLevel[0.28627]]]], 
           " from the toolbar above."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoExampleInitialization"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "6e10eb8f-cc7f-489d-a5ff-e68509cdc69f"]
}], "Subsection", "Excluded",
 Editable->False,
 Deletable->True,
 TaggingRules->{"TemplateGroupName" -> "ExampleInitialization"},
 CellTags->{
  "ExampleInitialization", "Initialization for Examples", "TemplateCellGroup"},
 CellID->468286435,ExpressionUUID->"a54196df-1213-44b1-a0ed-19b0c3334c4e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PacletDirectoryLoad", "[", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"Expression", 
       StyleBox[
       "\"Paclet Directory\"", "IconizedCustomName", StripOnInput -> False], 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["Symbol", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["0", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    PacletResource`DefinitionNotebook`$PacletDirectory,
    SelectWithContents->True,
    Selectable->False], "]"}], ";"}]], "Input", "Excluded",
 TaggingRules->{},
 InitializationCell->True,
 CellLabel->"In[106]:=",
 CellID->633295841,ExpressionUUID->"1b28ac59-3255-4175-8a0c-435806beb980"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Needs", "[", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"Expression", 
       StyleBox[
       "\"Paclet Context\"", "IconizedCustomName", StripOnInput -> False], 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["Symbol", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["0", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    PacletResource`DefinitionNotebook`$PacletContext,
    SelectWithContents->True,
    Selectable->False], "]"}], ";"}]], "Input", "Excluded",
 TaggingRules->{},
 InitializationCell->True,
 CellLabel->"In[107]:=",
 CellID->256310072,ExpressionUUID->"619238a6-777a-416a-96a1-22f23db673df"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Basic Examples", "Subsection",
 TaggingRules->{},
 CellID->462042388,ExpressionUUID->"bfe2b8db-c490-4a3a-a328-8fa4639203df"],

Cell[TextData[{
 "Generate an ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Association", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/Association",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "6b2128d9-8226-47a0-acf9-04492411ac0c"],
 " to label the results of different operations on an expression:"
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.866304306510272*^9, 3.8663043107995005`*^9}, 
   3.8663047813212247`*^9, 3.8663049155914807`*^9},
 CellTags->"DefaultContent",
 CellID->319073343,ExpressionUUID->"4d7568de-bdb3-4487-bae6-ad86f62d051b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AssociationThrough", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"f", ",", "g"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.866304282376556*^9, 3.8663042962606936`*^9}},
 CellTags->"DefaultContent",
 CellLabel->"In[3]:=",
 CellID->593829399,ExpressionUUID->"43ed598a-6c90-4dd3-8387-355a8775e3da"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"f", "\[Rule]", 
    RowBox[{"f", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], "]"}]}], ",", 
   RowBox[{"g", "\[Rule]", 
    RowBox[{"g", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], "]"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.866304928127951*^9},
 CellTags->"DefaultContent",
 CellLabel->"Out[3]=",
 CellID->802817383,ExpressionUUID->"bb8fbd55-a786-468a-ab9c-9f11a01ce5fa"]
}, Open  ]],

Cell["\<\
Perform multiple statistical operations on a single distribution, returning a \
single expression:\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8663049522418785`*^9, 3.866304955092183*^9}},
 CellID->426147306,ExpressionUUID->"a8678631-446a-4406-a9ff-8d0f6846a639"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AssociationThrough", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "Min", ",", "Max", ",", "StandardDeviation", ",", "GeometricMean"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8663049402209787`*^9, 3.8663049656618814`*^9}, {
  3.8663691227723475`*^9, 3.866369125858063*^9}},
 CellLabel->"In[94]:=",
 CellID->191253622,ExpressionUUID->"2d4099d7-a0c3-4887-beb6-f8c71281aee3"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"Min", "\[Rule]", "1"}], ",", 
   RowBox[{"Max", "\[Rule]", "4"}], ",", 
   RowBox[{"StandardDeviation", "\[Rule]", 
    SqrtBox[
     FractionBox["5", "3"]]}], ",", 
   RowBox[{"GeometricMean", "\[Rule]", 
    RowBox[{
     SuperscriptBox["2", 
      RowBox[{"3", "/", "4"}]], " ", 
     SuperscriptBox["3", 
      RowBox[{"1", "/", "4"}]]}]}]}], "\[RightAssociation]"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.8663049680843606`*^9, 3.8663691271615486`*^9},
 CellLabel->"Out[94]=",
 CellID->397084606,ExpressionUUID->"d8caadba-48cb-4c45-a614-d53f478a4019"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Statistical Examples", "Subsection",
 TaggingRules->{},
 CellChangeTimes->{{3.8663192054310665`*^9, 3.8663192098473597`*^9}},
 CellID->417060103,ExpressionUUID->"fe8394e6-b16b-4a6a-ac59-8ef1d452542d"],

Cell["\<\
The keys are cities and the values are the cost of a round trip airplane \
ticket:\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8663050608462734`*^9, 3.8663050953319635`*^9}, {
  3.8663053382268553`*^9, 3.8663053689344463`*^9}, {3.866307915769803*^9, 
  3.8663079581936684`*^9}},
 CellID->35621043,ExpressionUUID->"eb0d7d48-bb8c-4181-b8b2-4a33c66cdf06"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cities", "=", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<Miami\>\"", "->", "230"}], ",", 
     RowBox[{"\"\<San Diego\>\"", "->", "651"}], ",", 
     RowBox[{"\"\<New York City\>\"", "->", "221"}], ",", 
     RowBox[{"\"\<Chicago\>\"", "->", "279"}], ",", 
     RowBox[{"\"\<Seattle\>\"", "->", "722"}], ",", 
     RowBox[{"\"\<Salt Lake City\>\"", "->", "768"}], ",", 
     RowBox[{"\"\<Boston\>\"", "->", "221"}], ",", 
     RowBox[{"\"\<Honolulu\>\"", "->", "970"}], ",", 
     RowBox[{"\"\<Denver\>\"", "->", "529"}], ",", 
     RowBox[{"\"\<Boulder, Colorado\>\"", "->", "529"}]}], "|>"}]}], 
  ";"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.866305098066233*^9, 3.8663051103985076`*^9}, {
   3.8663052911558485`*^9, 3.866305334895134*^9}, {3.866305375236453*^9, 
   3.866305490075574*^9}, 3.86630560494057*^9},
 CellLabel->"In[8]:=",
 CellID->161848973,ExpressionUUID->"7c7bbedd-471d-4601-b2b5-3df666bd5cf4"],

Cell["\<\
I create a function to compute the geographical coordinates of a place from \
Wikidata:\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.866307969744459*^9, 3.866307990408164*^9}},
 CellID->161376100,ExpressionUUID->"18d094c8-30ed-443c-8953-d11cecac7229"],

Cell[BoxData[
 RowBox[{
  RowBox[{"WikidataGeoPosition", "[", 
   RowBox[{"place_", "?", "StringQ"}], "]"}], ":=", 
  RowBox[{"First", "[", 
   RowBox[{"WikidataData", "[", 
    RowBox[{
     RowBox[{"First", "[", 
      RowBox[{"WikidataSearch", "[", "place", "]"}], "]"}], ",", 
     TemplateBox[{
       RowBox[{"ExternalIdentifier", "[", 
         RowBox[{"\"WikidataID\"", ",", "\"P625\"", ",", 
           RowBox[{"\[LeftAssociation]", 
             RowBox[{
               RowBox[{"\"Label\"", "\[Rule]", "\"coordinate location\""}], 
               ",", 
               
               RowBox[{
                "\"Description\"", "\[Rule]", 
                 "\"geocoordinates of the subject. For Earth, please note \
that only WGS84 coordinating system is supported at the moment\""}]}], 
             "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
       "\"coordinate location\"", "http://www.wikidata.org/entity/P625"},
      "ExternalIdentifierURL"]}], "]"}], "]"}]}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.866305050092601*^9, 3.8663050572716312`*^9}, 
   3.8663052070854855`*^9},
 CellLabel->"In[5]:=",
 CellID->434551158,ExpressionUUID->"b6490d37-7648-4306-9625-dc8caea1ff11"],

Cell["compute the distances to the cities:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8663079034592247`*^9, 3.8663079113233304`*^9}},
 CellID->45101711,ExpressionUUID->"3fba17df-368a-4a60-aa2d-5d6c82587c37"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{"AssociationMap", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Position\>\"", "->", 
        RowBox[{"WikidataGeoPosition", "[", "#", "]"}]}], ",", 
       RowBox[{"\"\<Distance\>\"", "->", 
        RowBox[{"GeoDistance", "[", 
         RowBox[{"Here", ",", 
          RowBox[{"WikidataGeoPosition", "[", "#", "]"}]}], "]"}]}], ",", 
       RowBox[{"\"\<RoundtripTicket\>\"", "->", 
        RowBox[{"cities", "[", "#", "]"}]}]}], "|>"}], "&"}], ",", 
    RowBox[{"Keys", "[", "cities", "]"}]}], "]"}]}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8663064871823487`*^9, 3.8663064895923977`*^9}, {
  3.8663069911040673`*^9, 3.8663071185033436`*^9}, {3.8663071809324646`*^9, 
  3.86630718198582*^9}},
 CellLabel->"In[48]:=",
 CellID->502571622,ExpressionUUID->"f6b09c09-ed2f-48e7-a5e7-eeaf755c2ef8"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Miami\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"Position\"\>", "\[Rule]", 
       RowBox[{"GeoPosition", "[", 
        RowBox[{"{", 
         RowBox[{"25.783333333333`", ",", 
          RowBox[{"-", "80.216666666667`"}]}], "}"}], "]"}]}], ",", 
      RowBox[{"\<\"Distance\"\>", "\[Rule]", 
       TemplateBox[{
        "1415.6800943393928`", "\"km\"", "kilometers", "\"Kilometers\""},
        "Quantity"]}], ",", 
      RowBox[{"\<\"RoundtripTicket\"\>", "\[Rule]", "230"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"San Diego\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"Position\"\>", "\[Rule]", 
       RowBox[{"GeoPosition", "[", 
        RowBox[{"{", 
         RowBox[{"32.715`", ",", 
          RowBox[{"-", "117.1625`"}]}], "}"}], "]"}]}], ",", 
      RowBox[{"\<\"Distance\"\>", "\[Rule]", 
       TemplateBox[{
        "3191.1013571589115`", "\"km\"", "kilometers", "\"Kilometers\""},
        "Quantity"]}], ",", 
      RowBox[{"\<\"RoundtripTicket\"\>", "\[Rule]", "651"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"New York City\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"Position\"\>", "\[Rule]", 
       RowBox[{"GeoPosition", "[", 
        RowBox[{"{", 
         RowBox[{"40.7`", ",", 
          RowBox[{"-", "74.`"}]}], "}"}], "]"}]}], ",", 
      RowBox[{"\<\"Distance\"\>", "\[Rule]", 
       TemplateBox[{
        "768.2579435444189`", "\"km\"", "kilometers", "\"Kilometers\""},
        "Quantity"]}], ",", 
      RowBox[{"\<\"RoundtripTicket\"\>", "\[Rule]", "221"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"Chicago\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"Position\"\>", "\[Rule]", 
       RowBox[{"GeoPosition", "[", 
        RowBox[{"{", 
         RowBox[{"41.85003`", ",", 
          RowBox[{"-", "87.65005`"}]}], "}"}], "]"}]}], ",", 
      RowBox[{"\<\"Distance\"\>", "\[Rule]", 
       TemplateBox[{
        "585.53413235912`", "\"km\"", "kilometers", "\"Kilometers\""},
        "Quantity"]}], ",", 
      RowBox[{"\<\"RoundtripTicket\"\>", "\[Rule]", "279"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"Seattle\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"Position\"\>", "\[Rule]", 
       RowBox[{"GeoPosition", "[", 
        RowBox[{"{", 
         RowBox[{"47.60621`", ",", 
          RowBox[{"-", "122.33207`"}]}], "}"}], "]"}]}], ",", 
      RowBox[{"\<\"Distance\"\>", "\[Rule]", 
       TemplateBox[{
        "3367.1005722071873`", "\"km\"", "kilometers", "\"Kilometers\""},
        "Quantity"]}], ",", 
      RowBox[{"\<\"RoundtripTicket\"\>", "\[Rule]", "722"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"Salt Lake City\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"Position\"\>", "\[Rule]", 
       RowBox[{"GeoPosition", "[", 
        RowBox[{"{", 
         RowBox[{"40.75`", ",", 
          RowBox[{"-", "111.88333333333`"}]}], "}"}], "]"}]}], ",", 
      RowBox[{"\<\"Distance\"\>", "\[Rule]", 
       TemplateBox[{
        "2530.98170613734`", "\"km\"", "kilometers", "\"Kilometers\""},
        "Quantity"]}], ",", 
      RowBox[{"\<\"RoundtripTicket\"\>", "\[Rule]", "768"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"Boston\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"Position\"\>", "\[Rule]", 
       RowBox[{"GeoPosition", "[", 
        RowBox[{"{", 
         RowBox[{"42.360277777778`", ",", 
          RowBox[{"-", "71.057777777778`"}]}], "}"}], "]"}]}], ",", 
      RowBox[{"\<\"Distance\"\>", "\[Rule]", 
       TemplateBox[{
        "1060.2101178512175`", "\"km\"", "kilometers", "\"Kilometers\""},
        "Quantity"]}], ",", 
      RowBox[{"\<\"RoundtripTicket\"\>", "\[Rule]", "221"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"Honolulu\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"Position\"\>", "\[Rule]", 
       RowBox[{"GeoPosition", "[", 
        RowBox[{"{", 
         RowBox[{"21.304694444444`", ",", 
          RowBox[{"-", "157.85719444444`"}]}], "}"}], "]"}]}], ",", 
      RowBox[{"\<\"Distance\"\>", "\[Rule]", 
       TemplateBox[{
        "7331.018253643849`", "\"km\"", "kilometers", "\"Kilometers\""},
        "Quantity"]}], ",", 
      RowBox[{"\<\"RoundtripTicket\"\>", "\[Rule]", "970"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"Denver\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"Position\"\>", "\[Rule]", 
       RowBox[{"GeoPosition", "[", 
        RowBox[{"{", 
         RowBox[{"39.739166666667`", ",", 
          RowBox[{"-", "104.98472222222`"}]}], "}"}], "]"}]}], ",", 
      RowBox[{"\<\"Distance\"\>", "\[Rule]", 
       TemplateBox[{
        "1951.3289333445434`", "\"km\"", "kilometers", "\"Kilometers\""},
        "Quantity"]}], ",", 
      RowBox[{"\<\"RoundtripTicket\"\>", "\[Rule]", "529"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"Boulder, Colorado\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"Position\"\>", "\[Rule]", 
       RowBox[{"GeoPosition", "[", 
        RowBox[{"{", 
         RowBox[{"40.019444444444`", ",", 
          RowBox[{"-", "105.29277777778`"}]}], "}"}], "]"}]}], ",", 
      RowBox[{"\<\"Distance\"\>", "\[Rule]", 
       TemplateBox[{
        "1976.2796684384004`", "\"km\"", "kilometers", "\"Kilometers\""},
        "Quantity"]}], ",", 
      RowBox[{"\<\"RoundtripTicket\"\>", "\[Rule]", "529"}]}], 
     "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.86630704960426*^9, 3.8663070711691136`*^9}, {
   3.86630710563696*^9, 3.866307127603549*^9}, 3.866307192715911*^9},
 CellLabel->"Out[48]=",
 CellID->135486216,ExpressionUUID->"977ac6cb-2152-4f7b-ae6b-f0eeb8009bf7"]
}, Open  ]],

Cell["organize the data for processing:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8663078953994236`*^9, 3.866307899774967*^9}},
 CellID->719430069,ExpressionUUID->"347f89b8-db72-4e0a-949a-1c31e5f39d98"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dataset", "=", 
  RowBox[{"Dataset", "[", "data", "]"}]}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8663073798219376`*^9, 3.8663073819069347`*^9}, {
  3.866307427748054*^9, 3.8663074288611813`*^9}},
 CellLabel->"In[51]:=",
 CellID->196327506,ExpressionUUID->"3ee81c8e-330c-41ed-a8d2-79a40ca0eabd"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
PkU0gfRPb2jGxZpI8QqxeeRTRBNI//SGZlysSaB4v3379pcQYlt8+fLFft1/
/PHHqRsixACy1d7QjIs1+fXXX6l4v379+jchhBBCCCG2hVe89/f3vwshtoWi
KKIVZKu9oRkXa+IV7+/K4xVicyBz6d///d/3Qpw3stXe0IyLNdGTa0JsG/kU
0Qqy1d7QjIs1keIVYtvIp4hWkK32hmZcrIkUrxDbRj5FtIJstTc042JNpHiF
2DbyKaIVZKu9oRkXayLFK8S2kU8RrSBb7Q3NuFgTKV4hto18imgF2WpvaMbF
mkjxCrFt5FNEK8hWe0MzLtZEileIbSOfIlpBttobmnGxJlK8Qmwb+RTRCrLV
3tCMizWR4hVi28iniFaQrfaGZlysiRSvENtGPkW0gmy1NzTjYk2keIXYNvIp
ohVkq72hGRdrIsUrxLaRTxGtIFvtDc24WBMpXiG2jXyKaAXZam9oxsWaSPEK
sW3kU0QryFZ7QzMu1mRNxXt7e3t9ff3w8HDUo5S5u7t7//79/f39CdsgxJrI
p4hWkK3O5M8///xw4NQNqUUzLtZkNcVrUnN34NWrV8c7yiAXFxfWBvt7wjYI
sSY9+JTv379//Pjx9evX7969M6d/6uacHa2MTw+2elS+fPkCP3vqhtSiGRdr
Mlbxvj9wfX1dKPP582cU86FU23hyxfvw8CDFK3qj3qeYLvr06RNiRL/88ot9
TBZjmZiymjJ3nNuRFPYyzZas39r5008/2e/6559/fvbsmf1jjfcF2KNcw0aF
xX777TdrCXax/wslrbUomWt5zb6GjcCckuXxwWwmd8TIW4FRX81hgv5B3ysL
W8cHDdWGq9y1UdZbwIynbNhoDNtsTcr9JMmGFW/l2Wk/ctA4CzXDK1pnrOLd
PXF3d5crc3l5iTKmcv3229tbk8HnkNVQaLwQG6PSp5jbhRwi9jHp90047TKU
tZm5ldyOPKIvb87o+fPnQZl3794FjsmqtR0pPl+/fm17+QKsPOfRKkWC7R73
3bYk5Yq1MyhZqYjsKPG+1qNYXVeWLI/P27dv0Yu4JehsMJh+L/tb06N6Rile
MzYo+Zq52x8uDWjhOUM1g0eZ5ICAggHXNGN/MOzYkGwqc40h9tF+p4Wat6p4
689Occnk2O5TP2fbsXBdLDbAZMV7dXWVLMDshV2keIUQ61PjUyBgDJNDJpDM
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
GPRLlpxslnsXUx3VYL/vNMXLa7dA9THVPIjc+iC/nziWn5DOsQgTZnzUOWe/
1k9PNMFYxWuakKHR3VO4NRCrAMUCyYoaIDXLB7q9vcUh/MYFFS9iwoEa53Hj
ZgvRKDU+BbmIge+uUbzIpqsUP3RV5ouD53fMH5XXy11K8TIH1euBFRRv/XJe
udSLHMjJxFNasaSprCEYE6hczAjUr5cB8QAuxSj9g4fx/YIV00pONksD1xfT
hmKy4uUzVvFvE3XGScXM7g5sg1N/qtVoJyjeUeec/TF/eqI5pr2B4vPnz173
7g4x20D3YnvhlRC59Xvv7u5MdrJ+/9VSihernO0yCcmFr4RojhqfAicSLLYw
6Ap5O7gyQER3DH/NFYS4fmbulvSCinefWoH22IoX5QsLApMJPQ0WLLUaJsTr
gjdTQByiHswyQ2T1EbMJjNI/vtdmSwXZWS452SwhIyuXKImZpni5+EBSmOXq
LFhsW4p37DnnqD890Rxz3jKMN6Ax59avTsaUhvcpsEugeG9ubl69ehU/v+aL
LaV4kdLg84E9UrxiSwz6FN7UDpTAoCsc+wRT7pYrnXjufuKyihe5l37LURUv
4+eDD0b5hTLqG4MYryk0xicnLKSPSx5E+CEqvJDD7GC4jvfY2n58jBdJqlxJ
NRedK5ecbJa4dJqW0rCfqngxUzkj2bziHWV+x/7pieaYo3gJFuOFhsQWBlEL
UMqaPEb2LLBKTPoyxnsMxZtb+cEzbSiEODcGfQpkgDn3YIF3/BDw8EtSS8Dj
1z/BBGmdXMeJeYnJHZdVvPunhD0+cJQTAzlGKV5IlMHkwHrvXK4EkzJ2IX0/
wvHqsj6Vl6uWTW5kgclPrmFCdxVrNcQlJ5sl5mvyAl8TFC8bn9tx84p31Dln
zZ+eaIJFFO+jW5YBApWKNxlE9WspPDw8QC3bX6uEK4OxhuMp3lyMF0weCiHO
ikGfMnj1l3OvY9PeCm63rCEXV7z7HxekOp7iTT5QH8Nw4iKr32NeRq2lwNX7
90+j7YWcT+VFJPlI67jOWZ2MQz225DSzjJOfxzJB8UJ+20dcpcYKbfOKt/6c
c5KfnjhzllK8j1HibqxXk0Aqm9wNVsE9quIt5/EKsSUGfcqHDPiNFGK8E3wl
dolvHa6veH2C35EUb24xtJg4tXgO8Wpjg/j0SGha32afygutdaRH++co3vjV
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
8w9PUOVB5kmp/jwm2mWC4jUxdnFxsfuRy8vLyYorp3ixvVJzooYFVd+aitcu
GexAu4irq6uHhwdf8vpAsqnnlhYizoQJitfO/JBGRlILvXv3LrDVGlFnZWIj
99hBfflCyaBa25FO7fXr18+fP4/rsTI5wTBKJNiAQEAO7lJf0sQMBtxEaWUz
gLlpzhSwGgLHXR6ft2/f5o5rG+2rYDD9XvZ3VGsHqbTVuNf2MSm/0YUk3rDN
MGKTztVphYNqreSgQi40Pp4yQKvwB7LdC5VvT/GyRwUCQWsTBPsMBjn4+dte
ZttBMTODsdcvoiHGKl6GGV+8eIFo5Js3b0zuYuM00dW54vVXEK9evcKo2j8c
50D05poqxSuSTFC83qHHipfawLSTqSkWHhS9hRgvXI8/lvkjVhsTtNZLL7hI
7wTZl5xCqxQJXsGWd6kvaQLGu91Ritf25V42JjYvEEiBti+PDyoJrjUAWxXr
MfSurL4mUGOrFDMwP+s1BzCWnRgQ26UQGGQMnCXLdaKw1YzCLJm8NgyonLL9
4SYLStrh0GD+0ArDvj3FW4jxYkA+ZO74eAvBINtHXy022vRZASvm7eqIHRYn
ZZTivb+/h0nE4ur6+tpk27T0hpziNSm427ritRFDy03ZBmkM9hGXFYOV2EVH
clKEeByveBGJNW8Sq9D9wVPAYn34i3582m1BOHfzO34jfHdSiQVUKl44uOT9
zUqREMeo55cMooX1ijc5EXT3fkDK40ONFMwdFVdwCFCv8UZRGfEzy/TzyF7H
4Wi0czBzwHYPAq25Om0oYEu+TtNIyaMH1E/Z/klXBxvxQyscaHuKNwckq41S
sB3CNbYQ2+7nF5fttru/0OBVttIbtsooxQsJGktTkAtF+vTU29vbuECseE0H
WmHc6L+8vHz/REHQjlW8Pg85mf2bU7zcMeivfbTeFbqZBOHxXCA32BgvaoEj
ohJrKgfKSlq/CiOGGZmZgC2aYJRP4Tmf/wSqBp4iFmaQxxOCfuZxnh8IYlzw
3TUKEDIA7YR+SGY1QKskK6wUCYxRMxw0vyTzOSF96xUveh17fMoqeu3K8QmC
mZhoSPcg6kXbqGxqPTW2mkxnpdILxG1lO5M3sqn5/UYI0SCuyDEvS+v6Kdvn
rylw4ZY7RE7xMlLqr3Q+uPxtZgsHZsAd69M2RjFZ8eIqIxjwyonYP11pxrel
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
Q21J5Va2E694sTtXOavMST5zxVtuQ+FaL1a8yclq7qV1YhRj1+PNrUjG1V8p
3nJaDiHHkyjeXIWM38aK1ycnJ18/ARkcr9VQyeA71/wqwdMULyPbXE9YKQ1d
Mfn596RzqX/nGpIPc76Jj4onv7V9k4KNKbijApg5L8nk1fNXvOXBrK+nAJN1
d6n76f7b40XA6m01+bbfgLIuYiKEjW0uZohe+5SJ+neuzZmygn4uv2SB9uZ7
lHxhcYuKN/dGbJKL0AaXKoXfSLxSn9gS9YqXes/UXSCZKKV8Hi8MzIcTrZhf
zpfbc0KOr3jLvb/YU694gwfQTFLyEbZkHm9cg48S+8SG4HD21WDLKbZtAINR
tY8YVbYqN1CD2RF8Wq1cTGySZRUvfYfXnMk40rQHZ7iv1RbIWj7OMzasl/PU
1hc8qQ25Xl/h+oo3OZhYo9UXY/Rygixh8HyXuuELoYUyi7+GgFTaao3chU1a
swNT4XIfHKKcvORgevXIjf7QycUx5kwZO5i8MbHL39ZP2hs3+tqaVry5Arwi
9vKe5404Vh/MhW2f8GCsaIhRMV7cEwd8w5epqaRi5ONgeLsZi8VPrjE+HGhp
bseqv3b0wjsvUNKOkkymRcN8hXgNHIV63P5cQBiF/eoHTE5gtVyeomYdBu6+
c2+C46WBD//mFC9rwKRY25Lvccb4K6WhN5ZVvHu3fChWWOIzzoH7oFUnQ1XY
KyfweAhzQCZasEoqFxEa++6DgqfmgQpuFOBBfkDVxC2+SfUlrUncjgGx/nKL
b3A8mPTafOSQi81OW1OU0muXyiDl0165CV2EGlv1y4sls3EQx+MLBfhCMb+k
s5c0rNC+RUk/mLGJYqZYLetMvtt68pTxZ8XClNCF5+NymjBenqJFxVtzO4aG
GqxOFlwfFc4w8RNtYjOMzeM17cQX9XpsY6CyGPglJghtd8izQEmyzkCPeTUY
7+WJm+Sh8gwq3B2WSuD6YzWKN5n0e3t7S9lcGJMcViw5qqZdfZQ4p3gf3fVF
0F/C5imloTcWV7z71MrtsQoqx3iDO8sxdly/EimwLRMcbqEj+6d8jN2Q4g0W
aw3wyqG+pNfbMX5Ik4NJUUfiwHg9XG1jl0nT5bfLah5P5Up6Zdg80y3BUmC5
IbJd4pK7VIh4n19hLCg2f8riX1muSb4jKBa3OViFoF3FO5hyEA9ysMoc4MoM
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
oMtgn5khtzxnqf4hxWtzLqeNXiQ1G0+kUyTeomOLhnN2qXilRRPnlx2LtyoS
ir7RaQjYGSsr3vfv36vQ9+bmplbra7tiJfDbt291iP3SGNjd3Z0ONGpnLype
21hbwEEdJr0VL7B23kVWhwC4hp6YUqxh8+iZaDxPY7p46P+HU7wn6zIsblSW
UnJF8qNY1aDIVVQdnWPrv5zZWsLG//TCZKGgrjrP47kSjqqsPUVqn6Qode9e
It/ie9zlmbQZF7gUsxWvtEr+ZSSfcNuSC/t+tzyHcm7p0iHFKxWdJBvduD5+
VXHnh+uMieEiNcXr+U8/hdzeJ6FWIusH3tPt/kmLu1vmNpISnqyjLvpGpyFg
Z6ymeE3rPnv27PQtv/zyiynVpOWPP/6oHownT57E9tZD3v7LRXAmPduBuUIu
Kl4/Nu9WI0n0avECtTFXtotklQGu4ZqnoXNtEFkqoeT95Hft/ROdZGPOQX/W
At/o2NqX40qpv0NHCrPnESe1fFV6uq1YctCYosad3PNlcpKah8Z3h9WY56sy
XH/5saZrUsLV3NKRsfpnrPi1RRSNNeOMNR/O7xG4p5nPJFU99ufnC/4d0Lcv
vh5I5x2o4iXr61tD/58rvnG9IWCjrKN4Te5+9913tt1+vnjxwpThzz//rJa5
iJXO1E9vrz9PF5GcnNG2aJe1sZbW3nXyzc1NbInihQPy+BWvgm+x6FSpJ5N5
uerQqS1e+w3KpM3o2NqXo70K+lrSofPxeRuVja3zVqnnYPNdmqVc19WmSF1F
qSDRri0SOXH8aj9Zd3GvzPNVqZROMVa7c5HTcMvYoF/x6tTFDju7mqd4JVyl
Y5OubOP3F1TL6l+gzA18GZB4+6MtL2cwaXFl2ouX7OVYjf6LvnG9IWCjrKB4
TdBKgibi1mWwadTYg4tbU8WxvUSyHRIbv379uihuJYOtcaydQPHCAZmteHU/
sRHxF1G8FtFUizu6ylNU48XMzH0o3vzBfzt1Wzs10ra1xsWnkxrLLxSRVIjm
i7XE0rcxY6w5fMClyc6zFG8jB5jj+czJhHCPW46qo0b7WjVLgm7QNx4tzH3Y
vw8mqs/L15PMbbxrEK/d2y+7hFf/6hz5eb2wuX1sPuHXGwI2yjzFa3rytwq5
IDQtqo154a7r1bhLOtP0bdLY1WNsLC2dJ35dZsddKF44ILMV7+RaVbMVr4oD
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
0WsB14OvWrqimBS9jRyvOqn1YDohxqZkr405Si8F/SgM/MCaQusUCVFitQ9x
VWPy0q7O43Uien0yh1KLEY3HJscurWaL9vxY3D9Vvmv4ZeYyQOe1Y3sG2U+n
/uk0RL+vDhnCrjqq6H7F68l2uaL1bH7iXcXvKTYeObz9tDbW0tr7loYq26vi
1bVr0ho5Xv8/ps9dbXrPX93e/+NZS5/e9r0t2DTzFO+ff/4ZN5rKNQ2sXfbL
vYVuABimU/HmuS8PHzGmKIIk0lEti8nAHpS/LeaThRSjjyff26N4FdGKKbJO
kZDnqIvNbLq0N2aWPMLGydRQG5ntNta/Do8XZbE+sUV7flwjJToqJtXzFFlR
N15Pp/7pNES/rw4ZIsk3jireJJHoMjgOSYrXPhFRfbkMbqTW96p4dVE9+e0k
DV6c3uIn1FsufucCHg+LKF7x4sWLxl7Dtnvpb54Kvr291S7/8/Xr17bFftrv
seXbt29jywTttZ/J9vfv39c6FBpbHIxBiTJsnc6YUqz/TISNp8LyxlIXM2oa
raunF2qpFWlFa+AarNhAg1TYKlY1SB8W9UmnSPAcdU17CyV48xNpimJeVDF6
6LZ4RAE6SUJ6NE+yuJPzkyTBdBXSlqai4y53g3nDbtCf4500xJCvDhnCKz8l
fUerGvKNRccutqy5llNTvL6GQ/ym8yrUb9dKnf3A/nL9IYYU72RvxTp2n5Pk
E2EfhKSlf3aobdgrCype48mTJ7b3559/TrabbtQu57vvvkskq/V5+loX4eLZ
iY1NzWpjsYJCJ4rtrVksvRB2iuKlfblI3+J5AbbINU9DJ1qoIQwUixNp1IM0
VU0qW+jxh60a+auYdktynucQLmuyfFS/tTNptbPoSuPsSerMU7yN6KzZiEq4
PT95+/NXOX2+TE6S/Gx8d7iSUV9tGGLIV+cZIjfoPPwqJu+n64y5VMu7Srbn
2Ut1JQ2clIjYn58v+BcK3764FOyxuH/1nn0WHe7y3q89b3lP5TrwSFhW8bpW
jBtN7pq+PV2ebjOdGUt/YyZWitdaPnv27HSRvtbS2utYIyZmtTGXo3YuNXYx
bL+oQztE5cdegJGIXm18/fq1/bRDdHZyvLB1ZivePDfSEAZ+S3HoFCrQbRyl
AKSCh7bOVJLKQlUuG/wqvAwgabOs4k0mrXGUIq9dXVxsoVNUNG7EF5VYY37y
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
J94iUVRMXCdoBvLMrbpNnNNmz9y4Z9idXi07JhvlRY3B71Xx6qLahQe69iRh
XvxEFD+h3nLxOxfweFhK8RovXrxoSEoTda9fvzbBYz9rxQ8qbS0up5CvRdBW
sHd3d14oq9O121sbH14xTa3etMs6V+O3b98Weyvy5MmTUz2R28ju2ll0IfZL
rVlb8drVTdYM91yg1rtozJITza2WbcXbM0KYx5Di9bSY/5KoGmUv85vgkgGT
ST/FlCSB6QEohqpiV9IMiUSUDNA4FbaKVQ0S28Xb950iwZOBnkoqNuufIsXo
4pB6KCajXKn6ls75SZJgugpNeKLl3DfmDbtBf4530hA+yHyWZIh2EbId9fRC
cri8KN/eSb9X175TSB7X+q8pXl/DIX7TeRWqiGulzn5gowz+GoYU72RvxVJn
n5PkvoZ9EJKW/o+I2oa9soLiNfnkN+6dYtGvRFFRlObnbSjYWDwgbACN4eWF
tda4ODYbgIlA77w/oW1DakxdjXguYX8WRWOtc5tk09jJ1dmwc+XcuEBrbCdN
RlKcJaGpjnjpSz74/hHCPIYUrxSp8lqyRRJza2rB81eNzhsBRXdsJ2/l1wJ6
LMNIEsjnEC5rgy/2OWMYon+KpE5nK9722GLob89PcfLlCefL5CRirPHd4UpG
70c0DNH4NiEx307Jyli5Ee+jnKN4FfKiXGdK8db0dm1C8uylLlAaOCkRsT8/
X/AvFL59cSnYY3EbyegnNCH5V+bXnre8p3IdeCQspXhtixRRkqE13eJ6RtW/
9lMt7WciehdRvNpuPHnyxKSX/RkFVdLeh2eD8eGpZSLnXLBZS++5f3VfaX47
V2f7L0Ek2+mU/4wzmTQu2sVLTeynBtyoGW5coH8j8Npj5auNPMvtjVWnYf14
41OmeIdGCPPoVxFSAp76SMJE3JjfXuy5ndq4id8jmNtnUZLKQlUuBnzMXlOR
tBmNp+2L7Z8iXbVNe1y54kpRUUwYnpvzkyelpTG0RRogXo7a9zyoNcqCirfx
bcJvf9e6tcu3CcwbuPRaVvgVr8Lrq6Po1cbGx6TYlYSrdKxvlJ/Yxu8vqETW
vxmZcX19j5hLn6zcGKXH4roo6W1f/GRoaYXkX5nfv8hbaloobNgr1z+5ZkLF
lViuPyVgEnHrOjNRgNcrXq+VTZKELsiT9i5E4510l2Fxowu5eelHqb7+KtZ4
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
AAAAAAAAAAAAAAAAAAAAAAAchf8HeV12dg==
    "], {{0, 316.}, {467., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->144.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{467., 316.},
  PlotRange->{{0, 467.}, {0, 316.}}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.866307382297204*^9, 3.8663074295557528`*^9},
 CellLabel->"Out[51]=",
 CellID->81186350,ExpressionUUID->"8a52a0d9-65e8-4cfe-aae8-f3f79a67d2ee"]
}, Open  ]],

Cell["turn the data into an association:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8663080041474533`*^9, 3.866308008477619*^9}},
 CellID->63899744,ExpressionUUID->"c4d6eee4-c104-486a-b9a7-edf959e36a1c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"geoData", "=", 
  RowBox[{"AssociationThread", "[", 
   RowBox[{
    RowBox[{"Values", "@", 
     RowBox[{"Normal", "@", 
      RowBox[{"dataset", "[", 
       RowBox[{"All", ",", "\"\<Position\>\""}], "]"}]}]}], ",", 
    RowBox[{"Values", "@", 
     RowBox[{"Normal", "@", 
      RowBox[{"dataset", "[", 
       RowBox[{"All", ",", "\"\<RoundtripTicket\>\""}], "]"}]}]}]}], 
   "]"}]}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8663073878841333`*^9, 3.866307597162791*^9}},
 CellLabel->"In[64]:=",
 CellID->87316041,ExpressionUUID->"9509ffb2-d0d2-4cc8-92ae-afe5c02244c9"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    RowBox[{"GeoPosition", "[", 
     RowBox[{"{", 
      RowBox[{"25.783333333333`", ",", 
       RowBox[{"-", "80.216666666667`"}]}], "}"}], "]"}], "\[Rule]", "230"}], 
   ",", 
   RowBox[{
    RowBox[{"GeoPosition", "[", 
     RowBox[{"{", 
      RowBox[{"32.715`", ",", 
       RowBox[{"-", "117.1625`"}]}], "}"}], "]"}], "\[Rule]", "651"}], ",", 
   RowBox[{
    RowBox[{"GeoPosition", "[", 
     RowBox[{"{", 
      RowBox[{"40.7`", ",", 
       RowBox[{"-", "74.`"}]}], "}"}], "]"}], "\[Rule]", "221"}], ",", 
   RowBox[{
    RowBox[{"GeoPosition", "[", 
     RowBox[{"{", 
      RowBox[{"41.85003`", ",", 
       RowBox[{"-", "87.65005`"}]}], "}"}], "]"}], "\[Rule]", "279"}], ",", 
   RowBox[{
    RowBox[{"GeoPosition", "[", 
     RowBox[{"{", 
      RowBox[{"47.60621`", ",", 
       RowBox[{"-", "122.33207`"}]}], "}"}], "]"}], "\[Rule]", "722"}], ",", 
   RowBox[{
    RowBox[{"GeoPosition", "[", 
     RowBox[{"{", 
      RowBox[{"40.75`", ",", 
       RowBox[{"-", "111.88333333333`"}]}], "}"}], "]"}], "\[Rule]", "768"}], 
   ",", 
   RowBox[{
    RowBox[{"GeoPosition", "[", 
     RowBox[{"{", 
      RowBox[{"42.360277777778`", ",", 
       RowBox[{"-", "71.057777777778`"}]}], "}"}], "]"}], "\[Rule]", "221"}], 
   ",", 
   RowBox[{
    RowBox[{"GeoPosition", "[", 
     RowBox[{"{", 
      RowBox[{"21.304694444444`", ",", 
       RowBox[{"-", "157.85719444444`"}]}], "}"}], "]"}], "\[Rule]", "970"}], 
   ",", 
   RowBox[{
    RowBox[{"GeoPosition", "[", 
     RowBox[{"{", 
      RowBox[{"39.739166666667`", ",", 
       RowBox[{"-", "104.98472222222`"}]}], "}"}], "]"}], "\[Rule]", "529"}], 
   ",", 
   RowBox[{
    RowBox[{"GeoPosition", "[", 
     RowBox[{"{", 
      RowBox[{"40.019444444444`", ",", 
       RowBox[{"-", "105.29277777778`"}]}], "}"}], "]"}], "\[Rule]", 
    "529"}]}], "\[RightAssociation]"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.866307476834965*^9, 3.8663075974573293`*^9}},
 CellLabel->"Out[64]=",
 CellID->783255418,ExpressionUUID->"479897b4-c085-402f-ae4f-f9851d81c2b5"]
}, Open  ]],

Cell["\<\
Make a geo bubble chart for the cost of the round trip ticket and the \
distance:\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8663078128379693`*^9, 3.866307829442564*^9}},
 CellID->100643360,ExpressionUUID->"29ae48eb-42bc-4803-aa75-49448393695c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Labeled", "[", 
  RowBox[{
   RowBox[{"GeoBubbleChart", "[", 
    RowBox[{
     RowBox[{"AssociationThread", "[", 
      RowBox[{
       RowBox[{"Values", "@", 
        RowBox[{"Normal", "@", 
         RowBox[{"dataset", "[", 
          RowBox[{"All", ",", "\"\<Position\>\""}], "]"}]}]}], ",", 
       RowBox[{"Values", "@", 
        RowBox[{"Normal", "@", 
         RowBox[{"dataset", "[", 
          RowBox[{"All", ",", "\"\<RoundtripTicket\>\""}], "]"}]}]}]}], "]"}],
      ",", 
     InterpretationBox[
      DynamicModuleBox[{Typeset`open = False}, 
       TemplateBox[{"Expression", "SequenceIcon", 
         GridBox[{{
            RowBox[{
              TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
              TagBox["Sequence", "IconizedItem"]}]}, {
            RowBox[{
              TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
              TagBox["3", "IconizedItem"]}]}, {
            RowBox[{
              TagBox["\"Byte count: \"", "IconizedLabel"], 
              "\[InvisibleSpace]", 
              TagBox["304", "IconizedItem"]}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
         Dynamic[Typeset`open]},
        "IconizedObject"]],
      Sequence[
      ImageSize -> Large, GeoBackground -> "VectorClassic", ChartStyle -> 
       "Pastel"],
      SelectWithContents->True,
      Selectable->False]}], "]"}], ",", 
   "\"\<Round trip ticket geo bubble chart\>\""}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.866307576612791*^9, 3.866307641654043*^9}, {
  3.866307718443841*^9, 3.8663077504732323`*^9}, {3.8663078327921314`*^9, 
  3.8663078652616534`*^9}},
 CellLabel->"In[74]:=",
 CellID->111700305,ExpressionUUID->"e016ede3-01db-455f-a272-12e673b9bf3b"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvcduZEvXJfZD0kBDvYLeQlMNNW1BD9AN/Wpo0gK6BQiaaaJXkAaC8NWt
W7du3fLee0OX3nt74qT33pD19VoRSRYvi0WbZCbJnVggksnM5Dlx4sTeK/be
a/+3/+5/+zf/y3/xL//yL//pv8aPf/Nv/4///j/+x3/7f/6P/w1++Z/+w3/6
X//9f/jX//l/+A//+7/++3/9j//dv/sv8eL/jff+X//Vv/wLn/9THvKQhzzk
IQ95yEMe8pCHPOQhD3nIQx7ykIc85CEPechDHvKQhzzkIQ95yEMe8pCHPOQh
D3nI45iP//9z8h8rlkBwNfGXw/oSVcCbgHrkVrc2rN9WF39U91zWx4h6HSBw
bB/C6oVfrSXUekI99qhnPr5yxzl78x9r1h2H+n1t8Yd9zvgYq2aqnWKzVW0T
eJIqNT5FiyuJQq5ayVTqUau87g98cax/Wl+LpDPFRqfa6Vc7Pby50iyXG0pw
UVCoqXxZpQoqqlQgp5wp9Tmibjt/OTdurFlvghbeFlMqUyS8GeVOq4jF71n4
6VxolOoqU1JhS7nS6qlv8evAVcNdJ21WKK+sCq/FwufDAuehXdtnBFSVqwRu
/HSRb/jVx6tNu9O1B31i2LfG/fyoB+SAQSfTb2cmA2tzZB+K6VDhnfi4AX7V
L9oTjVbbPuLpFOs08Q/d1vXDPJC3IZUsKLu69xtiNh2GV36ujTj3Yk1ZZRW1
1EYS/oP1wE3gtm22bHwc/+ux1/JkVKlmt9v2qP+3kxoP7H6X6HbsRssO5nmn
Z8tqNLCbbbvetMt1+11YXV/J/fY19duXJPCPb9lrq1x4/1i3bq7Th3nksR55
Lwg853G0dzdS/9/L9f/n8ReD//fZ+sIXE4FgUcBCcd9FP+11wHrqVc+8WP3U
oavffAG6B9KH9Wr3i2CFL/3WEy/xKmBh8XzkUZ8i5GL3XQqrKF7Bp8ybwbzw
/JwPexnwMlj25Bohux4p1ABVaxTr9bVEcSNZyFVKhVrVrpSSqUg47Pb51kvF
/HjU/741+b412JrUN8elo9hWwZIA7kGnY9eadqFqZ0t2JE+nAib+V3MDt/bn
KH2PYo3+Q6NpJ23SNzwf9M/8aC834Fv2unapbsPFfR1c/Dpw1XDLQYO1miAF
BokYXtX5jHkImoCfe14nR2jZlbqNex8AWcDbFn60BwNH2O7Y3oyCH3LoVuoz
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
ZmTvdNJmwmZyhV3l0BnJkXab2obgXH+s0xj95bA+Rmiq3oXUM58F4B/lSsxt
wBXHx/Ev7rrUz8mKAoFAIBAsA67pLcfn2n69DVLncDXOLERj+Hb4F6xeKE9F
qdcBavnedVlRRfI16OZGvXyvlYmFZ/zriy8MQ9loLYzsTLf7hPZ7P7REhH8J
zh8mVIE7Bd7g5wiVARxJZSiYCMIcgLHuOehKH9t/Brm4rvHbtr4Ehhqu+6JG
u6dTBBe78uzhXzc3LHdm1uS6e1jD5ZOfeNduNE3ciu3AwLN2X6NnujO1zR0J
ErEHbuuhh/bFbE3gU2Be+TJTx40ZGmidTOrx2srILb4Lqo0EvzldpDQHkC1R
GATf4M+p205LGynhXwKBQCBYasACfoowu/65l15isqC6HSYQWhVmHpotx7ch
lmzf0bkrcI3YWKdnDbvZZi2mcl6P98uK49taIBDOpApVdWhVwpliOppxrunw
h/SBRBwE5wzD/eEZ+rLM7E0V2LIcN0573kVJEy2/YNJrL0F9Gcat0bKTBaac
vQqwWdXvWgLxtoPafQcvZVipwDJe+tWnKJ18X4Zq9qmimlei3bFAuYw2OcVg
ceuh4V+gMyA4GMwbWrM9qsi/emfGv3YaQ+M6Uqwpp95vF3xdW2UzL5gbXJqk
viNwgcCUMyXGCnGNOlpgBCwMbMuhK3lBrEo16od8jCiQrz+0uApsULGmcGr4
VLk+07ltd+x8xV6JU84Xb741j+5jAoFAIBCcEe46LdNk54WPG/XhPBPv61oX
+q9tE2b2lvFkNcGyr1Gfmhu9VtrKeXy+LysbX9Z97piVqzXVojyNHZj20J3O
MaSVBYK5A14oXFDcSsXqD2nuswDmeafNmFGtyf84i/Ze2Jk/0UmbcKrtio21
6GuUHZ3uu8mqsFJd18ILv1LPu7nOpcyrQzzBLP38O05rJaEWshSM+qxFwkKK
05ksqE+BIbPFGiXxwbwwbk+9jMPilbPjXzvAsBvV2WyZUbCbG7x2910KxwB4
0qw1Nqm5IFnsZq5rdZu65utbnEf7zMt0d/wVB79jifA9vtysGSWjY80f52Lu
OJxsMGdjzizctgoEAoFA8CsY/gXm9SHMbBB4O6+C3HtcjaubetMSJu+hfh0G
8X1YZYuq1cq364l8xuX1r3xa+7zq9YRT8UbTWpLEKqPFUajOFPUvri8quLgw
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
Qjw4ik4rteNYWDxqFuL6GnXh8DE262ctXwyDFgi+HqBd97X6ay964VyXH5Jw
cdV61Piy7p22abinfXrorW120Kkf8ZjBeMDG4f/st8506sbejL991vkad4Gd
wcigYxfuv4SL3dS8w8ZfTEXLfpgCgUBwTHD/Kknz+X2ZaaYURKAWgiWCPUoB
KNJfYX7QtS+yCgv2JPZWMPhXZ4em7GtggeDE4AGvjXUK+oDsIrXvM4eYM0Zd
Kdwyc8aZR2bhBIXAxj3nPKAz42erK6UZB5bIUqvGtuMMDtaq1XBNapFdER34
BYLj41G/vaBd/6l8AueqbKmDScG2oFdTYak4BiQ9NlKjfQ0Xu/mkAhuHiOGB
HvbZyn7IAoFAUHJwiYN/nYB8TRa6c7xOzjUnpPa4pyOmEnW3R13tEVcb4QSt
YSC1hBx5gvY3u9AcIN4Evdr4vv7V9lr4l+Ar4uMmBbnmFyjvDsCzLOG8fw04
1WIug9xjk+d81ED+rYM1nuu2EmfLv/BcdJhZn43anhy9vYlAcHR4wOtqdQfM
6IenT399VfOyt7XXNDniMRftXLuhnRt51dcOEbv+pPqbX19hlYKHLvsZEAgE
ghKCK9vVqy9Pxr84umbF0io722Nu1b9Ivj47F2lX3ryCDtIrMizb7lib/NYm
n+21H9vZ27+qr73Stgr/EnxFwL+WV6hkKZIkQgnFHadUQx8j2+Jv/3azPOWh
yq8h57lt61c7R4EkGNP7dTonRz+xOKssQ9HDUTc7YpPG3cAOa83UcFJrIUfu
tdPP8/oECU45L6ai99pmYF5XHj27XfX0cdOr9pmhQae+5Nr1JV368UeNL/Gg
3/1ONWLYjbKfDYFAICgJJxn/4phbZGdbFLjao/ngFw97EVzBQvngVz7IpbJL
/IuLmLsjGupNbCEZ7uP8Wf/Vq20q+5JYIDgxKP61mo9/RVN5C8Mv+Oe4h71R
e7NjYT/nYzo/hcBaTEdt+X46qdfJ7SbmiLGSn+FQkpI2S3vSNKowYrPtaqt/
PE1jbjbto2lrcDGav1bu8yn4quAxL9W8Kmu0r3tNk0dJMiwOPCge+lZlFa8O
e9BjLvtpEQgEgiNy8UnL1Zsn1H+DM9sY0zeGgKU5zHMOifY80LE8HWRnn3MU
Y15tfMcSMPwX7AymxsNn2BT+4uuMB7oZROyv/TeEfwm+Igr1X2urSiqb969k
lmrB0jklmmbhFAsn8/Vfs34a8tVpLf8VqeQcn3+xDHXpb5wJVgy67rXNXH/Z
d7lKCwp9tq+96L3dOHKorm7ULURt+M9HXdep065bTRSpHHbJg84STFsTCA5C
zXiQusf//vxOVeWjxpeQoBPWri8tDLtxs6Lqm19fYcdEdw6BQHCmwQrhyi1N
/zPfifnXVGN8uj4CjM2qXmnjcCtvZ9yXRwa8qwaARvGOHAWZ2kawR4Gs8Xox
QBbWRhYGfcPW+Bac7aGam5q+7sbN1einzdIvwwSCU87yMikYWFrO/+XjJnVE
zC1S/0NnjBmCNGe5z17+K1LJ4f4152dKhlS0VKd0bSns9Fhr23vuVTZdu1t7
5XLdlX/WXv9Hw42/NVz/f+pu/ncjuPH3hmv/U//993X/vlVb6Oq2w+6Z5Q44
l5mAfA1KFOradrM6nTzpZcYQeyeJ1ouC44UnHF6ubIbsPG561akbO/mY125g
Z37TVF959EykIwoEgjPNrdp33/2o6a52nWAKYoJjbk0EepKh3mSor5AuuDc7
1nbRFiBoXN882pirPQIRU1tzBB0tFBeb1Vgrrta87W3KpT3CvwRfIXzaFx/7
xf/yQa0OY/OKFGX2CDWUmHCzri+W/ecA7l/dVppoxjIlOJlkXrbxibHOupq6
Rzcafvu28ck3nZqrutY7gbYfQ9qfYn3306D7FwX/bL0T1Fw13/9n363/aoSL
fXedROxu80Th2/sWozwXYMYgm/ERU1424trVvzxxFlSUMQ8r+1kVnFdqxoPU
3vD3F3eqKpuGe46jvcbRqXunvVUpAmECgeAMg5XAhZ80bY/NJ+hfecxtyWBv
KlSKCV/BHoX3ovdq4/AvR0uI14VBweBiI9WzFf+pHOhvziTdHzfksi+Gj4ON
lUg27YFg5ua9YHkh+H4tdl4PVnB0PmyQf8XTJF9AH2C9NvlctqCvnaN2gl0W
SrAMJZSFJTrwlRXKwzxsO8T3a3G/Z27wbWtTTV3N9UbN9/1Dv/lnniR0Vbnh
R9l3v+/Dq88i9v2lum/vv3raPTMokXPh/DuizBKmIB3kq9Oy/Ylo0lNcDPtv
DbNoUoGIlf2sCs4lFYOuq9UdPOxV9oTDvcHu/VZbzWc3i6nNAoHgzHFfq8fl
q/be+Mn7l6mVpjCHekviXwmer0ghsI6YszXMe3c4WoJSa7jzt3eVPz+emexO
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
3m0eLgbR4L07yn4sRYNDMIfZyjKVN26rfeM9Z7ILSiL7J/Cgus+d9uFfg9L/
z957P7fxLXl7/7fX69d+16512bVb+1773n13195LURKVKYlKFHNEzjkPgNMH
OSdS0v3h7Z6B+KUkkqJEBIZP1VMqEARngJkzUD/T53T/ZveNi7lnNjX7GJKv
3PfBb35lT5N1gjpds9xHKZKK25hIcMdp/yD+NfrWvwbSBpq3w+8Wt00mwr+8
8f79X+6x9bCF/fXdiw8B27T9y2baFluYoyCPD43wx6Dt3vtn//f////+lz//
2//8r4//6aUTdQ4BAODWsCSNQWVJuy0lbVKn6l+L5lQo1r2O2RV6dGHLUTBj
4F+3D47Gl71Ss8KVpaa5AOqLOV1NWrG3dCBP70IySW/ZJ5xki566FV/pPkPS
QGsRGQnMBJc7zRIz4a5cGelW1vih9ojlX6GCfMwTnnrGyamHJk/cwk8LQv4q
3/mXVdtfMmumf9Wash6Tv3X5fJ34Vyy85/duVnT4tHzxF2mrI34dMOBfE0am
I/63/7As7C9PF9/5DmaQCNuMe185tnl3vNN/+Nd/ZfPit4EJhwAAcCuRrqBu
YtjCur0zFqrz//L5ikzIWQmo314hwv7F8Ua0QCOkva4f1aaU9V4L0yufwEE4
/OvWwA7SMWff8aXHsIulNW1E6cwXW02pqk3iqz5coP2E8OpmlsRku+TPEs5L
CY5mW2YbWqOdDwVri67L8jd2rtm/MWsy9hu/9MJ+5ZfvxhU/vQvK0i1vThaC
dTrjKYjVciKX9RpZbzrpDAd2qqXo6dtW/Jp6a5z/4i/wB5h5OGn+6aXzJBfG
LG28WXHvTly7dtIB3ux/vn32p4f/yfv6+//n3y3zwoRDAAC4xSzYxzOOPoSk
w+mP5TjYyJrmXdZCVa+GfzNcgX9dZziE24xK5cNFhzDxG/5gjlj+1TP7CzAx
Ra8D5y7xO/EvlpR6WwYGsx2fg6RcnY8RcZlmS7fNwo8nyf1uT1ZLse889866
iv4JfIndd8i9L77c+FzsJ2VhbLQok0JVVfJfVkmQaqNYqeWbzbxW0Uhwt0TR
0zMH+AGfVrbp7Zh0bcM9kynxzyuev//3F6xFJyLGrvRk58NGzH31bNe/v3zE
2vWP//Yn3vj/9N/+g3f0L2+8yHkBAMDd4U1AmnM12t/3NuX/5fk//cFAanNx
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
5S2UisFoaC+TcJRUaNgzrBVVHCTHlXQ3WPapM0sILtrN3sc++ffBt2Xet2IU
KnxDSktVjan616dhsV6J6WKAyee8ybjT79ux/OuDzfXoIHbv0Jj7lXhn4a+g
Jy61FiFvjvIVuRFkLdr6ckTHg2K9HE0nbLoQKJcSOTJypSJ/TfFX1gOHDDCW
dzaygyRFFdVaMoTgXwAAAAC4QewnpWhYuzOetTWaWukwMBs4gm1UYkbGHQnt
phN2Kvj5QSJ60G1ljvp55oJE2KeRalTj+aw7EhwvJes2072eFEYwytIY90NI
0hAcPLNtMadFjGNjayHPYZI4rl4JqNd+k4DiIWap1qA3ng14mgn610nvM5av
fjuby7hikX0mGpYSkdHwQTRyyLz3xOZ+3d1xHjrVSy8FDK3r2uoXf3IGeYhW
tdxAqJWig06OOR4U2M74m+q5R62HaSdGtiTxgGSFZ6ZacOM74F8AAAAAuDoc
Tr8LqYAxrk5vxUKoznGj4XiVvYnNS+X9ln+xT1HeX6FQVUdGPeO8P7zYvzJa
+w0xrBcejoTpqZtOV+Gw/IsHUqsj5QerLYmrVU04SXVZfcC/48uEPrWlXRKr
DwqdZqpMoXTSbvlX0fA1awk2UKtWyX6iMPfr7o5j+VdKj2cPnjj4qJ/nE5dJ
2Hn4VSh84l/8Ah5aa2HajI79q9yQr6ljs2DLzO4Xwb8AAAAAMBFYwWwpihSE
fIWsJRWdrvRg0nX5kR9zEM4MBhqTFW8EbCKsTu1GslmLJ2OHQf8W/2ukXboQ
4ID23L865V9MPHKg8r68SoYMEaugIUUS7Cl65aNVf2bDF3vtiL71prbjaidB
BymposDOZW2KB8nxUBrpnmaCqa6jft6qsT/s5k5Ki4znT6pgIefNppzx6AGT
STlqpeiwa3AYb+X+2CKXvVKR5jFKIM6WJae062I+hMiZoUrzZLSQtfKrXo7l
sx4eeEHfVlVHjvoFRvqJH2mq62BeGmo409Kbm6V+9rWD4F8AAAAAmAhLpn+F
zRJkubJ0YhoNtVHRr31SFDpelAUaVBNqTW3Vrh9nLizm7RrgAlg6cmlXwLvJ
JKOHP/GvIfsXB8DuaGjXnLC35/du2H2OrUhxMyqhrz8nrZpWfHQYDIZCezbn
bjDqa7RUqyOtu2YZD7frSWX4ijkvuxXL5snMw3ol5jc/bDiwEwnupOI2XQy2
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
HhR67QyfU10MBHxbVrmMMoUGnZzFsGtc0EP58v5VVqFWXWonWuZu+dfCVmDu
wwMAAAAAAIAZwLLgNyivc4lUIJlws0yFQofhkC2dcMQjB9HQrvRyynqzGZ8F
P66Vo1aJ8k/DIsfS/CNTNHxGxl3R4UYlxkgx84E2ypQoCu+Cc/6YS0712q8c
acqV/6jD/9uwuKU16bpsx5Wh5678w73Y/Z3w/2jv7HbrOqo47lfIM/gV/A55
BD+DXyHiGnRAcAMCc2e7qA5I3LQK4qMSJQ44KgIsiEogOA2NW5ViQtu0wXxI
h+WzfFbGs2bmzJ69z4ed309bVboze/aaNWufrP+ePTOv/eLBzr3H++88/fHv
T956cPL2uydPPjq/3UpN+Coc0qGf/uPR0ye/Ex399Mlvn39yPGDlz/95LOLu
s2d/+fjDBz96Y3f/tW/e/t635Hj9B7vfefPe0h8EDo4lHhdTUH+1Wnt2mElm
3u7h+bHTfRrsdT3ECXv3T/buP315THy1e3jx53OPTSZWy7F7UfgkvoTjqhyH
0z7VB2HWI7AzLRlduHe47IZcg+Pw5c/R0n8HXsFjh0guHjVP+u1fP/3N43OZ
IMeHHz0W6aQr3cnx3qPz6T+fPntUk12/+Oy9T07//Ozjh6q/5H//868Pvnj+
gS46cfdhh39uKh+onUzTwvRgb/qPoIivew/Pm/n3Z+fH559PNkGbjHDpttQz
JdJ/zy4Ka0ndQ+1sor9+eP/R99/65e2fvL3/07t7d//4+jvni3X87A8nP3/3
5P2/neuvsxcXk79W+Tg730Hg/S+e//Xsxclcb/ToT/e/++2vfP2rX9Lja9/4
8hgAAAAAAADmxr+nx/+WbQkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAECB4+Pj
0YRlG5Lm9PR0a2trc3Pz6Oho2bbMRowUU8VgMbtnVSveL1eUg4MDcen+/v6w
1WpPSZcNa4AUG12m5haLh1gFAACAhWGJh7G9vX0llIIhCeHahJ71iCsGT2vH
k8xWzdvY2Bi88ho6tevmzZtq7a1bt3red6h+KdQvzKnylUXDSbpp2Gq1p2r8
2ckACydjNbts3rFaz+np6Z07d1ZTpQIAAMAgWOIRIYnTVckBBsmd5peAiZ7V
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
    "], {{0, 322.5}, {576., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->144.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{576., 322.5},
  PlotRange->{{0, 576.}, {0, 322.5}}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.866307604214774*^9, {3.866307638443245*^9, 3.8663076524885116`*^9}, {
   3.866307732971047*^9, 3.866307752113253*^9}, {3.866307844373654*^9, 
   3.866307866499565*^9}},
 CellLabel->"Out[74]=",
 CellID->780583749,ExpressionUUID->"63504faf-2fb6-427f-b0ef-6c783083a5c5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Labeled", "[", 
  RowBox[{
   RowBox[{"GeoBubbleChart", "[", 
    RowBox[{
     RowBox[{"AssociationThread", "[", 
      RowBox[{
       RowBox[{"Values", "@", 
        RowBox[{"Normal", "@", 
         RowBox[{"dataset", "[", 
          RowBox[{"All", ",", "\"\<Position\>\""}], "]"}]}]}], ",", 
       RowBox[{"Values", "@", 
        RowBox[{"Normal", "@", 
         RowBox[{"dataset", "[", 
          RowBox[{"All", ",", "\"\<Distance\>\""}], "]"}]}]}]}], "]"}], ",", 
     InterpretationBox[
      DynamicModuleBox[{Typeset`open = False}, 
       TemplateBox[{"Expression", "SequenceIcon", 
         GridBox[{{
            RowBox[{
              TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
              TagBox["Sequence", "IconizedItem"]}]}, {
            RowBox[{
              TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
              TagBox["3", "IconizedItem"]}]}, {
            RowBox[{
              TagBox["\"Byte count: \"", "IconizedLabel"], 
              "\[InvisibleSpace]", 
              TagBox["304", "IconizedItem"]}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
         Dynamic[Typeset`open]},
        "IconizedObject"]],
      Sequence[
      ImageSize -> Large, GeoBackground -> "VectorClassic", ChartStyle -> 
       "Pastel"],
      SelectWithContents->True,
      Selectable->False]}], "]"}], ",", "\"\<Distance geobubble chart\>\""}], 
  "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8663076767891045`*^9, 3.8663076853730288`*^9}, {
  3.866307738299552*^9, 3.86630774669576*^9}, {3.866307872620021*^9, 
  3.866307883337802*^9}},
 CellLabel->"In[75]:=",
 CellID->239498798,ExpressionUUID->"f3be8c17-b308-4b5d-9f80-ffd07dc9ce1f"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvcduZEvXJfZD0kBDvYLeQlMNNW1BD9AN/Wpo0gK6BQiaaaJXkAaC8NWt
W7du3fLee0OX3nt74qT33pD19VoRSRYvi0WbZCbJnVggksnM5Dlx4sTeK/be
a/+3/+5/+zf/y3/xL//yL//pv8aPf/Nv/4///j/+x3/7f/6P/w1++Z/+w3/6
X//9f/jX//l/+A//+7/++3/9j//dv/sv8eL/jff+X//Vv/wLn/9THvKQhzzk
IQ95yEMe8pCHPOQhD3nIQx7ykIc85CEPechDHvKQhzzkIQ95yEMe8pCHPOQh
D3nI45iP//9z8h8rlkBwNfGXw/oSVcCbgHrkVrc2rN9WF39U91zWx4h6HSBw
bB/C6oVfrSXUekI99qhnPr5yxzl78x9r1h2H+n1t8Yd9zvgYq2aqnWKzVW0T
eJIqNT5FiyuJQq5ayVTqUau87g98cax/Wl+LpDPFRqfa6Vc7Pby50iyXG0pw
UVCoqXxZpQoqqlQgp5wp9Tmibjt/OTdurFlvghbeFlMqUyS8GeVOq4jF71n4
6VxolOoqU1JhS7nS6qlv8evAVcNdJ21WKK+sCq/FwufDAuehXdtnBFSVqwRu
/HSRb/jVx6tNu9O1B31i2LfG/fyoB+SAQSfTb2cmA2tzZB+K6VDhnfi4AX7V
L9oTjVbbPuLpFOs08Q/d1vXDPJC3IZUsKLu69xtiNh2GV36ujTj3Yk1ZZRW1
1EYS/oP1wE3gtm22bHwc/+ux1/JkVKlmt9v2qP+3kxoP7H6X6HbsRssO5nmn
Z8tqNLCbbbvetMt1+11YXV/J/fY19duXJPCPb9lrq1x4/1i3bq7Th3nksR55
Lwg853G0dzdS/9/L9f/n8ReD//fZ+sIXE4FgUcBCcd9FP+11wHrqVc+8WP3U
oavffAG6B9KH9Wr3i2CFL/3WEy/xKmBh8XzkUZ8i5GL3XQqrKF7Bp8ybwbzw
/JwPexnwMlj25Bohux4p1ABVaxTr9bVEcSNZyFVKhVrVrpSSqUg47Pb51kvF
/HjU/741+b412JrUN8elo9hWwZIA7kGnY9eadqFqZ0t2JE+nAib+V3MDt/bn
KH2PYo3+Q6NpJ23SNzwf9M/8aC834Fv2unapbsPFfR1c/Dpw1XDLQYO1miAF
BokYXtX5jHkImoCfe14nR2jZlbqNex8AWcDbFn60BwNH2O7Y3oyCH3LoVuoz
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
7U3ii3HeyZZswXmDY3DFBOY1sqLvn1vrmVnumdf0LOpkCqNsGSzMK1OFUMQ2
kjLdQTlMm8AyGX7ng7eIfsnCRk0YXH+YnThuQSnzCbgFsbsb/8C2eAmS5XFj
ZEBgXdkSCaoFwlXM+YWE3e/WiClHJ78F75nxLO7uLpTfT2e+FMVCaGV5cnz8
6dj4l+vq50k2WaotVhvKSkNZqimTBWUwo/SJSu+HrNtHR+eff//y6/96/BIs
7HdNoutnIoIgCIL4pOjTo4Kd71/7R0b/7EnThSIiNobAmpPXzs5a8xxMZ85h
I9h+/S2fekyp78QDZG+LsZRrQ7cECja9sqY0We3BUCrXTrGDV9Bt+Nd+ZyO3
jviXMLJmkb1Z7plZ6oGvsyBfyrZ/za73vF5CZtdkS2a0MG3svXCpw7JVT4fV
MfAvEL0FF7PGcIJVF6tgtboID74jjh8HGcNd8y+QLyFuC3i1Ttuq27HeoX/t
S2+nhTJOALnCkyfL3LOzw0OjX8/M/isan6g1lRyQr0odSZeUsZwykD7uX4cW
9uvQl399+gwU7Nm8s+tnIoIgCIL4pJiyCbByC4s4iYZ3sm+f20bBNzsBuRIG
cRsjjEfTn/zJ3a0MwEdugYhJU4/Jv4iHx1YzWcgGvF7jsmpJrlgaU64rDFZb
MMj9C14LlbO37942zYYgZBOrzvCk3j+i9vQvbqBzgWctaFGpVpzImkemtMnm
tT1vVnrmVChfa54epa1nyYLAfy07ZKvudpvYuh8LZNgvdnqz2KBBGDUj8y4s
f6fy4i3NET4f8L5KVeRzNNJFhO+CvstjACvf3RSqxRD4VyxkjAQNiailmPPv
bjL4r06uAfwrenn/ioaMk/JfRsa+1Bl/K5Sx5nXoX3C5KilYqnh6/esoc2rZ
t7/+CxTs+xlL189EBEEQBPFJMWzE0augYNUafpbePPcz7c2mmMph2wIsPhUe
JrcJfqG98jn2QT0f2Hr4zbe7eSyHkX8RD41mNR6L4v7D+bWVUcXa8JJmVmsy
+/ypLNaC4eVwtOzCP8TgT354sWCyzQ0dBiz1txoJ+Hr0m5VKMpCIyDfAsKw9
C7reeXXv7JoMAKsCgdpItgGlWnH0LOp6FEb0rFVPz5waXKzNol62bEfzAuAX
QdzUkfeAi33wjpHiasbjOBxxxhNI7viPgqkjUkg+KEy3nhgYJt9KlfPwFzAD
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
UZwO5DZDQvuviODYZivEfZzpmaTiJ0WZa1lfwZ7O3weq31XFqowKGchxq6Ov
IfZfG0aaT0/KemDnSVkPf/LYwd/SkwW7gP8iu9Gux8kHhQP7RDbp1IZoqceo
/Rcn2urxvrEqZzX+i8xXUfgblRg5L2PKZbogfImoNeDdCQf28hnXJQuA0NDa
j8idkHztWf/tcO14YBOvPdKR4sKD5hj+YXwXUW2oSp2/kTiZe3Wn9l/ZlJOc
F0HXfXyCa6fDU3xl5Qz/9d4vll0IEf4LAAAAADeAZy62YHtR+TnINaXfenmN
mM+wYDEpXWlOJDnS0ptlIlJmSrJUk7UG02pzg6G1ZMcaLUX7sx+TX4KC+OAX
f7jZcM0+WIpdd6PSlWHIiFGsqOvzn/lx5L+6zVRJ+lNxW9BYjdVpLDf5RZDn
Cvh2wsH9QTdLO7DsavO0/ZNenqBD49L6pQiF4oW8j1wneUA6cJFxE5Xi1FVC
c5JQcjcsN41K5msf/9cIPdPvqUN+8MlkgW3R6BzabwPV7RjjuX+OubX9diaX
cdElpuubSzlLcsL8w4GRZU4odRCTD6anLMl/kU0br4GzQOC/AAAAAHDzeO0V
R3GelOjNMORrRn/7wiW2w9KTlqEckypwffted4k9WPU8Qw19BHklnb1Kl+Tj
yy0gsiS4aDZBVu7MuogUlJIbIorCH/TtlgvBFWSjuq2Uy/HF6/46sSXTwiG3
1a4niVo5kku7yirYqiU8rq393Vdux5d82kWxOnHczV7ywMl/fQ3JNx752A7/
dQ7uWwU51tceroNRqp8+q3qW4Hmn//VaaXJeocAeoatrTszq0sb9WfnWy1/R
TNs97b/obmourdsF/BcAAAAAbh6/2zgj9sItXho8/DWjRP7rS0C+9fEiMoIe
bIU5TaYqTKu9eBc26A9ry1cbKl/mz9LGcC8q719u9dBzl/gYkITTqFcwuyB/
oxJVeS+RSTqiocNqMUQ2RBffWEacqdH+a3/3NZmgkgos74PMY6RQnEhELeEA
N1n2OLcO9l5r/yVzHj0d8fKHHMxxJP/SDf91PuhmfO+T1sQw+XXqrOq2cee9
+7rNVDR0QAOMoLFdL0cmruyD/wIAAAAAWAtPHGS7fjE+j+zCkeKSg/akDOW5
mmK9NWwcPDsGG6bMzoq4Bj2O6Mh8ZUrKluRv/ikIJF64Fta997VX+HPDRB5x
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
AAAAAAAAXJ6HdvHSw+zHZKM19F/fBsMHcSXf+5g/3BMqZjxyDN9rSXJp+uOZ
WTD6Vb8rmo1MJJd57ZHEC5dEF2YTOv/lmiIazbOTiatCDjrZciFIBioU2Mum
nERJBcgTTXtLu55IRi3x8FE8chT07XpdW2Sssmlnt5kiWvV4rRQm/6XyvmY1
Vq9EZdYbDu5r/+VxbQV8u+VCiMyX6b8a1VgkFXzmSK/9AgEAAAAAALBAnruE
My2DeRlVstYcLgcr1pQvy08exeV92+m33D1M3z9IbBxmPvhyuVK+UMmXa2LQ
GyZHKNKmwJvC9VYtftzNHndzFMx3Gsl4Pv3BJ3cjzCP7+g98Io9/Wssnv9bJ
J7v62su5KjKko+aRzCm95cHYKZqH3228zUBuuPJr0Lsi5msIXb6Ad8fv3Y6F
D4P+3XjUUi9HzOVa9KBSDJFHqxRCRD7j8nu2yXzJrIfIZ9xk2chqmdkxdmG1
eLMWP+nlT3o58mv0mkhwn6BPIReWitvIghH0KZ1GgsxaIOp7Zof/AgAAAAAA
NxOyA3HFC7t+GK2Zm8ZcuGyZCyduHOWJfw4RD/YjT3Y9d/djLxxpRyztTqSD
mUyrJfTinaBv99PHx07b53Tc3qzGKeo2SJD/+uiXZOsiQpHpW/vxjrNxJD74
h7MBPwckeauNn5BR8qQlcRSTZM34SeP15Lw++OVL9/DtG+eprv/CLdxpKcpX
2H/5dskcRcOHTscXl+NLMm6rl6P6KjcqUZ/nq9vxxevaInzur0RR+M+1/YLw
EeS8XLydr/RZBNk9kXHn0q5A1PvEllr7qAAAAAAAAGAZkN147xeeDE9HbHeG
/qtcSe173Ft2x6bN8fbA/nzP9Wg/+GTPp/3Xc0vkyO2weuwOrz0W5Y5RXvfX
ne2X2n+FA3vxyFE8YklELcmYNZYMBLIyVVBXzX/dtYhnTm6U9ikg9yJS+y86
D1HFRKT05/hH7b98GRkW0psdVubfi8qtEPsvcl77MenOyLc++XC+7N47v5AV
nsCpp31+vwIrv0Y57uZq5Yg2R1bLB7v1o86FpZN2IhY+cjs3yX8FvNsi664W
w8T8vb309nutFFEQfvJufs+29l8h/x59Ci8i8zseW5NrHx4AAAAAAAAsj5ce
ERIyWZSZErf6qpVjejmP27G1s//54+7Xdwe2dwf2NwfOZ4eB10fufcv2oWXr
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
    "], {{0, 322.5}, {576., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->144.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{576., 322.5},
  PlotRange->{{0, 576.}, {0, 322.5}}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.866307686550934*^9, {3.8663077399543457`*^9, 3.8663077554639773`*^9}, 
   3.8663078844677467`*^9},
 CellLabel->"Out[75]=",
 CellID->117284394,ExpressionUUID->"216d5daf-ec0b-4214-b988-ac7a523e8521"]
}, Open  ]],

Cell["Make a plot of distance and cost:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8663082063236322`*^9, 3.8663082179864197`*^9}},
 CellID->21143462,ExpressionUUID->"30ab49b4-e4b5-420e-9bcf-d7ade20304bb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AssociationThread", "[", 
  RowBox[{
   RowBox[{"Values", "@", 
    RowBox[{"Normal", "@", 
     RowBox[{"dataset", "[", 
      RowBox[{"All", ",", "\"\<Distance\>\""}], "]"}]}]}], ",", 
   RowBox[{"Values", "@", 
    RowBox[{"Normal", "@", 
     RowBox[{"dataset", "[", 
      RowBox[{"All", ",", "\"\<RoundtripTicket\>\""}], "]"}]}]}]}], 
  "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.866308218737521*^9, 3.8663082477904105`*^9}},
 CellLabel->"In[78]:=",
 CellID->117982196,ExpressionUUID->"27f2de5f-ada8-4f33-8741-5f4637fa5a3a"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    TemplateBox[{
     "1415.6800943393928`", "\"km\"", "kilometers", "\"Kilometers\""},
     "Quantity"], "\[Rule]", "230"}], ",", 
   RowBox[{
    TemplateBox[{
     "3191.1013571589115`", "\"km\"", "kilometers", "\"Kilometers\""},
     "Quantity"], "\[Rule]", "651"}], ",", 
   RowBox[{
    TemplateBox[{
     "768.2579435444189`", "\"km\"", "kilometers", "\"Kilometers\""},
     "Quantity"], "\[Rule]", "221"}], ",", 
   RowBox[{
    TemplateBox[{"585.53413235912`", "\"km\"", "kilometers", "\"Kilometers\""},
     "Quantity"], "\[Rule]", "279"}], ",", 
   RowBox[{
    TemplateBox[{
     "3367.1005722071873`", "\"km\"", "kilometers", "\"Kilometers\""},
     "Quantity"], "\[Rule]", "722"}], ",", 
   RowBox[{
    TemplateBox[{
     "2530.98170613734`", "\"km\"", "kilometers", "\"Kilometers\""},
     "Quantity"], "\[Rule]", "768"}], ",", 
   RowBox[{
    TemplateBox[{
     "1060.2101178512175`", "\"km\"", "kilometers", "\"Kilometers\""},
     "Quantity"], "\[Rule]", "221"}], ",", 
   RowBox[{
    TemplateBox[{
     "7331.018253643849`", "\"km\"", "kilometers", "\"Kilometers\""},
     "Quantity"], "\[Rule]", "970"}], ",", 
   RowBox[{
    TemplateBox[{
     "1951.3289333445434`", "\"km\"", "kilometers", "\"Kilometers\""},
     "Quantity"], "\[Rule]", "529"}], ",", 
   RowBox[{
    TemplateBox[{
     "1976.2796684384004`", "\"km\"", "kilometers", "\"Kilometers\""},
     "Quantity"], "\[Rule]", "529"}]}], "\[RightAssociation]"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.8663082480989265`*^9},
 CellLabel->"Out[78]=",
 CellID->153654394,ExpressionUUID->"b23a5b60-1bd0-4aa7-a86d-fd62f9e25840"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Labeled", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"AssociationThread", "[", 
      RowBox[{
       RowBox[{"Values", "@", 
        RowBox[{"Normal", "@", 
         RowBox[{"dataset", "[", 
          RowBox[{"All", ",", "\"\<Distance\>\""}], "]"}]}]}], ",", 
       RowBox[{"Values", "@", 
        RowBox[{"Normal", "@", 
         RowBox[{"dataset", "[", 
          RowBox[{"All", ",", "\"\<RoundtripTicket\>\""}], "]"}]}]}]}], "]"}],
      ",", 
     RowBox[{"ImageSize", "->", "Large"}], ",", 
     RowBox[{"PlotStyle", "->", "\"\<Pastel\>\""}]}], "]"}], ",", 
   "\"\<Distance verses cost\>\""}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.866308251928269*^9, 3.8663082536812873`*^9}, {
  3.8663083242984533`*^9, 3.8663084673554754`*^9}},
 CellLabel->"In[84]:=",
 CellID->380421670,ExpressionUUID->"02edbdea-4e89-4f13-a1b3-dc80afcce8fb"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{
        Directive[
         PointSize[0.012833333333333334`], 
         AbsoluteThickness[1.6], 
         RGBColor[0.431296, 0.709773, 0.927077]], 
        PointBox[{{1415.6800943393928`, 230.}, {3191.1013571589115`, 651.}, {
         768.2579435444189, 221.}, {585.53413235912, 279.}, {
         3367.1005722071873`, 722.}, {2530.98170613734, 768.}, {
         1060.2101178512175`, 221.}, {7331.018253643849, 970.}, {
         1951.3289333445434`, 529.}, {1976.2796684384004`, 
         529.}}]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 7331.018253643849}, {0, 970.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   "\"Distance verses cost\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", "}"}]}], "]"}]& )]], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.8663082542435465`*^9, 3.866308325717287*^9, {3.866308386385964*^9, 
   3.866308411519082*^9}, {3.8663084483263636`*^9, 3.866308467760974*^9}},
 CellLabel->"Out[84]=",
 CellID->151537007,ExpressionUUID->"bd201527-8d5f-4b6e-a147-79f58cbcc65b"]
}, Open  ]],

Cell["I think the line starts at 100 and has a slope of 0.15:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8663086576525607`*^9, 3.866308666866188*^9}, {
  3.8663087386727*^9, 3.8663087425303526`*^9}},
 CellID->589465084,ExpressionUUID->"41c76466-7a1a-447e-9413-9665892e314b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"AssociationThread", "[", 
      RowBox[{
       RowBox[{"Values", "@", 
        RowBox[{"Normal", "@", 
         RowBox[{"dataset", "[", 
          RowBox[{"All", ",", "\"\<Distance\>\""}], "]"}]}]}], ",", 
       RowBox[{"Values", "@", 
        RowBox[{"Normal", "@", 
         RowBox[{"dataset", "[", 
          RowBox[{"All", ",", "\"\<RoundtripTicket\>\""}], "]"}]}]}]}], "]"}],
      ",", 
     RowBox[{"ImageSize", "->", "Full"}], ",", 
     RowBox[{"PlotStyle", "->", "\"\<Pastel\>\""}]}], "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"150", "+", 
      RowBox[{"0.15", "x"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "7000"}], "}"}]}], "]"}]}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.866308251928269*^9, 3.8663082536812873`*^9}, {
  3.8663083242984533`*^9, 3.8663084673554754`*^9}, {3.8663085439865913`*^9, 
  3.866308579199538*^9}, {3.8663086104615865`*^9, 3.866308734770874*^9}, {
  3.866310287828107*^9, 3.866310288946741*^9}},
 CellLabel->"In[137]:=",
 CellID->131177671,ExpressionUUID->"5fa328a2-42e7-4910-9f35-b7ff1390d456"],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {RGBColor[0.431296, 0.709773, 0.927077], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{1415.6800943393928`, 230.}, {3191.1013571589115`, 651.}, {
      768.2579435444189, 221.}, {585.53413235912, 279.}, {3367.1005722071873`,
       722.}, {2530.98170613734, 768.}, {1060.2101178512175`, 221.}, {
      7331.018253643849, 970.}, {1951.3289333445434`, 529.}, {
      1976.2796684384004`, 529.}}]}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwVxX08lAcAB3AvNXRJ3CmsTqE3HU1lM9R+piW9R7pSFncOhVBeSt7O6yWu
u2fyNuXdec/LobvnTl6OmjnLKnrRKCWqDbW0fFTb/vh+vitZQS4cNRUVlT3/
+X/+QY+EaInJd6c8pxgqbSwoghfUfGmhiohv+xz39rCgdVLHdoahi1i9ave8
uyxUjwnjRhkrIVD48mwmWPhodsf0IcMKDWuHR4P12FitOBN2j+GAd1PK3Cfe
bEip2+h3GAdwnlul2anljUS76jf9DC+kFPk8S3LlwNCYelL2PAQ82XzXJLof
6mi7I42zIqF2ZwnFVHoSg8XOokA+F0YbGFblOwJhUfqFQbtFMvhW1imuGsEo
KeAeXhaTil+d042KXELwRj3T+E/zS5hTnrtQIzmN2Y7DZu9GhJgL9bvGMAoF
hdtV8H5eBmyNFs/OssKg+TZmZDMzE/7rd69IvhkOfdZSzRluNh7YOvh70s4i
yrPRU1mYi6WBNoG17ufQp5cXNTyZhx0UxU6JLBJWHey4sCX5aBFp7qFqRKFN
T2Za3FQAw7on5uaB0aAuvJWf+bAQOx/Jboh7YzCZ0KnT+6oIx+LL7Z0WxKHN
jfOETivBQqV9ip4sDkZlM2WNa0sxlGnhPZ/FxYn9ln2cg2UoyxyvHdCPB6fj
hXZxpAgDIrN7Xt3xmGgQOJikl2OVjTyd5p8A9sfhgdbmCpz6ZCwuXZ4ITjfd
80pvJQYchwN+VCSCxhxW1XhchdJcY9V+3yRIHLbP58+rQdAac3UTw2SMVebN
HTKoBXOTMCu3NRlap3Lctjheg01YR850SAoC5i6ymZvrwL0VGqFmwoOBquMS
K3kdJnITXth283Bjo/JczoF67Co+1nXg7AVUmu4bNBmqR685YS2gpyLgH932
aXYDmjp3cHntqVg3Kzq6730DsohfbI+fvghz0npKGdeInJGyZI+laVhdkWn9
SF+MDO+9sO1Jg8+hyVCtQjFqfF3StoakI+oFD9HrmmAZNdg4R+MjvfSdLFbe
hIru1c453Xw8NXHfVOzUjO8Fvwd7BFzCRqXQ3e1xM146mamrLBbgyNEFi/YE
t8Dvdr6dpZ8AivJIkvOhBeHZzluCpQKYm7YaavOvI+78/bBCqhB3j30IuWcg
gcHVyxFjPkIcjAw7NFoggY8z1Zd3XYjfFIpXsZuluKYTnm6oS4DfRzm/pVUK
nr5GdCubwBHGbGJJmxRq3Ln4DRwCZqnjfEqnFFGvp3kFPgQkP3QVPbgpRVDn
UEb8CQLPZDE9Yf1SuIU0VG8PImBbNW1Y+0wKU6XHUF8kgbGUwet0Cgl5othu
WEig/nlXR5I2iW+mKhz2/0QgylHc+1qHRP3RfKf2DAK6nwUjUhqJko2prsVZ
BOzDd2oy6SRSR477+14hQHjLmZesSDDtKT9PlhPw6KjymtlEol+kUuhZSWDt
ilx/j69J7KLOlPVXEZA/Co9db0di68uRhsZaAuMuX4lubiOxKru5J0JMoLGO
Xm/pROKqevXt8SYCMYu0ycvOJAyCCgeOtBCg9kz0sfeSoGxPe2onJfDHmvv3
e/aTSKrnjleTBMqTup9auZL4tCzir+VyAmdGxa+z3Uic5QX8zW8lsNWheOYz
k8Sbt16zn28Q+BeoPEeU
        "]]},
      Annotation[#, "Charting`Private`Tag$548376#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Full,
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 7331.018253643849}, {0, 970.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.866308580479648*^9, {3.866308615111642*^9, 3.8663086305657535`*^9}, {
   3.866308670317754*^9, 3.8663087355171146`*^9}, 3.866310289695963*^9},
 CellLabel->"Out[137]=",
 CellID->149498366,ExpressionUUID->"2f5e45de-8af3-4973-94f8-b269931ee17f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"CopyToClipboard", "[", 
  RowBox[{"Rasterize", "@", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"AssociationThread", "[", 
        RowBox[{
         RowBox[{"Values", "@", 
          RowBox[{"Normal", "@", 
           RowBox[{"dataset", "[", 
            RowBox[{"All", ",", "\"\<Distance\>\""}], "]"}]}]}], ",", 
         RowBox[{"Values", "@", 
          RowBox[{"Normal", "@", 
           RowBox[{"dataset", "[", 
            RowBox[{"All", ",", "\"\<RoundtripTicket\>\""}], "]"}]}]}]}], 
        "]"}], ",", 
       RowBox[{"ImageSize", "->", "Full"}], ",", 
       RowBox[{"PlotStyle", "->", "\"\<Pastel\>\""}]}], "]"}], ",", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"150", "+", 
        RowBox[{"0.15", "x"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "7000"}], "}"}]}], "]"}]}], "]"}]}], 
  "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.866310307507597*^9, 3.8663103619621496`*^9}},
 CellLabel->"In[140]:=",
 CellID->237102008,ExpressionUUID->"2c62eb65-70db-41e8-80b5-bb7464c4ab61"],

Cell["Let's test our prediction with linear interpolation:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8663087488294163`*^9, 3.866308759338855*^9}},
 CellID->48987479,ExpressionUUID->"2cda2f3b-a6ba-4373-8c9f-8880802279e2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Values", "@", 
    RowBox[{"Normal", "@", 
     RowBox[{"dataset", "[", 
      RowBox[{"All", ",", 
       RowBox[{"#Distance", "&"}]}], "]"}]}]}], ",", 
   RowBox[{"Values", "@", 
    RowBox[{"Normal", "@", 
     RowBox[{"dataset", "[", 
      RowBox[{"All", ",", 
       RowBox[{"#RoundtripTicket", "&"}]}], "]"}]}]}]}], "}"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8663087632899685`*^9, 3.866308865257417*^9}},
 CellLabel->"In[104]:=",
 CellID->28295936,ExpressionUUID->"67016cdf-6add-4877-8809-ed9bc3ec09c6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
      "1415.6800943393928`", "\"km\"", "kilometers", "\"Kilometers\""},
      "Quantity"], ",", 
     TemplateBox[{
      "3191.1013571589115`", "\"km\"", "kilometers", "\"Kilometers\""},
      "Quantity"], ",", 
     TemplateBox[{
      "768.2579435444189`", "\"km\"", "kilometers", "\"Kilometers\""},
      "Quantity"], ",", 
     TemplateBox[{
      "585.53413235912`", "\"km\"", "kilometers", "\"Kilometers\""},
      "Quantity"], ",", 
     TemplateBox[{
      "3367.1005722071873`", "\"km\"", "kilometers", "\"Kilometers\""},
      "Quantity"], ",", 
     TemplateBox[{
      "2530.98170613734`", "\"km\"", "kilometers", "\"Kilometers\""},
      "Quantity"], ",", 
     TemplateBox[{
      "1060.2101178512175`", "\"km\"", "kilometers", "\"Kilometers\""},
      "Quantity"], ",", 
     TemplateBox[{
      "7331.018253643849`", "\"km\"", "kilometers", "\"Kilometers\""},
      "Quantity"], ",", 
     TemplateBox[{
      "1951.3289333445434`", "\"km\"", "kilometers", "\"Kilometers\""},
      "Quantity"], ",", 
     TemplateBox[{
      "1976.2796684384004`", "\"km\"", "kilometers", "\"Kilometers\""},
      "Quantity"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "230", ",", "651", ",", "221", ",", "279", ",", "722", ",", "768", ",", 
     "221", ",", "970", ",", "529", ",", "529"}], "}"}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.8663088655397744`*^9},
 CellLabel->"Out[104]=",
 CellID->125486977,ExpressionUUID->"5796b57f-cb09-4b5e-bd17-587b96ba5949"]
}, Open  ]],

Cell["Calculate the linear interpolation for the data:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8663096965801*^9, 3.8663097033030834`*^9}},
 CellID->124304698,ExpressionUUID->"4531dcdf-acd5-43ab-9546-f380edac5b68"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"linearModelFit", "=", 
  RowBox[{"LinearModelFit", "[", 
   RowBox[{
    RowBox[{"Transpose", "@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Values", "@", 
        RowBox[{"Normal", "@", 
         RowBox[{"dataset", "[", 
          RowBox[{"All", ",", 
           RowBox[{
            RowBox[{"QuantityMagnitude", "[", "#Distance", "]"}], "&"}]}], 
          "]"}]}]}], ",", 
       RowBox[{"Values", "@", 
        RowBox[{"Normal", "@", 
         RowBox[{"dataset", "[", 
          RowBox[{"All", ",", 
           RowBox[{"#RoundtripTicket", "&"}]}], "]"}]}]}]}], "}"}]}], ",", 
    "x", ",", "x"}], "]"}]}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8663088696121254`*^9, 3.8663089505887957`*^9}},
 CellLabel->"In[110]:=",
 CellID->43873573,ExpressionUUID->"9cc0dfd0-d397-4dfd-94b0-7ca65490612a"],

Cell[BoxData[
 TagBox[
  RowBox[{"FittedModel", "[", 
   TagBox[
    PanelBox[
     TagBox[
      RowBox[{"224.87859025604604`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.11875565939287605`", " ", "x"}]}],
      Short[#, 2]& ],
     FrameMargins->5],
    Editable -> False], "]"}],
  InterpretTemplate[
  FittedModel[{
    "Linear", {224.87859025604604`, 
     0.11875565939287605`}, {{$CellContext`x}, {1, $CellContext`x}}, {0, 
     0}}, {{1., 1., 1., 1., 1., 1., 1., 1., 1., 
    1.}}, {{1415.6800943393928`, 230}, {3191.1013571589115`, 651}, {
     768.2579435444189, 221}, {585.53413235912, 279}, {
     3367.1005722071873`, 722}, {2530.98170613734, 768}, {
     1060.2101178512175`, 221}, {7331.018253643849, 970}, {
     1951.3289333445434`, 529}, {1976.2796684384004`, 529}}, {{1., 
    1415.6800943393928`}, {1., 3191.1013571589115`}, {1., 
    768.2579435444189}, {1., 585.53413235912}, {1., 3367.1005722071873`}, {1.,
     2530.98170613734}, {1., 1060.2101178512175`}, {1., 7331.018253643849}, {
    1., 1951.3289333445434`}, {1., 1976.2796684384004`}}, 
    Function[Null, 
     Internal`LocalizedBlock[{$CellContext`x}, #], {HoldAll}]]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->True]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.866308874862124*^9, 3.8663089509050446`*^9}},
 CellLabel->"Out[110]=",
 CellID->41789271,ExpressionUUID->"ee57f51d-885f-4907-99e8-89524d351dea"]
}, Open  ]],

Cell["\<\
The correct line of best fit is in green and my guess for the line of best \
fit is in purple:\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8663095263692217`*^9, 3.8663095334817457`*^9}, {
  3.8663096469415517`*^9, 3.8663096572422657`*^9}},
 CellID->43188093,ExpressionUUID->"43aafd92-d9dd-422d-a194-2f34d908dedd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"linearModelFit", "[", "\"\<Data\>\"", "]"}], ",", 
     RowBox[{"ImageSize", "->", "Full"}], ",", 
     RowBox[{"PlotStyle", "->", "Blue"}]}], "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"150", "+", 
      RowBox[{"0.15", "x"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "7000"}], "}"}], ",", 
     RowBox[{"PlotStyle", "->", "Purple"}]}], "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"linearModelFit", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"QuantityMagnitude", "@", 
        RowBox[{"Max", "@", 
         RowBox[{"dataset", "[", 
          RowBox[{"All", ",", 
           RowBox[{"#Distance", "&"}]}], "]"}]}]}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "->", "Green"}]}], "]"}]}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.866308952629521*^9, 3.8663089714579325`*^9}, {
  3.866309011283948*^9, 3.8663090380668755`*^9}, {3.8663092425040913`*^9, 
  3.8663092911240516`*^9}, {3.866309387918984*^9, 3.8663094284449153`*^9}, {
  3.8663094826488285`*^9, 3.866309521618327*^9}, {3.8663096395391273`*^9, 
  3.866309643281461*^9}, {3.866310438984838*^9, 3.8663104399282265`*^9}},
 CellLabel->"In[141]:=",
 CellID->141445546,ExpressionUUID->"6a38ef00-84ce-45bb-8767-01e5b1668a7f"],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], AbsoluteThickness[
     1.6], PointBox[{{1415.6800943393928`, 230.}, {3191.1013571589115`, 
      651.}, {768.2579435444189, 221.}, {585.53413235912, 279.}, {
      3367.1005722071873`, 722.}, {2530.98170613734, 768.}, {
      1060.2101178512175`, 221.}, {7331.018253643849, 970.}, {
      1951.3289333445434`, 529.}, {1976.2796684384004`, 
      529.}}]}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.5, 0, 0.5], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1:eJwVxX08lAcAB3AvNXRJ3CmsTqE3HU1lM9R+piW9R7pSFncOhVBeSt7O6yWu
u2fyNuXdec/LobvnTl6OmjnLKnrRKCWqDbW0fFTb/vh+vitZQS4cNRUVlT3/
+X/+QY+EaInJd6c8pxgqbSwoghfUfGmhiohv+xz39rCgdVLHdoahi1i9ave8
uyxUjwnjRhkrIVD48mwmWPhodsf0IcMKDWuHR4P12FitOBN2j+GAd1PK3Cfe
bEip2+h3GAdwnlul2anljUS76jf9DC+kFPk8S3LlwNCYelL2PAQ82XzXJLof
6mi7I42zIqF2ZwnFVHoSg8XOokA+F0YbGFblOwJhUfqFQbtFMvhW1imuGsEo
KeAeXhaTil+d042KXELwRj3T+E/zS5hTnrtQIzmN2Y7DZu9GhJgL9bvGMAoF
hdtV8H5eBmyNFs/OssKg+TZmZDMzE/7rd69IvhkOfdZSzRluNh7YOvh70s4i
yrPRU1mYi6WBNoG17ufQp5cXNTyZhx0UxU6JLBJWHey4sCX5aBFp7qFqRKFN
T2Za3FQAw7on5uaB0aAuvJWf+bAQOx/Jboh7YzCZ0KnT+6oIx+LL7Z0WxKHN
jfOETivBQqV9ip4sDkZlM2WNa0sxlGnhPZ/FxYn9ln2cg2UoyxyvHdCPB6fj
hXZxpAgDIrN7Xt3xmGgQOJikl2OVjTyd5p8A9sfhgdbmCpz6ZCwuXZ4ITjfd
80pvJQYchwN+VCSCxhxW1XhchdJcY9V+3yRIHLbP58+rQdAac3UTw2SMVebN
HTKoBXOTMCu3NRlap3Lctjheg01YR850SAoC5i6ymZvrwL0VGqFmwoOBquMS
K3kdJnITXth283Bjo/JczoF67Co+1nXg7AVUmu4bNBmqR685YS2gpyLgH932
aXYDmjp3cHntqVg3Kzq6730DsohfbI+fvghz0npKGdeInJGyZI+laVhdkWn9
SF+MDO+9sO1Jg8+hyVCtQjFqfF3StoakI+oFD9HrmmAZNdg4R+MjvfSdLFbe
hIru1c453Xw8NXHfVOzUjO8Fvwd7BFzCRqXQ3e1xM146mamrLBbgyNEFi/YE
t8Dvdr6dpZ8AivJIkvOhBeHZzluCpQKYm7YaavOvI+78/bBCqhB3j30IuWcg
gcHVyxFjPkIcjAw7NFoggY8z1Zd3XYjfFIpXsZuluKYTnm6oS4DfRzm/pVUK
nr5GdCubwBHGbGJJmxRq3Ln4DRwCZqnjfEqnFFGvp3kFPgQkP3QVPbgpRVDn
UEb8CQLPZDE9Yf1SuIU0VG8PImBbNW1Y+0wKU6XHUF8kgbGUwet0Cgl5othu
WEig/nlXR5I2iW+mKhz2/0QgylHc+1qHRP3RfKf2DAK6nwUjUhqJko2prsVZ
BOzDd2oy6SRSR477+14hQHjLmZesSDDtKT9PlhPw6KjymtlEol+kUuhZSWDt
ilx/j69J7KLOlPVXEZA/Co9db0di68uRhsZaAuMuX4lubiOxKru5J0JMoLGO
Xm/pROKqevXt8SYCMYu0ycvOJAyCCgeOtBCg9kz0sfeSoGxPe2onJfDHmvv3
e/aTSKrnjleTBMqTup9auZL4tCzir+VyAmdGxa+z3Uic5QX8zW8lsNWheOYz
k8Sbt16zn28Q+BeoPEeU
        "]]},
      Annotation[#, "Charting`Private`Tag$557961#1"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0, 1, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1:eJwVznk4lAkAx3EyduQqu+HZSlLUrG06lijL+DHFRmlTcq5u9WyTFdFQOaZx
NYP3ndQmOUquMY7GzevIom3INT1qEM2DNlttZdukHdr2j+/z+fdrdvgXz2ML
1NTUdn3ufxmEVobljdWOsz2iVJPlHKQJJN9rz6nDYvfI8yJzDqJ9vTXGVQbw
7LVgWzM5CG9dd7xXZQZxb92MG4uDt2HGGR2qTQjoGz3IPchB+QNdaavKCS39
llby2xykRiWymlV7kPCw7VES8xTm+tppTapD+GpoeuU7VjDelJdoBzWHgjma
PTvhGgK5dqutpuIcNrepUBJwGu+cen3fH+aBzllbqMEJxU/XVk2x7BIREuda
6i8KQwx32E3eLEDTwlyDRfln4LhVxVrhSSB37pVhW084uhwcXh6tF8GjVmsr
/e8IWNHv8PbMpGNs3L+hUIOLS08G44qO/Qr6+dvDrt9Goom74ed8cQaWJFr4
sx2jEJ1pF2Q9kYk/vcNm+3adw/quGRnTIxs+6TW2gWHn8WQsTBjkmgsx+7uH
LvEXkPm0/fiLmJsQBeYt3lAWDVOL1zvrpbewzVF5srg/Bgbd0jVDfXkIvl8i
agmJxbnIXuuN9HzQig85WtLisDc53lbBKIBem1VmW0ocbuWkB9ceLoSSULs3
tIqHutnz5aNXi3C9zWqBfTUP9jXzEz41xehkXnwpc7gI20iFh9ZfYlAeDwoU
/ReRm72rVNtAAvNiq8VGAXz00TMN968vRWiQWnLmOB/cs07SwSNlECju9edG
xCN1RxxbzC+HUULJffmneOgbpPAVgRU49TyZTEhPwBZTFw7vQwWKSntO8NYk
ImPUvedh4h3sl2x4XVKWCBuzaJnTain6Dgq2ezknQdtwDj5V0s8/Gu7rupNw
V3zC/rJzJYQ5ygM79yaj6je1gecjlWAUNGx7OZmM0ZRJ5R+cKtg8K39cH3wJ
7OH3AvWF1dAfybGnawgwpthX0X69Gj46kt28FAEOROX4Sr6pQVLWilAXQyGW
ZhtllbXXgD8pOHqpSAjdsCE/P69avAky/EK1KQV2XTLpyulaMLIzzr7qTIF7
R2GajrAOLlv4H9b6puJySP+znGX1GNQRMAhlKoxz1j72qK3HxitCBjc8DQPR
MnbhDw2Y9xY/SvmUhhA1P2vzRw14zDJ2j2ATcNM0amk83Yirkv2iSSEB/8YV
7Sp1Cvq25ndO9hMIMrk2HkujwIzaKs4aIBASY6ChSafg3uSR1ysnkMCmOevp
UkhiR16xGiQg7ZpqMTGioPFjT+S/QwS0RqoaWZYUZk5wnQUTBGpUbpWxnhTG
rnfLxTME7ga2D9C8KMw/UXaPfCDQ3eowneRNwcRspkP/IwElf+MmMoCCb6FZ
XaiKgK6eUfnNIAryyogbduokjpgoxW1RFH7vXnlMpk0iOMZP5nKBwrNFNoEq
HRJcpXxKFkNBc6+793o9Eqn5nQw5n4KzInyHaBGJBqakYDyVAjUpY/otIdGR
ZtF5nKQwzHi6RmhIou9t9uSLyxQ+nvzHtNmIxGQ1af7uGgWbadMvV31N4o2x
zjZuJgWvzZt19i0l8TGSf0SVRSGM60ZLWEZCc2SOF5tLQdR4YK52OYnFrLO3
aHkUKubPvJ8yIfEfhIpTaQ==
        "]]},
      Annotation[#, "Charting`Private`Tag$558029#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Full,
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 7331.018253643849}, {0, 970.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.866309488052911*^9, 3.8663095220945797`*^9}, 
   3.866309643799943*^9, 3.8663104405895743`*^9},
 CellLabel->"Out[141]=",
 CellID->16314640,ExpressionUUID->"39943c66-665f-453f-ad42-d4a83f094ecc"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Scope", "Subsection",
 TaggingRules->{},
 CellID->964056545,ExpressionUUID->"c3414652-1cc8-449a-9bd1-7cad3fa6805d"],

Cell["\<\
Give more examples showing the range of features in the paclet:\
\>", "Text",
 TaggingRules->{},
 CellTags->"DefaultContent",
 CellID->217390316,ExpressionUUID->"28875546-bec5-4247-9842-f06d7d482ad1"],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  RowBox[{"MyPlot", "[", 
   RowBox[{
    RowBox[{"MyFunction", "[", 
     RowBox[{"a", ",", "3", ",", "4"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "1", ",", "10"}], "}"}]}], "]"}],
  #& ,
  TaggingRules -> {"DefaultContentBoxes" -> True},
  AutoDelete->True]], "Input",
 TaggingRules->{},
 CellTags->"DefaultContent",
 CellLabel->"In[1]:=",
 CellID->978490832,ExpressionUUID->"3731b1fa-6184-4815-9a25-e02b04509f36"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {}, 
     TagBox[
      {RGBColor[1., 0.4, 0.], AbsoluteThickness[3], Opacity[1.], 
       Dashing[{Small, Small}], CapForm["Butt"], LineBox[CompressedData["
1:eJw1VAlQU1cUDWEpCEgwARECJPloAvk6MK3g2Oo7FVtZiihWbCsobh1UlqIU
KFarY5GyqWURQVwQBdmsMlgBmYpBBEEsSl0oQksFQTFDVGRX+37S3pk//9//
37v3/HPOu9KNkQFb+Dwez49e3F0XGqKYNpz0kbeKBD/6VD/OVEO6+SbJjptU
xMeMr0y01pDMSftk/m4VybAxCJw+V0NSBQ7h4osqcrQrIzHhKw2Rnz3V6Wtb
T1yvyC1ML2kIXVRxfKieDN2sX1K+9QUxfyMMKjvXQPwh3FDf/pKsGqi9MW/l
TTLu9uT87N7XRNonv7fY/g5Jy46Ysb9ujKRazT96oOceKd/aHZV8cJKUnbv2
gZljJ8nN4eIt+cFV82hX1d+kyiFhcGUVDxRkx+3RxyTA+/jeOUv4WO3qUixs
6ydbeZH7DBr04dk/Pybp2SBZdGz1ydK5hvCzSvV5ZqAho70b8u9XGiEkxt/B
ettLUjTgNe+d1Bitt7gYJnmnmeqpRBN49cSLzi8bJXGmToo9ZqZoOOQWO1c6
Qbzp6jcxZmisqUoz0kyRRueF6S3vzBFRoFdrOIOH1M5QisACSyfUg3XVerg6
Pe/909ECeK2Ystm5Rh8WNK30sIQsLC7+LGuILw8suN+gtsSIIuiQ6rURJoPC
G95WzEBIX5usc9wYneN7ttVGC5HjYpP1h4kpco3tTqxzFuHyHR6VzBwDHWUT
QWoRqikaay8LWNnf7CNnrHCp8LtG5xoBNn/4l3/aGmtsV45kd7VbQu5mXCa2
nYmmo1eOHLYQonf/idaS32eidPGatReJCGOqzSUhmTbQ6pZhBd+m9yiFs0Cb
h8qeW2M3mb+uxsQWw2GBu8+720B28Nsou1Zb7MvyTAkrmoUuJ6N9WfvtoCm6
4ethYoeTpeUP17uLofVRuBha/cbEaPfbKPhi3F6Hv9weBRzt0Y5ICeufLI5y
wNPLv+j3p0pgHlWW0qlwRC1FGx8oxcUV23NjHzliAQdUItPh95eg+MxyCPUY
qM1/c80pkUAQ7166+AGDC7SKwlyKsVWPzx677gQDmqrDpSg8dl1yoWI2llH3
OzVJURtNER6Zg7scrS4yeCR9HNJ3WI7PuIcEGbQ+3asAZenq824ZtH6PdIZ4
8B93WzC6/4pzwXrnFkFjLoNrzfmf/LpTiawtP20Kzvv/uxIt9PWr4xTXjtCf
1d8r4WFbt1aSz4Aegub8BOV/PDI63bKV0NqqksEu6saeGiW0tm1lUP+aGobP
gmZ+r24z4E5fkRGLzwPkp5LaGMymMniasjoc7Qy47fEiFjmc7H8y+JqLOSy0
x/cJg2kPCr5Z5MPixaZbwb4DDLgp0LGcBa12oecpg3Aqy4sAFoYF6Qv11Aw4
tyqCWHRz4+AVA235CBaitqUPNcOMjt8dLLTzZITBiSFqiFgWCtqucJyBdgzt
ZbGOM9gko9PnRxaZtFz7FKPzTxKLZm6cvGXAtb+bxur28ZzAsRORzuJfVG0R
2w==
        "]]},
      Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.61803],
   Axes->{False, False},
   AxesLabel->{None, None},
   AxesOrigin->{1., 0},
   DisplayFunction->Identity,
   Frame->{{True, False}, {True, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
        (Charting`SimpleTicks[#, #2, 6]& )[
         SlotSequence[1]], {Identity, Identity}, RotateLabel -> 0]& , {}}, {
      Charting`FindScaledTicks[
        (Charting`SimpleTicks[#, #2, 6]& )[
         SlotSequence[1]], {Identity, Identity}, RotateLabel -> 
        0]& , {}}}, {{{{0., 
         FormBox["0", TraditionalForm], {0.01, 0.}}, {5., 
         FormBox["5", TraditionalForm], {0.01, 0.}}, {10., 
         FormBox["10", TraditionalForm], {0.01, 0.}}, {15., 
         FormBox["15", TraditionalForm], {0.01, 0.}}}, {}}, {{{2., 
         FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
         FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
         FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
         FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
         FormBox["10", TraditionalForm], {0.01, 0.}}}, {}}}],
   FrameTicksStyle->Directive[
     StrokeForm[
      Opacity[0]], FontOpacity -> 1],
   GridLines->{Automatic, Automatic},
   GridLinesStyle->Directive[
     AbsoluteThickness[1], 
     GrayLevel[0, 0.2]],
   ImagePadding->All,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, 
     "DefaultGraphicsInteraction" -> {
      "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
       "Effects" -> {
        "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
         "Droplines" -> {
          "freeformCursorMode" -> True, 
           "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
     "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{1, 10}, {0., 14.286}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Prolog->{
     GrayLevel[0, 0.7], 
     RectangleBox[
      Scaled[{0, 0}], 
      Scaled[{1, 1}]]},
   Ticks->{Charting`FindScaledTicks[
      (Charting`SimpleTicks[#, #2, 6]& )[
       SlotSequence[1]], {Identity, Identity}, RotateLabel -> 0]& , 
     Charting`FindScaledTicks[
      (Charting`SimpleTicks[#, #2, 6]& )[
       SlotSequence[1]], {Identity, Identity}, RotateLabel -> 0]& }],
  #& ,
  TaggingRules -> {"DefaultContentBoxes" -> True},
  AutoDelete->True]], "Output",
 TaggingRules->{},
 CellTags->"DefaultContent",
 CellLabel->"Out[1]=",
 CellID->980074188,ExpressionUUID->"51b8b48c-ad82-4cb7-ba11-957e388abefd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  InterpretationBox[Cell[
   "\t", "ExampleDelimiter",ExpressionUUID->
    "88108333-61ad-46bf-a944-f687e8f6dd63"],
   $Line = 0; Null],
  #& ,
  TaggingRules -> {"DefaultContentBoxes" -> True},
  AutoDelete->True]], "ExampleDelimiter",
 TaggingRules->{},
 CellTags->"DefaultContent",
 CellID->717218889,ExpressionUUID->"05444f2a-6da1-47e6-ae54-c94db80415d6"],

Cell["\<\
Use screenshots to show features like notebook styles, palettes and external \
operations:\
\>", "Text",
 TaggingRules->{},
 CellTags->"DefaultContent",
 CellID->287792797,ExpressionUUID->"f77bcba4-7841-414f-9b16-bab09f9c112d"],

Cell[BoxData[
 TagBox[
  RowBox[{"ViewWebsite", "[", "\"\<wolframcloud\>\"", "]"}],
  #& ,
  TaggingRules -> {"DefaultContentBoxes" -> True},
  AutoDelete->True]], "Input",
 TaggingRules->{},
 CellTags->"DefaultContent",
 CellLabel->"In[1]:=",
 CellID->794331063,ExpressionUUID->"0cadcfe2-5191-4541-908b-899fc36416d2"],

Cell[BoxData[
 TagBox[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzs3QeYXmd553/+/91/2d2UzW4Skg1LSQhlCUmAQGCTbEKSTUINPdTQewKE
HsAg426DCwbcsMEVA8YGDAYXsLGt3ixZVrFkS66SJdsqU9XGe8/9lYebOXrf
vKPpM9/PdV++xmfOe85zyjt6fjPP+5zHveX9L3vH//2IRzziQ/9//Odlb/7Y
cz/4wTf/68v/c/zPK9/3oXe/831vf9vz3vfht7/z7R989lv+XSw8Of7zpn//
iEcMfv2QJEmSJEmSJEmSJEmSJEmSJEmSJHVsoNivmWufJEmSWpjsnprGUc07
5iMNmeyfOpIkSVPXZPfUNI46yUd1HW6JvWl36tdM1KcZp1eSNEkm+18Ajb3J
7qlpXJBuSDqknlZZyXw0C032Tx2NvcnuHUjS7DXZ/wJo7E12T03jYqT5iHV4
1fo0L/1UkiRJkqY50g1Jh9RTU5L5SJIkSdLs0Uk+apWMFqc70t2SJEmSNM2R
bkg6rVKS+UiSJEnSbNB5PuIzSnzAcG4yGUmSJEmaeUg6pB4SEGnIfCRJkiRp
tmmfj3hGEn9X6kp8dmmyWy1JkiRJ44XUQwIiDdVnyJqPJEmSJM0e5iNJkiRJ
gvlIkiRJkmA+kiRJkiSYjyRJkiQJ5iNJkiRJgvlIkiRJkmA+kiRJkiSYjyRJ
kiQJ5iNJkiRJgvlIkiRJkmA+kiRJkiSYjyRJkiQJ5qPxdn26MH1NkiRJmubo
2dLLney+9tgzH40385EkSZJmEvOR+ejQcM9cnXrTQ5IkSdI0R8+WXu7MS0nm
o/FjPpIkSdLMYz4yHx0a/vJoMpIkSdLMQy+XHu8YdqFvTdek89LZiaF930+3
JNZflZamMWmA+Wj8mI8kSZI0U5mPxiof3ZGuSOeneoAT7+ZES36Y7kyj3zIX
cbLvXEmSJGm80OMdfc/57oeTzsXp24khfDekH6fvpIsSS76VfpLGpBnmI/OR
JEmSdGjMR6PZ16Z0efpRui6tTmNyOIeAC8HRkY++l2jtaLZsPpIkSdLMNib5
aEMi6fBnFMbLsZw/Xtye+NPGVYkMxYi7a9MomwHz0RTJR1u3br3yyitvvPHG
cb2Bx8/AwMCll14aV3PY8rVr11588cXbtm2blFZNTa2u9fr162P5JZdccv31
109Kw0Zq/vz50eDNmzdP5E63bNkSO503b95E7lSSJLViPjq0vZA1+HMYh8NM
gGvTmBzIKNESWkULaS0X4tC2OaJ8FBltzpw5J5100rjewOMnjjfaH5l32PIL
Lrjg8MMPd4aK6qDXOm68OQ87/fTTJ6ttI/LFL34xWrt8+fKJ3OlNN90UO/3C
F74wkTuVJEmtjEk+ImiQdJakVmvelFiTP7jwBw5G4o2yGbUx5qNplI+iVUcf
fXQE5A6XT4xrrrkm2h9XuS7s7+8/4ogjHGQ4TPNax3vtyCOPjIVf/vKXFy5c
eNddd01i8zpnPpIkSeajkW6ffHFZqh+wWpfG5BDa2Jhu7gBj/BhrRwuZVPCS
tD6NdO/jlI++8Y1vxJpXXnllh8snxqmnnnr88ccPDAzUhXFio0kLFiyYlCZN
Wc1r/eCDD/KXo3izTGLDRsp8JEmSxiQf8fEWut+3pVYd+x8X5CPG45GYRtkM
mI+mZj6Kkx995n379jXXHE0+2rNnT3d3d/uWxDqx671793bY8rBt27bY9Xe/
+91hy7/1rW/F8h07dnS+qRkjouL27duHBUY089F9991HPoq3W5ttxrWLSzNs
IdfroLdKFXdUtCf+WxfG7mJhJwcy7IVok4/aHP4h6Ovr27VrF1+PNB+1af+w
dTpp7SGfRkmSZirz0Ui3zwR9HAKj19gOH786t2N8/Oqu1Ml+WfMb6Zsd+26i
hbSWqQK/nkZ67IeWjyJrnHfeeUcddVT872c/+9mLLrpo586drHPdddcdffTR
Q59SOTpFv7HV8njJkiVL4utLL7303nvvPeecc1gh9nL55Zc3e3RLly790pe+
dPjhh7Pa2WefHTdhXSH64WvXrm12xSNOxvoReOvCSFix6zPOOIP/jRAa/zus
WxvXNBbGua0LTz/99Fi4bNmyiXnJQwczmu3Ea2OdY489Ns5J/De+jiX1JTUf
9fT0HHPMMUcccQTnPK57bC12xJpDly8uDWEkDG0ndnrqqaeyMG6V0047LbJD
3VHsIl5+zz33xL3NHRI7ih8jcQXj/jzrrLN4bTTyO9/5TvOyMsEmB3LkkUfG
/bBmzZq6wkHz0b95+Ndee200ppmmTznllFg+7C9o8+fPj/uWe/K4446LOy12
12E++jfb30lrR38aJUma2cYkH9U5Fjrp8LMOf3BhPN6NaZTNgPloSuWj6MVF
Z2zOz4vMwu+r44YZ6kjTSQuRg1otj5fMmzePzmQNUEObrX+t4ANExKsTTjhh
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
//nmp6WWLl0652DPlJEkSdKMNOb5aNKZj8bPVMhHN91008knn3zJJZeM7WZ3
7doVm7322muHLb/66qtPOeWUnp6esd2dJEmSpibz0WS3dzqZCvlIkiRJGj/m
o8lu73RiPpIkSdLMZj6a7PZOJxem3jTZd64kSZI0lujlXpQmu989lsxH48d8
JEmSpJnKfGQ+Gqnr0zXJlCRJkqSZoSfRy6XHO9n97rFkPho/5iNJkiTNPOYj
89FocM/wl8evSZIkSdMcPdsb0mT3tcee+Wi8mY8kSZI0k5iPzEeSJEmSZgPz
kSRJkiTBfCRJkiRJMB9JkiRJEsxHkiRJkgTzkSRJkiTBfCRJkiRJMB9JkiRJ
EsYjHz0kSZIkSVOM+UiSJEmSYD6SJEmSJJiPJEmSJAnmI0mSJEmC+UiSJEmS
YD6SJEmSJJiPJEmSJAlTOh8N7I8a2Lt3sPZN9dqftXffvihJkiRJU8HeNJDM
R+YjSZIkaTabUflIkiRJkiaQ+UiSJEmSMOXyUY6p48ve9Wujtpx3ZtTWb54/
WBefO6VqS9aDF38tatk3Loy68JvfivrWN78ZJUmSJGmyfCudnzakA4Gj7Vg7
85H5SJIkSZp5ZkY+Yq4Dvt5y/llRN/7yI6IWPv5XohY85henVM3NWvWY/xQ1
57cfGfXIxz8h6omPf3yUJEmSpMnyxPSr6cJEymDeBvOR+UiSJEmaPWZePtr6
zQuiSEbLnvWEqKXP+O1Dr6dntV8ywlqUtfYZj4064ZlPiXrKs54d9ZxnPStK
kiRJ0mR5TnpSuiSZj8xHkiRJ0uw0A/PRN86LWvDYX4wijyz5g0dPqVqYteYP
HhV13NOeGPXEZzwz6lnPeEaUJEmSpMlCSmKsHXM1mI/MR5IkSdLsNPH5iC33
pe1pSuSjP3zMYLX8LpXr/P5/H6yRbsF8JEmSJE15452PSECkoX2F+ch8JEmS
JE015iPyzuL/8ZtRS5/+uKglT3tsFPMwMCP3HUd9MmrzV0+LWvDoX4g6sOU/
fGwUr1r8lP8WteSpjxos85EkSZI0DZmPzEeSJEmSMKvzUSajpc98fNSKv3pG
1MLf+ZWoRU/41aglT/2tqGXPfmLU7s33RO3fuzdq5fP/JGrRkx45WE8erIWP
+6Wom/7iD6OWPedJUe1TkvlIkiRJmprMR+YjSZIkSZil+Yi5FDLFLHvm46N6
16+N2va9S6LWvvHlUfN/8/+N2vadb0RtveSCqLs+f2TUriULouY/6j9E3fLK
v43acu4ZUWSolX/77KjFT/6NqFYzNpiPJEmSpKnJfGQ+kiRJkoRZmo9KSmJm
hp61t0Sxhf677ojqWrEsqv/eu6OW/+lTohY96dejulevHKxVN0X13nZr1IEz
tmtn1LJnPymKsXnmI0mSJGl6MR+ZjyRJkiRh1uWjzCzMyL30j34natETfy3q
gR99N6rvzo1RD/zoe1EbP/PhqL6NG6JWPu85UUuf9tionrWrou484fCo+y7+
WlT/XZuidi6eH3VgbnCKveeS0eejPyqay9svqcufmdqv0+q7zXVabe2ZRedb
G9vvNtVWtdraWG2nfZubSzo5V5IkSRpv5iPzUSd7abWO+ejQ2txcYj6SJEma
CmZRPspkxBi5hY/75cHK2bwXPPaXorb/5EdRdxx9WFT3ymVRXSuWRu3r7orq
Xb8maueCG6LYy65F86J2b7k36vZ/fV/UrqULo3hK7MLf/s+DlXs5MFt4GWt3
aPno99PTEr3opyeWt1+TvjfLn5T4brOH/weJ7zbbwB6fmp5S/F5iHV7LEr7L
fpupga9Zv65Tv/sHRTM78Ko/TK3OW93v/yjq8lZnsqrn6smJo2vmmnpEzbPX
6nqxNY7UrCRJkjRZzEfmo/pa81Gr7ZiPJEmSZoNZkY+YhyGTy6qX/XXUpsM/
FnX/5ZdE9ay5OWrP/VujHrzq+1E75v006q4Tj4y6++Rjo/Y8cH/Uvt6eqM3n
fDlq0+Efjdq1eH7U1m9/PWrvzu1RPetuiWKE3h1HfypqzeteHLX4934ripaM
NB/Rr35e+l+JRPDs9Lfp6QVL/iyxhEzEFt6R/mein09vnF49r/3TVFMS2+Fu
+fv0yvSq9IrEdv4kvTS9OrFN+v+0vCYjjoh1aqbj6/+d/jrV19KeFyS20Mx0
NWGR116TXptYwjafkzg/zfPPcZEK2cubEkdN2mI5reLM/12q16XuhSW0kKPg
TD43cV3ITa1G8UmSJGk8mI/MR+Yj85EkSZIwK/JRzpDAPAxr3/zyKNZ84AeX
Ra16yXOjVvzlM6J2LZkfNbBvX9Sql/5V1HWPeETUXaccG7X12xdFXf//PSKK
ebz3dXdH9d25KermF/zpUG0++4tR7OX2wz4Yteh3fzVq6dMeF9V5PqpX5+p0
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
kiRJEmZFPmJ+hswmi57wa1ELHvtLUYue9OtRLO9aujDqvou+GnXjLz0iasO/
vCNqX09P1I6510UxV8P+/r6ou046OurGX3xEFM+Z7btzY9TyP3lK1KInPTKK
vSx8/H+NYi+HNj9DxcgxsglL6JnznFbGg9X16VeTPuhvvy4xroyePNtkO4ya
Y02ehcq84mSuOj6t2WNnC2y5toQMxXLSCt/l3qvt5GuOjlb9SWLvbKdmLmbb
5tjZe/PY60wLPGuVmbRJW3yXltA2jpdjZ/wb32XmbTIXeaomHdpWj4Jz+4L0
j4nvsp0/Kjif7Jc28FqTkSRJ0sQzH5mPzEfmI0mSJGEW5SMqx8gx2zbfJcVs
v+7qqHXvfF3Ujb/wiKit37ogihkbHrzy8qieNTdH3f2F46K2//SaqPm/8f9E
Mfpu1/LFUYuf8t+iSENLn/7bUezx0J4P2wq99LqE/jnPP22uT9bgVfS9Wb/5
vFGWs+bvFyxnnVZ7ATmlrkMPv26Z7zYTTT06vvu0gu3UNrOd2rammkRISSSj
upx9NY+6tqTuly2QdFjeTDEsZx3OeR2DV9fkKOoea9taHZckSZLGg/nIfNTc
jvnIfCRJkjQ7zbp8VIt5G3LmhO5VN0Xdd/HXonYuuCGKmb2Zr/ue00+K2nz+
WVEPXPn9qL5Nt0V137w8avPZX4rq23R7FOPrFv/eb0XVMXVjm49a9Zzb96hr
vmi/habO99JqnfbbbPXaztfsRDNhtW9hq+23P4et9tj5Oe/8iCRJkjS2zEfm
o+Y65iPzkSRJ0uw0S/MRyeWpj4pa+ke/E9V/16aorpXLom7/+D9HLXrir0dt
u+ziqH3d3VF7Hrg/ivREqrr1vW+M2nHjtVH7unZFrfybZ0Uxl/j45SNJkiRJ
48F8ZD6SJEmShFmaj6jMR8ue9btRq17211GLnvhrUQsf98tRi578yKjlf/4H
UWQftn/LK/4matHv/tehYv1VL3lu1PI/fUrUgfF1LfZrPpIkSZKmJvOR+UiS
JEkSZnU+on7/v0fVZ8X+3Ozfj/6FKOb0Zqzdgsf8QhTfXfq0xw4Vz4Rd/NRH
RbUaWWc+kiRJkqayycpHvenBZD4yH0mSJElTwXjnIxIQaWiK5qPy3NhW6Yk5
HJb98ROiGJV3kAR0YAuPyWq3L/ORJEmSNDWZj8xHkiRJkmA+6qgyJS35/UcN
Vtuxc52U+UiSJEmamsxH5iNJkiRJmIH56JsXRC18/K9EMSLuwFwKh1ZPzzrw
v78zWD+35FBqUdbaZzw26oRnPiXqKX/87Kjn/PEfR0mSJEmaLM9JT0qXJPOR
+UiSJEmanWZePtpy3llRN/7yI6JISQse84tTquZmrXrMf4qa87hHRj3y8U+I
euLjH//Ex0uSJEmaNE9M/zVdmMxH5iNJkiRpdpoh+Wj//ii+7l6xNOrOYw6L
4rmud5909JSqO7O2nnRU1HWnnBB1whdOjTr1C1+IkiRJkjRZTk3Hp5WJlLE/
mY/MR5IkSdLsMTPykSRJkiRNFvORJEmSJGFK56P9+6MG9u6dFrU/S5IkSdJU
M5DMR+YjSZIkSTMkH0mSJEnSBDIfSZIkSRLMR5IkSZIE85EkSZIkwXwkSZIk
STAfSZIkSRLMR5IkSZIE85EkSZIkwXwkSZIkSTAfSZIkSRLMR5IkSZIE85Ek
SZIkwXwkSZIkSTAfSZIkSRLMR5IkSZIE85EkSZIkwXwkSZIkSTAfSZIkSRLM
R5IkSZIE85EkSZIkwXwkSZIkSTAfSZIkSRLMR5IkSZIE85EkSZIkwXwkSZIk
SRirfPRAMh9JkiRJmr46z0ckIPORJEmSpJnKfCRJkiRJMB9JkiRJEsxHkiRJ
kgTzkSRJkiTBfCRJkiRJMB9JkiRJEsxHkiRJkgTzkSRJkiTBfCRJkiRJMB9J
kiRJEsxHkiRJkgTzkSRJkiTBfCRJkiRJMB9JkiRJEsxHkiRJkgTzkSRJkiTB
fCRJkiRJMB9JkiRJEsxHkiRJkgTzkSRJkiTBfCRJkiRJMB9JkiRJEsxHkiRJ
kgTzkSRJkiTBfCRJkiRJMB9JkiRJEsxHkiRJkgTzkSRJkiTBfCRJkiRJMB9J
kiRJEsxHkiRJkgTzkSRJkiTBfCRJkiRJMB9JkiRJEsxHkiRJkgTzkSRJkiTB
fCRJkiRJMB9JkiRJEsxHkiRJkgTzkSRJkiTBfCRJkiRJMB9JkiRJEsxHkiRJ
kgTzkSRJkiTBfCRJkiRJMB+pEwMNk90izXzT666bXq2VJEmtmI/UCft+mnjT
666bXq2VJEmtmI8my/7EOeTr8XsVvbWRvqqT9Ue6zWZ7MPr+ZHObI9Vsw2i2
OZojqld5NFsbq+00z8NIr/hI99Jq+3WdkbZ5/Frb6qx2sk4rh/ZOP7QtHNp9
bgaUJM1U5qPJYj4a276W+Wj8tmM+ar9985EkSTOJ+UjVQFGX7007U3dqvnY8
+szTneekE63OUn/iruPnTHOdie+lt2ptX6K1fN35a6ev8ciekiRNLvORKvPR
2PKcdMJ8NH2ZjyRJM4/5aGLUXhz54jPp3enixHebPai65Pz09nRKarXH+iqu
yzvT4almnFaZ6MfpY+kV6S/T36bXp+PSutQ80lZnYEP6YHpfuiW1OgOdHONV
6T3po8XH2vrXRBsWprr9zrfJWT0jcbZJlJ0fUV3nwvTPxbzUfmv1DLPO8en9
ibN9Z2qu3749qxNnia19KXWync6PuifxXvin9JL03PSC9K50Sao9c9pQt8YZ
49p9PN2XRtPmuv2udF7iXfyiRGv5+h3pnLQjNbdT1VZ9JfFOPy110sK6ha+n
t6W6hea5Wpo45837nLN3TDor3ZiavydxxJ0kaWYwH00M85H5qPNjMR+Zj8xH
kiRNFvPRxOO8/X361fTaxHdrH6N+TX+bXuJvpT9KW1Nz/dp7JIv9SmILrXrv
DyZ6lf8jPTY9Jv1u+p306PTb6Rmp9pnZZrPHztcLEtv57+knqdnyTs4kX38x
PTI9Of239JttPSr9x0QqqdtvbpMzz2vr9n8jcSycN65vzVydJEfeTX+VHpfY
IympeSZbbYcz83eJ7dDa01Mn57l+94hES7gTXpPaH1d7zfvhhekJibuLlnPX
cadxhh+f3pzI2rSh3tWkA67d76fbUvtz2ElruabPS7SWc0JrWUJrOQra/zfp
+tSqDXUJyeg/p1enkbaTjPPL6R8SyzlX9fp+J3Enc5/zvqjvFO5w7gHW4Qx8
LdU2mJIkSdOd+WjimY/MR5X5yHzUXGI+kiRpspiPJlLtkxyZ6DvRj+WT3Xy3
OQZmfSITPSc9JV2bmtsfKN6SSDpzEuvQn2SdXelViVax/ZcnekGMq2GPn0t/
nn4v0WtlxB3br+2vXy9JpKqnphtS8yg6P5+MR3pi+tNEuqHljHH6agPfZVwc
owSbY5zo8f5FuiB9N9GrpB9+UnpT+sP0pPTMdGtqnofmUcxNJCz2+Mfpz9K2
VK9v3U4zH70yPS3RKq5vve7Ns1qXM+aN+7NeL3rvrVrSXj0D3FG0jV73HyTy
4KWJdRjr+KnEWeV3C4cltrYn8fW3E1eBs7cxtboKnbR2cXp64t1RW8v9QGsv
Tx9KnP+6Pj8nm9uvX38gkbkYIzfS1vJO513/1sTyZj66InHXcb+dnDiH3PMs
YYwuP4V4X/Cu/5fEfBrN341IkjS9mI8mkvmIr81HrY7CfGQ+4mvzkSRJk8V8
NJFqn+Rbif48Pc/mHAV1fT6TTp/k2YkU8/lUt197JtvT/06M+amjyGp/kt4U
22Q8Ep/Lpofc6ogY3fTiRN+PI7oy1WNp9jPpFdMrq+OODi0f8clxxuzRH241
I/RIt8l5++vUat7m6nvpWYnzyZmsZ6OuX5cwko2xcMemNybGlbHlZjvRzEdk
WxIN/V6+Xp5atadumXGPpAzuOlJMs7/dybmtmX1zIgOSr2nh91P77VyTmP2A
O5zldXwd7xfO//9MI81HtbXMrvD8RNIhJX0ztd8OR0Sm4Pxz1FtS3UttFbNh
MEKP32+030vzuD6duHMYi1iPq17lHyTeuWTPOo9H08rEDC2863mPHJ2aLZEk
aXoxH00k8xFLzEd1ffOR+ch8JEnS1GE+mki1z0Afg7E39EwYn8N3Obd1/U8k
8tF7E73KN6RWvaybE3uhb8bYttoqRn+xDtuk51O3Q8+zXvearW5P9ELpPb40
7U7N/tjE5CN64KzTbH9Ts501HzFnAn3aVttsjo/itZyNesbq9WIJOZQeOK9a
kRjXxKfjGcVUt1DPRjMfsV+uLGO02HIdA9k82/Uo+Iw/+YgxdXx9aPmobpm+
NPczdx2juWqrmtr3uuuxjD4f1a0xPpPWcofX2UjqnVB/s1HzGr+X4EjZDiNU
676mTj7idzX1nd5sITOcM/M/P1v4vQo/czo/z5IkTTXmo4lkPmJ985H5yHxk
PpIkaWoyH02k2pNkPgRm/eVT2Cckvlt7L/RPmP2YUTp8Vp1eH6OS6Lezfu2V
kblIDTzdlStVW3ViondED2d+arakqe6LkX5sh/4Sn1WvR8HXE5OPWs18PtJt
1nzUfoaE2k/m6b18Op6ZkOsTQpt9VM4A/XmeMcoZYzYMlnNcrZ5z2sxHjK/j
DDMHBTN7cNfV8YfNvMZ9wt3Fc1pJasxlPdL5GZpbZowZdwvzWtSWt98mve5m
m8c2H7FlrikzXdBaMixnr7ak1RbqT0vSBBmT5yyTMprtn9x8tCa1Olf1Xc/v
W3gvs4U6A0zn72VJkqYO89FEMh/xtfnIfGQ+Mh9JkjQ1mY8mXu1N8Rlz+pzM
ncvy2gNh3mlG9ZCSyFaMniJb/TixPqPa+JrMRR+JT/rXNoAReszTW0eCNfuf
TbV/yJgc5pqgX0ryYs2Jz0edj69rv832+aiqx0jvlKvDVaszXbB+7XnSq2Rm
hg8nlt+f2DtH1xyHVrdZl9Or5+5iDmdG/fH0z+Y5r1tjLohfT6cmzgYj/bhv
m/vt5Epxr3I/kxSYx7u55kiNVT6q3+WpsnW2jfajE9u3iufzMr6O+5/3At+t
7/qpnI/qcrb2usTPENJ0PRZJkqYX89HEMx+Zj8xH5iPzkSRJU5P5aOLVnglj
0hiF9YLUnWqfk5nA6TnTv2U5T5/8zVQ/6117JmSu30pHpdqSBxMzV9P3/mTi
u52PQeJr7gRGH7G196Rmq8Y7H/2v1Mlc3J1ss+Yj0kr7LTA3ch0/1kwT9bwx
wopnsLKvOlMHPpjo6/I00rq15tc1H5GGfph+lH4t8axV1m+OE+Pa0T9nFvc6
U0TN8iPNR6Qtsga5g+3XlrTfWid7GU0+qtthLCtpjnuVc9hMGZ1sbV5i9Cn3
xkWJ79Z8PfXzUd0CmZF8xNOZ70rttyBJ0tRkPpp45iPzkfnIfGQ+kiRpajIf
Tbzar2DUEz0T5l5gtu26/r8m+qVnJ5Z/LdH/YYxc7YfQ62ZmAHrddVwW6Mnz
mX2SRZ21uPOcUtETY4+0iuW1beOXj+ih0R9mTmbSJc/x/FbBEkZ21ZFvNcfV
fMTsFvWZnvX+ZywfW2M0Hc/NpH9+daptri3nGazcA3+S7k31SLl2tf9Z12mm
G7b/qkQ+Yn5pjpQ+MKMQych1X7xDuTo8+Zflhyey9mjy0WcTZ5VU2Jy5opOr
334vY5WPvpEYEcdM6czM38l2muswWo93HG37cuK70zcfcXdxRK2edt1J+yVJ
mgrMRxPPfGQ+Mh+Zj8xHkiRNTeajiVd7C4wsYpQR/RMSE9/l3NLf5rv16a43
Jcbq0OOqY1rWpqcn+ur1uY0gi9Gfoe9NIuC7nX/CuvZp353o/TKbMdup64xH
Pjoz0UOjj0fPkHGJ9Or5mrzAuETmLqjju2oftW6Tma6Zv+JVBQmCXMNsAyRN
vq6933rd69eHJVrFSDy+S0v4uiZZrhQpr56HVvmI81CvLKP1OBvMw1DP6gXp
kem0xHLG4x1aPqrHyzNnuUNelOpIyKmWj0jZnHPeTcyX0sl2mkd0TyKZss06
q//0zUecbVJk8znU5iNJ0vRiPpp45iPzkfnIfGQ+kiRpajIfTbzaX+pP9LHp
q/NcUb5Lovm9xCwKzOzNdxkrVedD4DP4fPfyxPL/nXam2pJNiZ4/vTXmH+a7
neeUekRvS/R+mfWX7473+LqaZZ6dyBrMZvBPDe9N9EJbPV23mbnoAf5uQQ6i
50zOJTvwXmien/o1V6Q+I7imnibaTJ+Zr+s2O8lHrMN4P5Y3t/P6xHVZn/gu
OW70+YicxR3C3cucJJ1vrZXxyEfMn1DH14105Fhdh3ccaZq2MVsF352++ejr
iSPivVB/G2M+kiRNL+ajiWc+Mh/xtfnIfGQ+kiRpqjEfTZbaD/yXxAirOnsz
n8qnR1qX1z48zxJltNjxieXkLF5b55eufZWt6bmJJHVk4rud5JR6FPTuGIHG
1t6emlubmOfD1k/9d67VNv88MZcCIxtXpI8njoIjWp7YQnOMYt0+OeXJiVGO
5A56tp8sWMK5/f3EWLv6bqpXtpmP6swepOy/TbSZecsZxUcWeGuq1/czafTz
MzAXdL1SjDrrfGud7GWs8hHZgevLbypq8u3kXq3rLEucc87zuYnv1nz0/sTv
TOqTndtr5lCufk1Y45GP+GlTZ0fp/GxLkjTVmI8mi/nIfGQ+Mh+ZjyRJmmrM
R5Ol9i7OSPSF6AOznCe68kl5PifO8t2Jr/k0Pb3WOoqGzMVn8Fs9PZav6UXT
X2VG7uZ4rVbo+bDmHanOXcyM0KxZ+34Tk4/uS3V030AL7bfJSDDGN9aRYGAv
7JGxdq9NjJys+61njK8/lngVc2jUOSWaGIPHPPD0ruvTReuVbZ+PwMwAv5qY
pYG5rFlyWarrj1U+ujhx1CSOG1Kz3z5SY5WP6ndXJdIrWxvpGFTW4eg4dpII
x35tYs36vmZWf54c/fI00rF8/ATg6jOmtK4z+nxUl/MbGPIRz7nm3wW+O5rM
K0nSxDMfTRbzkfnIfGQ+Mh9JkjTVmI8mS+2fkA7on9CXY8aA+qzVOl9u7Qnz
OeinJEbKMWruNYnMRf+n7rf2bfjcPf1tZhhgvuuaLFodRW0JfXX6vYwZY44I
vjvx+YjzwHc776G1ykd/lUhDnJPamyV91GPn+bN1m7UN2xPb5Lp/KDGiklka
vl3Q22f5SxJ90VYjJzvJRzznlOvOTBrMx04PmRF3df3R5KPaNvreJA6Ovebo
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
0eff0Rjp3kfTWt5ZnW+BNcfv/Vh//o/H9iVJmlzmIzWZjzTxzEetmI8kSZpI
5qOpZqBhYl7bfpv7GkbfB2u2dqQm5tjH6lp0chRj28KJ3NdYYcvcXa3uukNr
7Uh13ubRt7Zz7c/PaK7LeJwZSZKmI/PRVDOa3sh49GTYjvlo9Neik6MY2xZO
5L7GCls2H7U/LvORJEnjx3wkSZKkhw1kSbOX+UiSJEkPMx9ptjMfSZIkSRLM
R5IkSZIE85EkSbOBM2yovYGH9kXt3d8Xtf+hgShH2ml2Mh9JkjQbmI/UnvlI
gvlIkiRplhrIJJRzMuzbtTqqa90JUXsfemjv4NKISCYkzTrmI0mSpFnKfCQ1
mI8kSZJmqcxHEZCietccP1g/+cuo/u0row6MrxvInCTNGuYjSZKkWcp8JDWY
jyRJkmadknr67v9xVNeNL4jqu2Gwula8J2pgf1fUw2s6W4NmC/ORJEnSrGM+
klowH0mSJM0mAw9P9z6wf+/9UbuWviaq58YXRPXOf1lUz0//MmrPvedFHYhG
A/sHBmdykGY+85EkSdJsYj6S2jEfaXrx+YZSJ6byO6XZtqncWmkGyjkZSD09
d3w1aucNfxnVN+9lgzX3xVH9N74waufiV0f17d4e9fDoOkfZaeYzH2l6sR8l
dWIqv1PMR9IkMx9JbZmPJstAMdltmZkOjBxIk92W6WRfg3dpJ6bXuZr67w7a
Nl3OpzR9/Czd7Om7J2rnwldF9d74/Ki+uS+K6p33wqwXR+247s+iutd/IerA
BuKHxlT9uSGNFfPRZDEfjbep3wOcmsxHh2Z6naup/+4wH0njw3wk/dvMR5pe
7kt702S3RZqK9qQtabLbcnCbU30X09r+NLltk2a4gX2DlSlp160nRHXNfX5U
z6I3Dtb8lw/WglcO1pLXRvXedmbUzmVvidrTvS7q4YTlKDvNZOYjTS/mI6k9
85GklsxHUgfMRxOpjhW5Ld2Zmt+to1/ajzBp9d1Oxs8099JsA183WzKRLawj
l+ake1Jz+/XrrWlh6rwlrdZp/91OttB+nc7PZ/NV7bfWyXaqH6ST0umpvmdH
eg+M7V3U+b460f5aN89eq5az5CtpXarrjLTlnVy75jbrFvipwjul2RKW8O5Y
nVqdjfb3aqstd3IUn0ykJJbQ2lsSS76WVqZme5rHPtI21PXH9g6cyqMWNbvt
zxq0e+fKqO65fx3Vs/w9g3XXeVFdC18Z1b3w1VF9K/8pqnvd0VE7Frwkqnv9
56Ie3pr5SDOZ+Wgi1X9VzUedt9B81P78tN9aJ9upzEfmo3oeWt1drbbcyVGY
j6TJYD6SOmU+mkicMb4+J12cWNL+X+f6by5jzM5NzTXb92c62Vd7rf7177yF
nfdYmut8JrXKR/UMfzX9bdqdOt9Lc81WOjkbo99LXYd3HL3HztvT6h4AI50+
kA5L16cL0ofS9sT69Tx3svemVlvo/F49tF7og6l59tr3eGtrv5FuT3Wds9Pa
1P4YO79Gna9T90U+OjzVV9X93pCOSu1b1fxuXxrNHfipVPMRra35iPfvitQ8
xvZG8xOvueZofl6N5ietNNYG8pbsiepd/k9RPTf+fVTfyg9H9S59bVT/+mOi
elZ/Mqp71b9E9W46I6p70esHa+5LonZvuyLqQNbKecIn+7iksWc+mkjmo/Zb
MB91so75aKT7qsxHLDEfdf5a85FmCvOR1Cnz0USq/77T8/x2YklP4uuuxNgw
+qV1C/Rd6bVuTDtS3RcjZ1alVu2hN3Jz2pbuSvxbXz8rzSiXmkro2yxKXP2R
tvDWVPs/qD0KerOLE18fnepd1OyBkIaOTcekH6fmVcCmtDzVJFVxlpqjp/ia
o1uS6vWqGFG5NPGuqd/l/HM++bp5TsC1IMtwbjkzzX3dlGo7W2VJ7sbao664
E5pzYnAVOKLmJ+v3NXAd67wBnAeW70zN/fI1x8j5aR4vMxLQb28ur2eb91Sr
s8f6nLc1qR4LV/nj6YrEO6J9suAoliXeX81rUVtI8mL9VteOe4zzVt+V6CQf
zU+fS8028C7gbNfrxXb4qdL+DtyQOJPNc9IqH9Xxfq1wn9RjR7MNXMHmz0DO
A9eaJbyn6ru7ec7ZL+/x5ju0HnXzZ5o0yQ6kmMF81HfP+VFd1/9FVN+aI6P2
bZ8f1b/u6KjuFe8erNWfHizy0YYTonbNfWlU90+fH9Wz9I1RA/t2RT3kXA2a
ocxHE8l8VPduPqrfNR+Zj/jafNTqTMJ8JI2Y+UgaIfPRRKo90vMTY3VYMjd9
OB2fGP3yprQ+dSc+y/wPiR4OfVR6NYxAo7/Bmp9N7J1/8ckORyYSx4sTn8dn
O2clejIfTezlovT+dFx6c6KPQcqrLfx84rX0TMgsjOOiDZ9IHB1ng/7nOxNb
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
SWR33/1Ru5a/N6r3pvdE7Vz2lqiu1R+J6rv3gqiudcdF9d5xVlT/lkuidm/+
blTfrUdH9Sx65WAt+PvBmjdYvcveHNW37hNR3UvfGtW78FVRPYteE9W/6B+j
uhe+NOrBjedFHWjTDB9ll3eUT8WdocxHM4n5qHPmo5G2xHw0UuajsWI+0lgw
H5mPxpb5aCYzH02W+hl5lvB1s0/eanl9jmf9bnN5fU4os3mTg/hsNVeN3MTo
EV7FWJ3mv/51+3UvnbeQbdblzVEuzXVa7aX9WWq/Tt1Ls53tj7eu0zyWet6a
52GkZ6Opk3PbqrXtz0+zJa3uyX0NrdrZfG2r5XWEGPNmMFKL7TPusdURNa9U
5++dVuetfrfVWarbbL5fmmep1Xuqk+Xt29nJNltdhbH6+dPqLmq+I5pL6nbq
FvhXhrk+GFnHLByMx2POijoyuXl+mvdn+7uoubz9dTy0d7HGx8+Swv6BPVH7
Bnqi4sfK3p99b6aN/iKJDOzfE7XjljlRuxa/PKovAlHEoqVviOpe9eHBWv3x
qP71n4vas/WKqH3bl0b1rp0T1b3i3VE9S988WIteG9W79B8H6+Z3Re1c/Pqo
rgWvjuqZ+8LBmv+iwSJJzX1B1K6VH43q770zKt4A+R6YOee53jk/dw8N7Mny
2bgzh/losrTq+Yy+f9Jcbj5qtU4naaLV8dZ1OukNtjpXh9az6uTctmpt+/PT
bEmre3J4f9F8ZD4yH5mPJp/5yHw0fsxHs4X5aPao/5rzSXbmvOWT7NelyW2h
VO9SZk5m/ormdzUb1CvOnAnM1MF8JsyBUJ8WLWFg8AGp+/ft3xO1a/vlUX07
bozKsVA//zPkQJ92+o6++1n62Nd3b1T3mo8PVuag3uXviOpe/KqoXcvfEdW1
+LWDteTNUd0r3hXVe9c3o3Zv/kFU1y2HRfWuOyaq//ZTo3oXviKqZ/nbonbN
fXFU9+I3RPXNf3nUgXyU1Tv3xVHdN38oascdp0XtH9gbdZBzPm3kuR3Y97Mq
9u64Jarr7sui9u3eGfXwpeBemkmpcDYyH80e5iNNfeYjVeYjHRrzkfloLJiP
Zi/z0WxjD1PSzONPNg3s74nat3dH1M8t331XVN/tH4/qv+P4qD1bvxm1r/+B
qINtaXplJfrwgylvz9brovo2fS1qz7YfRvWu+WhUz01vjerfcFxUz9pPR3Wv
fG9U/8aTo3bffXZU/+ZvRfXe8fWo7nVHRvWu+8xgrT08ateiV0R1z31RVO+C
l0X1zHthVPe850f1zXvRYM19cVTvmo9HdS96ZdT+HTdFPdzM4fliiiIvt5h1
YU/Xxqje286J2rnwHVE9G06LOvDt/fsGi80cGITnz6Xpynw02/hulTTz+JNN
5iPz0RgwHymZj2an5ifZW30qWZosA8Vkt0WTrzk3RXOeBM1m+/f3R3Vtvjhq
394Hour80nt6VkZ1bTwsqnfTsVF7Hrw8au9950ft61oedbD5qKfyKKn92SMf
nAOhe8fiqJ6bPxDVv+ojg3XP6VG7Vn0kqnfVh6P23HNp1L77r43qveucqN3b
fjJYd54V1bvuiMHadFrUzlUfiurZ+JWovju+FtWz5HVR3QtfHtW1+FVRvas+
FtU17+8Ha+7fRPWu+Oeovo0nRvXe9M6o3ZsvixrYsyvq4cQxNc/nz+ZaqGPj
9vdtjuq98+uDddd3o3auPCJq+43/OFi3nRG1/6H+qIGH9kbx2v4Hb4rquX9Z
1MPp1TnApx/z0exkPtLUZz5SZT5Se+Yj89GhMh9pOPORJEmaxrL/SZ+2f/P5
UXsfuCzq4bmX9w5W6uu7N6p381lRu+/8ZFT/6jdH9d76gai+nT/Jujpq/77u
qJ/rzR/4kP4UmMO5ZI3+Pdujeu77aVT37V8YrBXvjOpd87GonUtfG9Ub/xu1
/B+j+lZ+IKp/zceietceFtVzywejmKuhf+Pxg7X+qKi+ey+J2rno1VG9S98c
1b3yHVG7lr8tqn/jl6J6lr0zate8F0R1LXtjVN/qj0f1rz08qmf+iwdr4zlR
B1peRqBNGs7egfF+w/Na386VUb2bvxv14NLDox644s8H68o/i+qa//qoB5d8
OGpf7z1ROW38Xsbk7d29Parr5qOi+rctj3p4q9NrxKYGmY8kSdI0Zj4yH3XO
fKQOmI8kSdI0VsYv7b3/h1F7Nh4Wtb9rRdTDKw2ORNu/vy+qb+t5Ub1rXhHV
c9PzonrXfzhq971nRfWueVdUz8bPRO1+8IaoPbu3R/38Hid1Jucy10H33d+L
2rvliqjdW74Z1bXiXVG7lr05qndwcN1Heha/Oqp78eujetYdGbVr2VsGa+UH
onpvetdgLX1DVN+aj0V135J183ujdi59e1TX4jcN1upPRfVv+mpU14JXRPWv
eF9U74r3DtbN/xzVd+tno3oXvjKq78YXRj244KVRe3atjxp6nOqEj7LLK9XI
tvv3dkft3r0jqvf+eVEP/vi5UV03fyaqd83pUTuv+4fBuvqFUQ9c/ZdRXVuv
j3r4WvQP1v6+qJ51X4jaMe/1Uft674t6eD9Tc1Sh2jEfSZKkacx8ZD76N5iP
NDLmI0mSNI2Vfm/f5ouiule9Nqrv1vdFDfRvivq51fdsieq/67jB2nh4VO/d
J0XtvfeLUX2r3xbVv+YNg3X7nKjeey6K6r/zc1F7u1dHHawRE5OVfjZSa3fP
LVEPLn5lVM8tn4rafe93B2vLpVFdaz4d1bPy3YO16MVR/euOi+pee3gUMzD0
rT8pqnvZG6N6N54Ztfueb0f13PKJqO4lr4nqWTxYXfNeENX907+K6ln0uqi+
Wz4UxezfveuOj9pz5/lR3cvfGtVzw98O1vyXRu2Y+3dRu9YfGfVwTpmQ+QoG
Bn5W9Qzu3h61d9v8qK6N50dtmf/OqJ47Lo7qXnNi1IPXvSaqd8G7ovrmvyVq
5zXPj+pae2rUwyFvz2BxLbbMjdqx5INRO289JWpP1z1RQ00xH0075iNJkjSN
mY/MR03mI42C+UiSJE1nzKI8+J993Wujem9912Dd8tao7ts+ErVv386oOlfD
3v61Ud1bvhLVf1/WbZ+I6lr+wqjeVa8arNs+FtV391eiupc+L6pnxQuj+jd+
PGrvzh9H7d/fHfXzzWEmh3FIAQc6/LujejccE9W1/C1R3av+OWr35suj+jd/
L6pr48lRfbefPlir5wwWM2+v+9RgrT82qnv9EVFdqz8WtXvbFVH9t30+qm/d
p6N6N5wa1RNhZ/lb+9Z8PKpr1WFR3YvfFNW3bk7U7tuPj+q95V8Ga3Cg3fu6
lrwpateCl0f1LP6HqO6lb47aufAlUbsfvDrq587SGJ8fBtEN3/L+ntujejec
HdW94F1RPSsPy4oI+ekHr/iLqF2L3xO1Z9OFUT1L/2Ww5r09qnvuWwbrpk9E
7R/YF/XwPPCDN1zvA/OjutZ/Mar31hMHa8MZUft3d0WN8dFpApmPJEnSdGY+
Mh+xTfORxob5SJIkTWc/G7+0f8/mqL4Nn4jqv/XDUb0bD4vavWtF1IG1s3+7
/6HB2tO7Kar77rOieta9e7CWvzCqf9X/Ye++/6Mq+reB/x3Pz8/zy/f+3kVF
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
u7h9kQzHSOwftsSQ4QhKrY/UltQ+Eks+onpe3P8BmdpnXvFYySM3trb2cWzy
yJ/HVV/D2pCv5PVSn+WW5PNl79U085Bj++R5g2yteqfVFNY4tc/647VW98b6
mmekHp0tTx6Z58mwSlXvHLUNtbeT4dVJ7j3eV/xUqq/kY34uWJ+qM0759w32
bfI+GfVzV5cW8rqrNZcaXk0+y78P8O8hbGFN93bt1zH52UoZfpPw7Gr/rshV
wrYlXyP17NRnkz9xyd9+rLzU+ojv0lWSTiJKfWTfXAHBrDbCqV6QKDpOdhdO
9XggFsoKFBfZncDI/wCqYgFIjIRZEsjEpEgsLLiLIHQpDYyTb0Jwb1sw97QT
DnaH4JEU4WgPMA53g+DBrr/DXyM1DygSW7oL+9qC79hAiIUdkOgH2TbbvAbu
I/3B3N8RuNaBcaCL1DVJl3v2S8qz5sEUCOxuK5yfCdUdHwY+Nq9vAt/etmAf
6gbmgS6m2GFnBQ/ROcm9VvFY5oEeENjaBnxrmoN3Wwcwc4aAcX0XxMxyUC5C
9e2grLMdvL4L3OuagbmtCwS3dlZ0USRvSbKtM/i3tYfA7l4Qt8rgtyMntUWn
PkXXR08/uj7S9ZGuj3R9VJcW6vpI10c6DxxdH+n6SL0ddH2k81DR9dHTjzoG
OC2TXGVwzthymTUyrE34LHt7rZLdMuoIgaOLVTI84lEZbuGIlHPwOM7ku7gf
HpFHvyjDZ9kGjmCXyqTJ8JpyhMbt6giTe2MVxrEWR0TcwlHxShm+nlsWynCG
odpjHAFul6mphzm/jvUL38t9qufFNvNZHrdKyT4ZPmaluViGdetkmWsy6jVl
z3DkzPEk509y9MiqitszZNQKbqcMryZfw/7kFWE9yLuFr2ePcT98F/uT153n
zrlh/ITyrDmrk32rHp13IPfDPV+RUe80ntcZGfWseUT2DF/Je4zzOdVrx3U8
eG/zlWwn78zxMgdlKmR4vfhKXkHe4dz/LzInZDiqVz8RPNOaKjW2RP18sbrh
s7xq3D/7UH3vVRm2lufCXlqjhH3Ia8p38RPHK8sWHpap6R7mealX5JwMn2Vv
sP28e1Nl5svwzlR7nr2qXp1NMnyWFSWPwhbyNbyfWY+MkVG/Z3hc9gDfy0qW
805nybBXeb+p3yQ8d/WzUCDDZ3lnqldnrwyf5V8/2Bv8JuGdyce1/8VD528R
+ZukfOg9twZ8ixpBYGUHcK1qA+6VgnfFPZ6M1qBu8a5oLd3bElgu+CXHmg4Q
M29A4rh/8O/x742Q+Shml4F9KRMCu4aDa35bYfoLwrSXwDOrmZDeEtzpLcCT
1gz8qTVpKqS3BOe0F8C3dQhwhe141IbEbLeSLVAx9d/gSm8JzrRmUtPfcaW3
ENKaS82kJkJ6c/BOawCujFchErLgbjwqyFh38sE1uxX40pqDJw2n0MKd1tyd
2OEfaiHIViWOPrMROKe8AO4ZDcA1vy+4D8yC0J1ciMdD8XgoqbPvvwbxaFV1
2yr2TYYbI/4JjonNhPGNpMbSK7VqKN3bUjmhEZSPawAV0zpC3PJA9YH1/Lr6
HV0fPf3o+kjXR7o+0vWRro90faTzRKLrI10fqddA10c6DxVdHz39cHTB/4/z
X9CfklH/z87xiTqHhKMIjgM5OiqU4bMcRagjEIavZJ9zLh/HHhzzcLzNLayV
OM7he3lNOTLnGFit0biqA9f35hbWSg4ZbuHsGp7vASUcyaTL8C7imJNjKr6X
4yWOx9QzOi7DUXpciTqniKNBnlGxDEe83APHxjxTda6UWh9xJMmzXiJzR4Z7
4N6Se5tVlboCBnuAr2T9wu0ckXIFAM6SYl2prpQ+TYav5Ewkjhj5rFrFcAv7
inPPeF3YS6xTfpVhX/EorGi4Z/Uqu2TYA7w/1eueXHFwnxxLq7NDeaXUV7IS
V68pe5tVsFpN8A5R517Ok+G5sKpS57+xhWrtxi3sB7aZ++FjdV0R9fXqZ4Hf
Zmp71FmRrC/UWaDcp3oFecU5Q4yfUNbafJb3Ff9iwH7j3tgn6pw6/k2A3wDc
MlNG/S5lr6pnpF4pfp+o3xjcG2fHsefV6pvXjvczW8X281nuh3cIt3A2HdvA
u139xPH6shri54jnzmf5fxDegayw+LcIdV4l73ZeF/UO5/eb+knU9ZEOV0vg
YNl3cY+wqCkEV7YH/8q2wgoh8HAyWoN7dQeIBq6Aelz78hYIV+QD1wSoaZYV
5+BxD2bRGnBv/hycs9sLU/4DrET8qc3Bl94KvGkthdTmf8id1gqck/4F/pPz
gEePxizgcX2HJ0DF5P+AO701eFKbCaKQSdQyrhkvg3NmU3CL0qaFJ705OGc1
A8fslhCpLIZEWSLXgoiaLqhckgKemQ2FtJbgRsN+rwXw2cRrZjQG15QG4Jze
ENxL+kDg4GSI3DgC8ZgNan/GpSpFzHBBIHczhMvOgVq3OvdOgoof/hdcE5uC
c3yjh+aY0Bgqx7wIN9P7QiRmw293op5fV6+j66OnH10f6fpI10fcousjXR/p
+kjn8UbXR7o+0vWRzqNH10dPP+osOLU+Ul/D/+9zfQb+H59jD440OLbhqIZV
D0f4HH2pIwTunzO1OOZRZ0NxDhLHb6yYWE2oIyu+kqM4zpZRKzt1Vow6A0o9
Otc95viTtQOPqM6R48iH7eSWyzLqmJnhKI4zsrgleR0JVmHcJ2sl9ox6XmwP
71u2RK2weFyetToTiWfHs1DX92b4So7r1GNly3Bcp/YPx5A8CmsH9d+/8+qo
M/fUlqjrM/BYrJU4c4kjatbXvIt4n/C9PCJ7iT0zV4YVB4/LPmFdwMecJZU8
q5DhZ58t5GicZ632m3oWHA9XKuFR+Er2A+89bufMMV4v9jxH73w998ZX8kx5
17HeYZ+wx9hLfMy2sfd4XryyrHF4j7FO4ev5GeQWngUfswfYWp6jehfxG4/t
Zw/zWvMO5F8GuGe2n+fOeX2sKfi540w2tpmfd7We4j65N25R7zS2hL3HZ7lP
fp+w5ep3O6tmHpH3GK+p+rcOVvQ8I54L5wTy3mOtyr3xiLzb+Rp+46kt5FXj
dnXGL/fA7xneUbz6E2RYJ6p3412dv31Yp7D6CFcWQmBZK2FFuyQPVhn5E9qA
R4r6SiFxXCmwYxA45zYE96qBEDyTDhFXCfyupRLH+CJsc8hzC3y5q8Cx5kNw
o0iZ2dQx+QVwz2gE3jQUSq3c6ZKsXxJ1h3zsTWsOjukNwLpyFBLlg1w/IRaz
wbX+fWFaA/DNbg2sj1zTG4Bn53fgXdobPDMaC7Nbwp1pL0Hwwg5I7DNmQLwq
Ap7tQ8E97SXwoOxC8aVUQ24UQWktEzPoUpuCc2oDYfpLwqIUcGROhtDNLIhF
vPC7S/vbjLVENRTygX1xN3g2fAcVUztB5bD/C3bRLlB34NoxFip/+Ae4JzYF
1/hGD29iE6gY+U+oXPUZxGShqGfWPR/R9dHTj66PdH3E7bo+0vWRro/YQl0f
6Tyu6PpI10e6PtJ59Oj66OlHHRVwtMC5auprON5Q53RxPMO5T3y2pp5Uxwnc
A/8tuboeNUePHBVzC0cg6r9SV2eX8Sqr43O2XJ0ByPk2PDpH3ep8MI5LOQri
6Itt4LMckar7Z2s5VlfPiz3A2WLqfKegEo5yOfbjOI0jOr6S9QvbxhGmugo6
98m5Uhz9craPeiyOlpPrI45v1T5hOB9JPTt+drhn9i33qa6uzP7hcTnqVkfI
7G11LWuOKnks/ut1VmSsj9Qry9UPOCbnJ1edu6VGPWu2jfPc1HllPKLaNvaA
Oj9NnQOptoFjbP4eq1qz8LH6+7ZqLcmqR51fx9lfau2mRq3j2PM8rtrbvDPZ
Y7wbWVmr10v9ZKmzy9Trpa7dzTazh1lf1LSytzrnlp8O1lN8Vl33g1s430yd
g8d7T/1FabVCZ3+yn7lF/fsAn1W/Hzh7jZ8+3p/qzFv+jSJ57ivDtT64igK3
8Ljq33DUTxzDTxxfyauj3i3sSX6H8K5gTcc2q3P51G9Xnb9nEp90rrAdvAOu
lZ3Av6wVBJcLgeUthQeuj9pIokryZLSBqKcEEseVzH1Dwf1rE3DOaAjuKf8G
1gWOTV9BoHAzhIPlEJE/K1tT4rij78bt8gLwH08F57L+gqwpXFNeAM/MRuBL
bwne9FbgSxPcsxrDnV/bQ8h3FdSZaBHjFrgXpIB32kvgTm0Kvo3vgmfrp+Bd
3FOY1wFcU/4D/qxZwL6NRSLA3XlOzAbXtBfAM7cNuNJbuUTtJs1qBqzFnFP+
JcxpBa5tX4NRugVithtqv7JR/D8kHg1eywH33ilQntYTHKNeEH74J7jHNALv
yBcgXHoA1D24tvwIZSP+Fzi/7lHqI+fEplD54z/Au2kkVF+2eyuE6NTf6Pro
6UfXR7o+0vWRro/U6PpI10c6jyu6PtL1ka6PdB49uj56+lH/D87Re/L63hzN
quMZjkZYHbAPOaeIo0TOTEv+HUZumSqjjqU5d0gd83AkrK6NzH9drs794xiP
11r9V9J8Vp1fx39Hz3EO1+bleI93CMd16oidZ6TOpuP8OnVWmDre4wiN9QVb
y8ccdfNZHosjeY6+uH8+5kxC7o1jS45vOdbi3vgs5yXyXext9ifn7/E1/D8y
KxG+l1eEo1D2POsjtjZ5Bhp7Q/0dWHXWH0fIagWhriPNY/F68fXq1eE9o85Z
YjvV2YzqnDReL76XvcTaR519p9YLrMHZP9wPV95IrvpZU7MfMpXw7NhvvDM5
25OjaLXPeS68A1mp8f7kugTcA+fd8Vrz20m9RnzMs2ONzFeyQuSngP/eX11f
Qq1f1M8je4b9yS3q75nyCvKaciTPvzbsU6Le1eonkdeX14hXWV0hgcdVf0uX
vc39q7Ps+Cz3w+qSW3gd2XJu5/cJe4OP2dvcD/uK14u9ynqHe1arM84M5Mw3
niP3pq6UznuA9zy/c9RVTXif8KzZTrWe4pmqf53gHtS1KfRcu79zfpveBGHL
A45d74N3TXdwbuoFvg19wL+sLQQy2ggsgla2E/6kUBJz8/zLm0PMmQfVxxWC
B74F76+NgDWCR3KlNofKaS+Da+qLwvwu4Nk1GoyL+yFqOeG+f9Wv/EdiRlnU
hMjNY+A7MAEqFveGyhkNwD31BfDOaizMaQOuGa+AZ80giEctUNcrCF0/DpUZ
b0Dw8Hjw5qSCb89IYU574Prevt3fQ1U8IsWqqsf/5qU94EL5M6tZYG5b8M1p
CYkVHqa+IMxuBe6Nn4GVuxRivotwb2bhH19HsT552Hke3CcWwe0l78KdUS9B
xQ//EMY0APf4JsKEpuCa0ASco16E8MVjoO7Ts/47cIz4Jzx6fcQjOkf8Ayp2
TIXE5dL10XMRXR89/ej6SNdHuj7S9ZGuj3R9pPMkousjXR/p+kjn0aPro782
HM0mj5E4qlcrKY6a1Fey5znnRJ0pVNNR1C3J853UcA4MR0fqds4O4ngveQ/q
vxbnFraKe1Pbz9eoc7S4N3U2V/IWRt0/28NZVepYkXtW28938ZU19RWf5fhW
nZHFZzmG5AiQZ13TTB4+yzFq8nwqzt3iuFRtG89UPaJ67sk9xqNwrqC6arT6
rNrbyXtLPiKrS7ZQPRbPPXn2mvpeVsSsGWu6qxlW/cltZs+r62Oz8mKr2Nvq
PtmH6hxU/jWAnwh1deiawro1+bx4lJo+HQzbw6vMT6K6vgdfwx5W7xPeD3yX
Wgsnh/3Pc+H+1f2oV0cNe0/9S0hNLUn+PuEniG1L/tzxbxrJvzzLI/JzEVfC
vfEqqzWjGlY0atWm7pmfX/V+YNjP6t3LIyb/dUjn7xnWRxx7R0NBcB0dCUbB
AvAcGQ6B4nnCjnfAu7ID+Je3hsCS5kJGW6Gm+kjWUP5ljSFWngPVx5W/wXrw
O/DOaQiutJau+1e3TqxlnZh11gRcU/8DXEvBtbAz+PaPBvv6caiK+kHdf3Ki
YQOC146Ae89oqJzfA9xTXxRmNATn5H9BYPdI4IoQsVgYEqugXz0Ozv1joWzN
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
R0dHR6deRtdHuj7S9ZHOU4yuj/6qPM2R/7NZZSTXa89mO3X+Pqlp/eq/qj3P
X3R/6vxJqgeav80Hq/GFrJeMMghX5IB9bTd4zs4C//XdkBjnxyU5OPWfmgKe
xY3Btbg5eFd3FDb1Ad/2N4RNAyCwvLWwop30+/rIt6QRhK5tBbaHFYfvzHzw
pL0ktfA87vrIk9YKXGktoHxmQ/Bt+AD82bPBsbATuJZ0EVa8Ct7Nn0HgyEi4
s7QfVKx+B/xHZ4B96wTEI0Go7v5olaiM4nKVgXtz6aKBWxD2XQH33rHgSG0G
rhmvgDu1CXhWvwbu3V8Lmz8A/9mFEDw8Hnz7xoJn7fvgndMO3KnNpD8/60R9
NLkJuMTyCH+42rZYkdsz9hWo/LkVmN5bkFhd/G4YHPP6QcW0duA/MAPcqd3B
MauLsHAAVMzuAY6MweBd/w045/WGyrRuUDatEzgPpELw1lmoqooIkTAk7rFL
h8GTvRiMc7sgdKcIYrYfqu/eP66equ//JDpPPbo++qui6yNdH+k8a9H10ZOO
7k+dP4muj3R9pOsjXR89A9H10d8nZUr+6rb8eTiO4t31cHvge+Myj7dtjyu2
DD9Hyc9yO1/z9NtWv/LsX2sdHZ3qtRQebOwXi4Uh5CkF8+YBsG7sgVD5SfCf
ToXg2VngXt0W/IdGgy9vLvA3T6sPLo4VNSrAuf0tYU0X8K7uDJ413cC/cyAE
dwn+ZS2gxvpocSOwr2wG7p7VhDd3CXjSXoTEWgqPqzia1Qy4GoNj+itQuaQP
eJcKvhPThfy1YJycDYGzK8F/fgeY57eD/9QSCOwbBc6tn8Cdta+DL28RWFf2
Q2KlbnmhorYPrNyVUL5uIDh3fA1Gznxwrx8srH5dWDkA/HuHQyB7EgSzZ4H7
0BjwrOonrHwNfPM7g2dWM+AswcdbH7nHvgzOSW3B9lcAr0vsbgQcc/tC2cwu
4Fn6DjimdgT/8nfAsWAAVM7rCWWTW4P7F6FiTi9hbl/wZE4Hf8luSNxWsRCw
ojcrSqFswZtwZ/zLULl3MjhndofK+a9BxfbhYF/YCZFgBZjuGxCtikVr/psA
PyqJ1R4441Gv+fCEo+ujv090ffSsRddHjyvP/rXW0dHR9ZGuj3R9pOuj+hJd
Hz39sN/2yHD0m1hcUxndqbNQojIhGfXZmmamJe+NfT5P5pxM8rHUPdQ0zqzL
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
//I24Fkp+Le8CYHlHYSMNkJifYYOgd/qo9IloPZAqHQjuNJfBEdqS6iuj2Rl
JOfLuaa9LMxsDM7ZbaBiTltwL+wKvsWCe0Fn8MxuI8j5dZ70xuD6tQk4F/cA
78GJ4Fn/NvhzUsGx/SOwzm0Gb9Yc8B35BfxF66Fi9Wvg3/AW+Na+A86M/uDf
/x1YOTNAPZeIoxAc278E/8HRUL6yF1Qu6QauzYPBs+Vd8B36EcySDeBcMxA8
C3uBY1YrqJgjONJbAGtDb7rwROqj0S+CP60X3I1YkKiPTAdUrnwfPJcOgnvD
UHDMaA+V4xuBa9QL4B79Ejh/aipM7wDlk9uA/+xqqL594hCNhqDiQDq4No0A
+/oJKF/zJZSNfRlc4xsK4wTHz62gcsEAcKf1AMek1uAc1xA84xtBxfjGUL74
bWFuX6iY3FLY+gO4lr8Dld/+P/BMbAzOOX2Fdd9A4ORyMK6dBCvogj+pgtRZ
eYm5eXpW3r3o+ujpR9dHuj7S9ZGuj3R9pOujZzu6PtL1ka6PdH30942uj55+
2G/8Pz63cHzIsTHHeByHcHTEkRtHdBxxcSTP8RhHCBwDc3TK7Rzb8FgcX3Hs
wS0cY6ijaI5IOe7iyFwdNXHUyjYHlLB+YZt5LhztcCTG8fMPMnzMkS3vk1IZ
zs7iHjjG42MefY4MW8vxFUf16lwshufLNQ24hW3Lk+E+1fNiOzmW497Y5+o8
sUsy3DNfM0WGc/m4T45FOXpfIMNPBLfMl+FV4+iOV4Et5FVjD6ujSr6eo3qO
P9X7h+Nhju25RV3XgmHbWLmw5/m5YxXJ2pBjdd51rI65ggdHs6wveEZ8ljUI
j8X9s528M3k1eV7q3C1eU95dfD17nrM9eWVZ+3PUzbPjeJ6v5z3DLTw6azHe
D+xt9i2PyxE+7wS2gVt4LNaAaj9zO4/O8Tz3rN4V7A3eUdwnR+/sPe6T58V3
sU+S61bOqOT9o36W+RlkGybK8Brxs89rzdfznmRLeCer585nec/wWrBv+f3M
PfB+4GPe26zrecemybBX+TmdK6POgOX58lpMleE9w0qKdx1X7WAFxLqS++d3
HXsjVYbzh9Vz4WN+srxK2A9VSh7H97GOzH0z5WobI3HEFTY9YFYUgKdoJbiP
jgbWFL4VHYVt/wX/jjeENV2Eza8Jcg3t8PkMCJwYB75N/cA6Mwf82ePBueV1
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
wcr7COyMN8DZOg0K57UH/+TGYMxtKyzuA866T8BY+yH4koaCkTgEis/mgZ3Y
D7hKQ+GEp6Ao7VWoqiiB21f6c/2u415C10e/VdQnn6ltTzVn0PVRZAYVueVu
eyDy1fq3Vm1D5Jba3lXbcXR9VJ/+rE+f1L/P73Z0qT/r+iiyDfXZp7az1P/s
Oh660PVRbR2j6yNdH+n66KEPXR/p0KFDx/2Ixy+rf/yuSMf9DllG1OSioW/W
QyC5MVgZXcA5MhXc7e+Cs24IBLeOAmfjS2BldQQ7LUpY1caWSzGAu7IV2CsE
Z9MYCJ5aJHw5CZzt48Db9joE90wAb0UrCGZ0FNKjwE5vCc6xGCg+vRRuXtkN
lcXX4Y72K5hFcwUGzqAT6zH842//L2SBldoG7PVjheO5UG5dgdoyeTXKS0wo
+W4TOAUTgLPmrOgG/8BvVr29erasmGrm4Ck1y8LmwDl4RkoXcAo+AmPlQLCW
tgdzibS8C/gT2oO57n1Q21nqOwXusUSwVo8Ce0EToWY1iV9SDdWsbc7ZdDGN
wJrzDLixzcFMfxmCh+OgzDwD5bcqy2/PWvwno4tzF2+GwPvpFBStnws3UkZC
Uc4HUFHsVtyukmruV/XtGXl1TMqT3ypbUngOQt9vBX/+B1AY0xWMmPbgn98J
OL/OTBkB1tEMKFw+FAI574F1YBlcn9kcrGX9wZ8yGIrmtAFzSlOpCVjTWgg5
74OZ8RrYK0cK+CHjNf+6T6EopiNYse2gaNUrUB6+CjWXoiujXzV0faRDhw4d
9yMev2ri8bsiHfc7dH2k6yNdH+n66FEMXR896hE5y6jumTkPw5F13G38unmp
vrP3L+qeN/jwhL77Oh5oKDOaSs6vAmd5IyG1DXD+m1cwHEKHp4GV3w+cnG5C
fn8hpwd4GZ0guCoK3LR2QmJTcPJfhODBz8HbOhrCp5ZD8GgMWCtbgZvXA5xt
r0Lo/AqouOnAnWlytcwyf97CTLrUfwK8S1ugqrIcmD9zn5s3ToK1Mgq40ri5
pDkY0Y3AXNwOrPw3IPRVFpSbP4K6qkCt88SKLbj57RawCz4Bf2J3CMQ0AjP6
WbBjmwp3fB+rmIPHVRT8CxqDsfol8A7HAr8f1khoCXZSD7AWdwB34wegtqTc
+g7sfTPBTOkP7qLmUHOuf1ENyXmASjVkzW8M5rwGYMS1EjKHQfjLeCgPnIXq
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
zHp4f55539D4b5u1DfW4VHwe1qO7oNsyDzkzwhTjesB+fAeMhxYiL6wdCqeN
RWZoILKHtYLoR57joLaki/3+jszU0ai+fgOePWm4e7dBnkX8RGQ/erQi+9Gf
NrIfycjI/IEj+5HsR7IfyX7014nsR79XGjedu43S+PbGt4gVbo23Jm5/8C2N
t+m9Ne/HN9438e6Le3VqXlEjZpWLVXNizV7jLXs/b+O98jyjOjFbXNFMfO39
/1Z7blH/83DPRGvxGHU9hWcLje+996Cot3j9jvJsoVHvaNxHGj+y0S0/7ue/
9ueerd1vf8R6kPvtiYyMjMxDjPdv0Yrcb6CbMRile6fh0ufHUfnpITi3xqFi
yzhcfW8fLp1cg5LtSbCNa6VYFKQ4sgi3nMWovVmGB68TrlPVXr+MiovvwfXe
EVz+9jUYZw+Be9dUVH3zJq6bC3D7WiXu+7pUnmuqqu5UmHDl/NsoObUNlW9s
gm1yJ9hjnoIj0UehznDwNKa0TgoxIfzf9CP+p1/h2BawpPeHeXksrGvGQT9l
AAqSukMf3wnF4b7Qx3VAUXBzVL1zGGL/G2prUVtXB/PuFTAuiYRlSQgMm9Kh
mT0K+sVjoEntg6LJQ2FfNR7u1/dBP2skdAtCYZg3BtqwNiga2wq6pF6wzhmF
otBWKI6irLUzxrSHLrEr9NMGwjB9MNwLQuFcPBZZsQEoz/0CnmOu/je97lIJ
LKsmwLBoOIriA6GN8MOv1Y8EMeM6N7wTskP8URzXAxdGt4ZuZbxi/VRot89D
5cfHcS3/O9TdvISmrGBX/3jQcLkwD87P3oLtjRdxdnQH5KYFwbJ/BSq+fhe1
t66j5uZNeLaujNm423jVaN3Na6g2aGB+di0KZ4QjN7o3skb5IH/CQOQNaYn8
IB/kDlfccyiCfXG+9z9wcV4qxN8TPOdj8kyjUWQ/+r0i+9H99srzjLIfyX4k
IyPzB4jsR7IfyX704J8R2Y/+fJH9SObXjZjg/XvvhYyMjIzML433X3Vu6y/A
kdYJlgltYUjyh21qZ5QdnAb7ijA4p3RF2ZmdcJ/Zi6oPD+HS5y/jVrkVTZkp
U3f9Em47tai6+BY0M/rCmNYR1vWxqDq9Hc4NCdAn+6PsmQw4dkyBZUZflB5a
gMsfH8cdWwHu3uW08J6VeI33p/6uquYWrhadQ8mx1bCtCIE5qT2s41rCNqEN
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
spt3FfrrOj5gX/mC4MSY/sDUf/FHL4XEH+WsxB/lrHJLP3OLxB+JRKIclvgj
8Ufij0QZlvijl0+cl8dKWdeK5I2irJa+xriek5Qyt5VEJdZsaVXLaheJco00
f5R0/SK49GEpcLFrALjUrbiiWBZxuatBwvv+IKaFL4hvaQWt/EDse+7gxqEd
wDQUOoVJvUFsfRcQ1zrAoKUviG/hb9C6GDhd3xVcmzse8FPJSYnA5LBG9QJR
9QuB+NYBgCdsx7XyBzwngZhqbukHYlv4gDPNvMDZlj4goYU/ONvKIKGVH4hq
7AHundh774/TFbi779ZFEN2pAjjbwhcktAoApvrVeE09ae0P7p05AVhBsiJu
YGcQ854bONM6AJyq7wXoko6/AJyo6wtOVXAAZ0Z/DUwRgDkSf5T7Jf7o5ZP4
I9HLIfFHIpHomSX+SPyR+CNRhiX+KKfEfO+mEq/cU7qhxCuM6u9K+mcZeb6O
UYpXYskFSqeVLO1TSn//EncWWXpX1xklzvs5JV7fpcTM0/p2denvPlD6Rcm8
pKXeWvN6p9IjJUutW1/br0r7lFI1WT/29Ms8a53W12B9zem3wghwJfPKNSV+
S/DKVSV9DVP6PO5R4rwkKC1W0u8O66NnPjq9La5V3mu8EqfEVX1FyfxTzxol
kUiUPUpNSUlNu09vHt4PfnmnMNhbyxPsqemRpfxS0xNsfdsdrK3gBtZXKGRQ
MV0quYO1xe3Ama2rgT6iA8N6g8jAfGBD5SLA9CnWXKEw2FjJYHlpB3Bx70/A
FI2kFHD/1mWwpl4gWFvOBayvXBisq+gK1v4Nbn+wTrGeqBY3VikCVgbkB9Eh
wwHbSnnyxECdKbGxV1uwonh+sKmKJ9iIThpdNWrYULEwWG8Ex21DlSLg7plo
wHqSUw1+7t4crC1pCzZUcgdLSzqBeYGOBsWccpz5JVzBvCJvgvXd2gLT+Rip
6lwKUS6X+KOckvij9GvW3xV/pF+xvk7ra7C+5vRbEX9kKUoikSh7JP5I/JH4
I1HGJf4oO6VnTReVNirxykylTUq8skRJ90d0HHqdrIF5I7P9U0p6GX1XUvr7
7vQemrelv7tZaasSW6R/4UqIVNI/+0TJ2kiliX04q8S29J6cUIpWsqYt/To9
11ol85HqsrSny/xTJ5WYb+v9tFTD88XEUuuUue+wJEs5vKVe6TXrZXTXwBUY
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
ln3YBUwq5gemVywJvrXJA4a72IKBBV4BofUbAsZNlNsl/kgkyk6JP3oRJPEU
iV4+iT8SfyT+SJRZEn+UU9Kjxyv863s+65P522NNlv4anU/e5N/48wQAPnWU
J0Vbk41bejf9vJ1/287nh/L5p/q71tepX9HHZX0NeklLr60pqZdhPDlH5j2x
1HPzWHFG9Cexpj9qPkv0pJL5u+bi+klU4hWuH/1scD75NP3e8pm8vM6nBnMV
8Vm6mTsLegT0Z6fq5XndvAZL9fDJrZbiZk2f0x+dpevmPeH9yHmxFAFrahOJ
RM8sbX/dr+fOgJjxA8DGum+ByOKuYFmgC9jRqg448N0nYGkpN7A80BFk8v46
L3sQ4l4ALKgUCHb16wXCC+cDM7wLggjjcbEFZ/g4gam2/wf2jx0B9GFd2LAc
TMn3P2Bz1zZg04cdwPoP24O4edPBwaDRILy4B5juaQdCC+UHS1rUBju//xSE
BbiByMb1wKxAD7C8XTOQ8uQxSH2SaJCaYkCzlHQPsA/ntm0BQS5vgmneBQGd
EU9meFaXZPJHLq+DFY2rAd3b8myNOSU9QFgRG5A9/ohnLwx1zg9+9HAG+yeM
BLvGjQah1aqBqSUCwHAPRzDQ6U3Ac78HvPlPsLBtO5CiDKd8t+d2iT/KKYk/
Ykn9ivgj8Ufij0Qi0XNK/JH4I/FHokyS+KPslH6/XFbaqsQry5W2KPHKaqU7
SpbqZHme/8ynXh5Syrr+U4uVdittVlqjlBXtZqeYzWYkhnpmvlMp/bO7dTHD
5xng1tS/Q4mzTy82QYlem+eH88mzlmqjn1qmxCtch78qPevY05c+9qtKY5T0
Ea1QojtLv7aDSnzNXwP2KllqMSvEUfBXAl6h06SvzLp2RSKRuVKTk1PTfhe6
sH4l2NSsBois5AvW1ygJtjeoANbVM9jaoi5YGeAAMu6MzP1RWFEHMM0xL9jV
9xOw8P1GYKpzXsB9d3QWfL4q/dGeUYOBPq4LW9eAYKfXwPQAV7C6cXWDtg1B
RHF3sH/MEHBo/HAwxTEvmB3oDpZUKQWW16pqUK0cmFXOB0zzsgch3g7gxJxZ
gG0lJj4GySTF4O6dKyCiSkkQ5Po64BkRz7qn7m/8kXNesLxFbZD09OkfZ2H/
euUiiAgoBKZ72IIs90fOqNZmqJMtGFggLxjj4wlWfNgN/DR8KAiv3wCMKewG
+jvmB4OdCxg45gPjPZ3B7Ho1QdLDh0lpv3vTs2fL8hdlssQfZafEH734En8k
/sh6iT8SiV4ciT8SfyT+SJRZEn+UndKzNe5i4nNCuf8qSOm40i0lZrbcPbVN
iXljghLroSth+fFKzO1Z/3ol+qbDSvRcR5VYw34l1r9B6ZTSKiX2Rx8F53qT
Eq8wv2WOzbya9exRYpbO8mxdzx5ZhteZG99Qokeg82L2+7MSS7IV5vbs+Tql
X5QYAdbGnVrcY0Y3wZiwXebYkUqPlG4qsQ/sJz/F+vUMnK6HtS1RYqz0WWYM
9V1kjNUJpbVKHBff5YzToXCkMUr6+tHdBN0xo8FRhymxDKN3TYnrgauFrdBD
8Ump+5RilX5Q4qc4XrZCF8DeMmJcCVy9epQ4C1x1HAs9vh4ZvjtJiddZZrgS
e8VZYOvsOffRMc5DlU4rbVfijDNu+j3CaPM62+V1jpr1M1Zc+ayHq45946fY
B8aEEY5QmqdEr3RWifWzn1wDbIu7UumaGUO9n7IfQyTKiHR/dHTEILCmVjmw
qU4ZsLtbY7CvXzewsnQRsL9dE7A6wNGghCswnc8Q4Gig/E5kSTfwnPvrvAsC
PsV1S9d2YG7tyiCkiA0I87Y3UH4h1McRBNn/C2wf8A3Qx3Vh10YQ4pwXhPk4
gRVt64Ftn7YDIX7OYFHbemDbsG/Aisa1wJzSvmCCqw1Y3vhdsPWzjiCoiC2g
P5rmnh9M9S8MEo7sAyqbT01MfAT4jbS0d3cwtsA/QZiPAzB5Ou+CIIx42v1B
qKctoAOyxh+taFkbJD1NTUo71eDm+bNguq+LQbb4o6GO+cFoDzcQXLEUGO/j
BRZ36AjW9ukNNg3+Dnxv+yb4zjEfGFDwdTAp0AOM83YBP/oVAU/u3AJpi1L8
UW6V+KPslPgj8Ufij9hz8Ufij0SizJX4I/FH4o9EmSXxR9kpPf/R81JmtvRK
3GHFSDJHZVbG3JVXliox16IToVNYpMQ8f44SfRBnipFnlst8np8KVaKLof9i
rsg51XdeUewhc0LmjdxrxwycuR/7zIx3vhJzXe4+4q5CZq28wnc5Ln4qWImv
6S/Yf/osforZLHvIaDDf5n4z9oRZbpQSS9L1TFZiSWbXLElfRu/DTJgOiJ9i
fNhb5rd0rwuU6K0YJfaZubH57DOX5ikQjA/ngpFkzsy5XqiUaibWQ7fCtcE1
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
iV5MiT8SfyT+SJS5En+U22WeH6afxWV16y+CMqs/L864rMnJ0y+ZFa2/mDVn
/x1hTc3/4X9/C94qd8k88i/aWMz79uLs4xVlRLo/uv7LTrDmLW+wr3d3sLlx
dbC9fUNwclEIOLXA4MTYYWB/v15ge6emYEvNUmBj1QCwOtAFrAl0BquLuYBI
WCFQ3AWsLukGIovjn87LPPOBxZ4FwPb6b4OT04PAw+vXwF/6qdxQajJS/T/c
UIoFtE8pElOSQfKjB2DPxElgRpW3wMGpY8DW/r3BZIe8YKqXPQh2LwCmFHwN
zK1YHOzo2gbMrl4ezHnbYM+AXiCycXWw45vPge7OLu8/BDZ1aw/Wt20MIkr7
gx2DeoFp7gVBUFEXsLh8AJhdzB1MdnoDTLB/BYT5O4JVHVuBHSP6gfHuBUH0
6mUgLSZ6NKyYa965FvatxW3dDLb9OAJsGtgPfPqPf4BBNq+AUYXtwUhXWwM3
GzDawwGMKmwwvWk9sPmLz8Cab3uDpR93AqPLlgAren8Mtg7/Dixu0RBM9CkC
xvgaTPBRlCgB1vYfCPTePsNSFr0wEn+U2yX+yFzij7Kn9RezZvFHOSXxR6Kc
kvgj8UeU+CNRZkn8kSg7lZqucrp36Skr8u3nq+HFj5VIJBJlp/SdV5eWzgFr
fOzAhioBBqWLgJ8/7gBuHN0PYpfMA6fCJ4P1jd8Bx/p1Afu6NQHLvOzAqhKu
gDvrVhZ3AWtKFgJ8SuyqIvnAcl8nsLlzCxCzcSV48uQR0PvGTP4v5wxYawX+
OkbNA54/sB8sbFwTHJoRBE7OmApCPQuCaY6vgVAfF7D2sy5gXbd2YEnNKmBx
szrg2OzJYFGremBFO4OruzeAlKQngK3cjDoJQgMKg42tG4K5VcqC8NJ+YH75
ABBS2A6EeTqCOSW9QWT7BmBZvYpgUYUAsKxRHXB81kzw07gfwKPER8AUk7/f
VGhlUIzda6YIm21kuxZ/BqweNRKMCvQC39m8Doa7O4OxxX3AxFIBgB5nuLcr
mFa+OBjmVABMKhkA5rVpBI7OmALmtmgCZr5dBYRXLg8GudqBKcV8wPDCTiCk
9rvgSXIKeL5hiV4EiT8SZafEH1mqM6s/JRKJRC+rxB+JPxJ/JMpciT/KKVna
3WGe/TLOKWbiu4w8nz7J63yiJc8N1svrLVraZ5J+SV18+iefKss+8Jmt5rWZ
j8vca5iXND+7wLyH5jUwVnzSa/o9SX90rIfjuqekv6t/lqd8s4z5GM37n767
Sb+kfoX3nf5cVPaEz9g1XzmW4q/30DyePH2dzxo2L2/NWrI0Oj7rlk9WNX/X
0qj1cVlqi33Wv2f4xFg+9dV8FaW/QtIvyafE8qm4luaU4rxw1ClmYhme1XBW
Kf3Ypr+K0i9vPi5L0TaPifnsm0eez/blSPXVaP3KMe+VNb1Nf1VQjC1fc1Xz
6cN8anD6c20pepbWrSg7pfuj6LkRYF0VX4O3S4DdHZqBmAXBIH5BGDg6egj4
6dP2YHP98gYNK4AN75YEK30dQWTJQgo3sNK3IFhWKC9YXdoDHOr7EbixdxfQ
k3tm6SlJyeAv+X8mKSklJck41+UJ2NG/D1hcqxJY3a4R2PV5Z7C6TX1weOpw
cGb9ErCwbnWwsWsrsLp5TbC+Rzuw+bNOYHoFf3B8xhTwNDnRQOni4f1gjMsb
INy/ENjWsTmICHQH00t5gnAfZxDq4wpmFfMEK9o3Aus6NAdb+vUFR8KmgYvb
NoCHd64B1s+DGdKmMHOiRBdpvvvu3s0b4OCCeWBy7RpgUIH/A0PeMBhk/waY
4OMGxno6gvCKpcHWQd+C7QO/AVMrlAXfvJ4HjPYpAiaXCgCLWjYEIz1cwChP
ZzCmtD948NuvIK1bckpD7pP4o5zSs2aDlnIq8Uf6dfFH4o/EH6Vf3nxclqJt
HhPz2TePvPgjUfZL/JH4I1M14o9EmSTxR9kp/X/za0q7lXiF/1Pz7Ghe2a50
U8lSnXRDzEP4xFVeYbacdf1frcQnvfKkaz7JNP0a9PwkK8RR71Iyfzf9rFJ/
l+Nar8SRci7MP8Wzyp/v+a03lH5VSr+kXudhJfZqlRIzf3oNnppuTevWKEpJ
j+fz5YHmMWEWzQjzCjNqriVe4XpersQrR5TS9yOMD0vSKTNK5j4344pWov/i
FT7jeJ6SPq5lSvzOtFQbvxt54n3m9jN7tF/ppBLjoH+bPevK0cvzf5ZbSozh
TCX9Vxp+f1qqjf9P6WtphRLv3+cdseiFEZaKWi7g7I5NYOs7JcGuDo1AXNAo
ED0/Avz01ScG3VqDBf7OYKVHfrAq0NGgvBeIDHQDy7xswZIi+cDmGmVA9PhR
4MH5s0BvPDE50SDpCcgKT2Q+Ur68enAX2PN1T3Bk8Ldgc7+eYMPHncEvw/qD
FV3agXnVy4Pw0t4gLLAQmFXCG4SWKgrmVS0BtvT5BKSo4xJY/+XDe8Akd1sQ
5PImWFA+EES2rgdmVAoAq9rWBcvqVgaLK5UEGzu3BBveN9jUvjmIbPEeiNsY
CVISH4PUlCSDNNuQRaEy/XbB3XdaKykP7oOYyKVgYatmYIiDDRhTxBEMtMsL
5rxXG2wdNhDEbloJ5rVpDoY72IKp77wFFnVuCcYGeIKQquXAxDJ+YKi3K7h2
5jTQe5I1oxRllcQfZafEH4k/0iX+SPyRLvFHusQfiZ5B4o/EH5lJ/JEoIxJ/
lJ3S75FzSvQyjOREJT5v9L7SSiWWZ9bH3InR5nVm8rwyTYm5OjPDfUrMJ7nj
brNSghJroGdhuyxP78a29B0yFPcUrVMyH+NFJWanzFi4QjjeMUp0UsxtmFNx
5fAK62d/Tigx86cLYJ26p2BtLM9WHmhieX6W5bknjdeZ3+r956foPvTr85XY
7hFNNzQxbpxlxp/R0CPPK/RxwUqcQX7qjBJL6rva9JEy29ezR9ZGr828lO8y
thwp9z7pa4+v2U/2X19pPystVuK4+C7XKnuyRYkt6jWzBq5trmS+y2hzrpmp
MjL6KJi18soSJZbkiJYqcR+apfVMh8VcmjWsUaI/opc5rsS1zfjwCmvgePU4
cM38oqR7Yeb/+u5W+iC2yzL8xqO/ZvTYFudL91Z8zbXHKHENcG3wLmbM9d8Z
zHepMT68d/RVxzKsh9f1mWV8dL/A+WJtXD8cKeeU88u7gOXpdlmScdPbZXzi
lPjdot99vMfZK94F+rgilbhWOa5xSnyXseXa072SftczYnuV6OCmKHHUXMN8
l6uCrzkKRoB78Ng6x84WGU+W5DfYU1G2Sz+74Oy8GeCnri3AwU/bg1Pjvwc/
fd4NHB0xGERNGw92D/gSRE2eCH7p+xFY6mEDFnvZgvWt6oKYlQvA/d9uA/MW
09rN7r/C18cbtW4l2D34W7B90FcG3/UGW7q3B0HuNmCi65tgelFHMKe8H4go
6QkWlvAGi6qWBNu/7An0Vm6ePAxC/AuB8AA3sLlPd3Dr5EFwbvMqcHDsYLCl
ZycQ2aQW2NXzA7ChbUMws4QXWFS9Erh3+RxgzQxctkZM80rm78YdOQRWfdcX
DHJxAWP8fcDq91uBrYO/AvO6fQDGlC4NlndqBxY0bwBGFXICE0v5gUU9OoKp
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
q2R2Krgo90r8kUiU1Xq5HcTLPTpziT8SiV58iT8Sf5SdEn/08kn8Ue5VxvPS
jOzw0a9Y/7fMz9fDjJfJurayf7yi3CiZWZEoy6X2zqX97bwiNe1U5v+Sm8+0
k1DFIDEJrP6gLVjwdlmw/L1aYG2z+iB28VwQFTIRTLZ/Fazv1Abold08vA9M
LVwA0BOFetqBEA9bwHO/Q7wdwRT718DpuWHA1BF1AsbT/6LQ/7tyy/NwRZYk
/ij3SvxR5rYo/kiUdZKZFYmyXOKPxB+9MBJ/lNsl/ihnxRimWpBekh4kfUfD
6+Z/D6hfz1w3kf7fHlpThjIfnaXPWjOK7IyDef16zXzNv8pPv930r6c/ImvW
jKWazctY06J+kjafuWmpP9bXZqkP+vWsmzuRSCR6OaRn5lcP7wazS/mAPd9+
CmZVLAU29/kUrOzaFswu4Q42dH8fmHyl0o0j+8BEt/wg2NsBhPk4gYjAwmB+
BX8QEeAKNnRuA1KTH4O07/n/Xmckejkk/ihnJf6IEn+U/vX0R2TNmrFUs/gj
kUgkepkk/kgkyrjEH2W/9OyOpwTfVHrWevipjOSKfLqr/sRG84w0UumOEq/E
Ky1VWqfEZ2XyW5FPwNRzZkvSW9mndFXpWUfBvulP6nxW8Zxk8ydUnlY6q8Qr
HOl1JV7ZpWTpr/WvKG1VstS6HoctSueUnm8sWSfzlcaVwLueV6zxwpZqE4lE
IlFmSX9i7M7hQ8GcqmXBrHK+YFGzWmB65RJgVrFC4NDwfuDp02SFoV9PHgEL
yxQFC8p6gYVvFQXzSnqAxaW9Qah7fnB5/8+An0pWhxTk3LhFosyR+KPsl/gj
vS2+Fn/E1+KPRCKRSJRxiT8SiTIi8Uc5JeaHN5SYVTKGzMmZebIkI3xIidFj
Jj9NKVqJTueU0kkl1s85Yiu8zoyd765SogNiK3p+y5rHKV1W4vU1SvoVeiVm
9ayNbuW80mGlB0rWxIF+J1YTS3I31xGlM0r3lSKU9ivxuZmM4XElPQ50lIzD
RSV9RMuUWCevcz0zqr8rDVHifrkEJd378BmgMUq8wt7SVR1T4tNF+a4ebc4L
o82e8zrLM7asgWPku4wbx6vHijWzPK/rO9P4+oIS/azuDS3Fn2LcONL1SowD
32WcuZIZN46Lo2A09P4z2rzOkvqaZ81cRayZzwtmz//DDSYSiUT/xdLP1v79
+nUQUaMSCC/jDQ5MHAxWdWkOZpcvCg6P+B78ZX/d0f0gpIgdiPAqCEI97EBE
UScwxfYVsLF3d2BqUe3rSzsRQyTK3RJ/lFMSf2QpDuKPxB+JPxKJRKKMSPyR
SJQRiT/KTul7ipgN7lBidjpZiW5ithL3cdFxMKunZ4lTClZiDsmslXk183w6
LPqIUCU6rLlK9C9hSnQWnEf2jVkr+8a2opT47mIl9pl5+2olZq38FFtn/sws
Xc9+dV/ADJ/7ytgu48CceZ4SfY1eG6PBtTRViZm8Hge6P5Zk3xgxxoE1Mw7h
SruV6IPYN17hWLgDkE6KY6HrYea/XUlvl2U2KHEG6UQWKuk+hffRNiVGmzPC
PnAl8F3eX4wDd0VOUtJjxfXAePI6PQUdNNulV2Uk9yqtVeL1KUpch7OUOEaW
51j4LiPP3YnsLZ1jkBLjTBf/s9JGpV+UWOciJY6XbXFcHCNj9f/bu/M4Ser6
/uM8kvw0UTSCCMgh53Io4IESjYhGjcaDeEQJajxQiGI0MRExRqMiRkVBAiqX
3AgCCkgE8VauZa/Z+z7Yg72XPdjd2WNmZ/x9+vtq9LsputMz213dM/N6Pt5/
zKO6urqqunrm+979Tg3zGzmTvJtcgVw5xU+WJAnxEybCvRLu+/K5kWuPOjBy
y9++upKTjo9857C9Ineddmqk+PdhLzloj8h3j9g7cuWR+0auOHSvyCXPHxV5
dMmiyON3Vvf7sIYP+1GZ7EdswX5kP7IfSVKr2Y+kwbEflSnvBYyWGdUz6mM0
y6OMJJnp9P2E9XmUmUv5Es4qo9abEhrB/UneTRh5MseJuysU95MRPq2HRpB3
KEbF7OEvErrS1AydghFv8f7P+Xlg9M4RMU9sfMKjdBA6yx1JfjcA2lC+hCPl
PHDeGF0zJs/nZXEeaA20g+J5YDscKcdFP2UJ7xez6S5POAoaRN4Q823enuRn
gH27IeFYOKvMJ/xRwprsLY/SVthDHuW8sQ+0CVpS8bjooRwRx0K/Y59phazJ
7EFmuHH+8yuZo8t/JtKJ8iuZ4+Vr3gvecV4xvxMF1ypnmKuO5TRTej1H94Mk
70f5+fRntCSh+v0wpad7c+Tud74pcu0R+0auOGr/yHn7/Fnk7tNOieTP5e/D
XnrwnpEroxwdsfdVR+8XueRZT4qMv/SCSPVVendE2nF8UqvYj8pkP7If2Y/s
R5JUDvuRNDj2ozLlozi6CbOMGPHShjif+agYzJqjE3FPaXoHY1e2xrvA7CO2
TMfhOyRjUZ7L3RWY9cT2WYet8ercbZv3lDFqsZflGC3n9z1gf+hTjO2L54Hx
OWsyZmZWIesXzwPnijVpB+wzzYjjZZYXo2jOKg2I2XQcO/MAeS2+Zvv5fcI5
aub7sZxWclHCEvaf5bwjvDrXed5Q6CM0vvz8sJ+sz3by+x7Qnlif94v2wftC
M+W9Y65afv8HGkfea5hBxxJekWNn/iTNiOW0M/aEWX95D2U/2X7xGliXybsn
rY3rkOuZ5XkTZEZofpZYk2flW36iT5gk6X/r39EX4etZN18dueRZfxa5+nkH
Ri589lMj93zo7yP5sx7vR3tEmFl32XOeEbnlNS+JbN+8NlL9W7RUMGkYsR+V
yX5UPA/2I/uR/UiSWsd+JA2U/ah8+cizOL+LOU7MlWL8z+/mM/JnbE8b4jfr
WZOxJeNn7rbNOJkRKVtmfUbdzDTjN/rz0Savkt/tmdE+f8eW7ed3CKfpcES8
1sqEo2P8zLOYVZXPB+P6yc9DPt+P1pP3MroG6zNTiy2znJldnAdel9/uZ25e
Ps+NNZnZyPlk7hZHmnc3Zpfle8WWOcMsoVnwuuwtnYu5gsy7Yz9pJfn9w9lz
jpQlnAfaH8+6NuFrrhPONveaYE1mo7EnvC4tkpaR3y2czynHy3ng3h3cAYNn
8b7wLtOm2Wf2hCUcVz5fkbaYX8nFWaPM22T7+R5y1fGO0MXyDs61x7vAPE96
KOeEd43zwJWcz07ctU+qJA0f1ftv7+iJ3HbKyZErDtwzcukBu0fu+dCpkXx9
7s9AP7rqyGdHLt5v98iCn94eqW5zx47+J/rb6NJQZz8qn/2ILduP7Ef2I0kq
h/1Iapz9qHw0C+6KnH/No4wzGaWznEaTz5vinDOTjS3wNePDvkw+W4yt5eN/
npXf2TufBZc3oJ5M8fffi0fBeJsWwxYYOTN7inXyLbOFfG8Z33KN8TU9gvFw
fkSM0tkafYerMT8P+Wg5P8P5eSj+Bdt8f/K96s/kx8t2eBZ7zruWzznM1Trb
HBf3eeC5+V/j5WvaKC2G4833mXOS38Egx/o8t3i95UeanzfuvM3nN9/z4ruZ
vzv5ec63D97TvI/nn4t8zeUZzi1XO6/I1+xtfjYkSajOhUuWdI2LfPvw/SOX
7veUyBP1o8r8ussO26uSfZ8SueuDp0T6f7ejkjRnz78Gq+HKflQ++xHr2I/s
R/YjSSqH/UhqnP1oaCmOGzv/VRhLM+usWdsv5zw0YqB70sj63H09v2tEjnlr
3Fe8kS13zrmqb6jvvyR1vr4dO/oenxH3q8+dHbngKbtFfvqP74nka1bvz3DQ
HpHvHnlgZNXMcRH+hGzej/7wN2Wl4cJ+NLTYj5q1hWaxHzXLUN9/Sep89iOp
EfajzleczZUvr79OI1tu5r7uvOX6+9yKbbbrPNTft8HtT1Fxbwf3uru+V40/
q1nbbOQ8FL+WJOX6+/si1JqNa1ZEvj1qn8g9H3hHJF9z7ZQJkYv3+NPI/V/5
bKS6he29kXbsu1Qe+1Hnqz8Grr9OI1tu5r7uvOX6+9yKbbbrPNTft8HtT1Fx
bwf3uru+V40/q1nbbOQ8FL+WJOXsR1Ij7Ecqh6NWSZI6QX5f7rEXnhv50d+9
LpKvs3LMfZEbXnxcZOua5ZH+Hb0pf/hrs9JwZT9SOexHkiR1AvuRVJ/9SJIk
aQTp7/99tq5bERn9ta9GGNexypLf3huZdv31EZb09WyP/M7bMWgEsB9JkiSN
IPYjqS77kSRJ0ki2Zf3mSN6Ptm7sjuzY3hv5XeWWDs6p0whiP5IkSRrJ7EdS
zn4kSZI0Mnn3JKnIfiRJkjQy2Y+kIvuRJEnSiMbtGnZa4n0YNHLZjyRJkkY0
+5GUsR9JkiRJEuxHkiRJkgT7kSRJkiTBfiRJkiRJsB9JkiRJEuxHkiRJkgT7
kSRJkiTBfiRJkiRJsB9JkiRJEuxHkiRJkgT7kSRJkiTBfiRJkiRJsB9JkiRJ
EuxHkiRJkgT7kSRJkiTBfiRJkiRJsB9JkiRJEuxHkiRJkgT7kSRJkiTBfiRJ
kiRJsB9JkiRJEuxHkiRJkgT7kSRJkiTBfiRJkiRJsB9JkiRJEuxHkiRJkgT7
kSRJkiTBfiRJkiRJsB9JkiRJEuxHkiRJkgT7kSRJkiTBfiRJkiRJsB9pcPoz
tR4d6LMGuv1GtiMVNX7l9Bc0vs2BXp8DvdoH9xkc3D4UXzFf08+jJGk4sR9p
cAY3Nmt8HNXI9h2PaXAav3JqNYJGtjnQ63OgV/vgPoOD24fiK+Zr+nmUJA0n
9iPtusb7Tnv3QSrfrlyZA+0+ze1KkiSNTPYj7Tr7kVSL/UiSpKHFfqSB6kke
TXjfa61THJWtTlYmLOlNWD9fk+tkY5IvZ5ssZ2v5c7clXJm19qovYcn2JJ8d
xDrs1WDPkNqj+N4Vl/Du59cn38Hya5Xrh2tpU7IqWZPk1w94LtdS8VXyddhm
cc+L6+fyV8+Xb074pOR7xfEuTorL81fhSNlz1szPFY+yPmeJTxyfPvZqa7Is
mZ00/n5JktSZ7EcaKPuROpP9iOX2I0mSdoX9SI3IR1l3Jhcm1yQ/SBgBMr76
92RiwrMeTL6TfCuZloxL7kl4lSuSyzKMytgO18+XkmuTCxI61x3JjIT183Hv
OcmvEpb8NPnvhCW/Tn6TFI9dnSZ/d+5KuNJY8sskf8d5f7+QsOTqZGbCktuS
XyRcXdcltyTdSX5dsU2uSZbQXD6b0CNoGVcmPDffc/aZvcq3/KOEzwufnYcT
9vYbyaUJ+0CHOj/hc8T+02j4XHB0bJ/t3J7wPfwzCa2HPeeoWZPXYj/57I9P
+NzxPYFzXnx3JEkaKuxHaoT9qOWnWINiP7IfSZLUXPYjNSIf53w/ofvw7jNO
Y1w3PWFURm/iWRcn+diJ64cljO7GJoxXWWd7hiXzk3ydnyWMjeluk5J8/xcm
9KDrE5bzuh9OmCP0QEJvKh67Ok3+7jDO/3lCH/mfhCWs872EBsH4n26SX6v0
kVnJ5UnxdfOOc1PyzWRJwqt/KqFbsYQt9xfQQfjUsAW+T56X5K/LfL+vJfk8
VWbu0b9+m7Ccf3n4YTIn4Qzw6NSET/T65OMJn6YNSX4G6E0XJcVzcn9ya1J8
dyRJGirsR2qE/ahVZ1a7xn7EcvuRJEnNYj9SI/JxDmMtRpjMqGEEyKPMeRuT
fDvJf8Od8R7PZTzGNcMMKGYTMWZjnl5xfMXokblMP0loZ/w2Ovs2Ocmfy+iX
12KOEGM/RpI8i1Eus6qcIzRUFOfXfTFhzP+5hKuR641ZZ/Ri+hTz5WgBzF67
IWE5882Y20bPyue/8d3sqiTfJt8VaeLsCVcaS/J7IKxIvpswq/PHST5vrS9D
J+KTxRby+y3QXJhlx3JaP72JGa10Mb57s4RPB2vyKeAM0HdYwlGvS3iV/F8t
OAo+3Xze87MkSdLQYj9SI+xHZZ1pDYz9yH4kSVJz2Y/UiHwUyvyZ/N4LjB5Z
QvdhTMj9EBjp5Vtj3MWIlPlsjAxpJcyJqvXq9CA6Ea/I2IxHmTu0IMm3wMiN
R+lWzOVjTMt22M9PJ4yoi6+uTpO/O/Rrujajd64l3k3uBPLlhPE/s9R4Li3g
koR+TYPmDiG1Xp3XYjt0H65/7n7PHQzYDq/L1vL7z/M9M98r2gfXZPHVudPC
V5PifezpTfn9SSYk7BtzU+liPMqR8u8DfI745PKvGZ9PbkxYn2Nhrmze8uiV
/MtG8X2RJGlosR+pEfajZp9RNYf9KH/UfiRJ0q6zH6kRxfsz0G747W++Zix6
c8KajJeYz8bYlXsLM+K6O7kv4b4KjP0YKzJXipl7jL7Y5ryk+FvzzOdhdh9z
qGhbzFZiBhRr0rDYAo9y3fLoJ5L8jtCO9DpZcRYlnZclXEXMi2OO2SMJjzLO
p03Tnk5PmJnGLDU6ArMu2U4+f4w7KixP2CbXFfuQNxE+HczWy/ece4Ywa5Tl
fF7oR9yHhM8Un7spCXvC/nMNM9eUu3B/JWEJnyaaEcdFm+NZ/DsDd6LgzPDq
7AlnjC7GEubX0QHzeX3sFUed33eide+7JEmtYz9SI+xHrT7DGhz7kf1IkqTm
sh+pEfloh7/WOj7Db7Izp4gRFOszgqKPPJZwL+WHErbGb80zn4cl+Z0TmCmU
j4G53riK8t9b51HmCDHWZd/YAq+S35OZESm/7c6jbIE94ViKx65OU7wyuQJZ
wvcl3lPG/7z7PCtfn/l4+cxM5o9xv3pmY3JdcY9rtrAoyRsBrYrGxNXIcrbG
+myfPWFJca/Yc5bwqeHV87sicHeF/PszyzlS2kre3cDVzr8AzE1YzqeY9Xld
Pmt5d+MoWJJ/7ngW/3ZRfF8kSRpa7EdqhP2onPOsgbIf2Y8kSWou+5E6h2Mq
qRG1PikDXd7Io5IkjTT2I3UOx2lSI+xHkiS1jv1IA5XPUsvnBeWK6xefVXy0
1vZr7UMj+5bvYa29Kr66I8ahqP67Wf8aYEnxeiteS8Ut1NpmrUcb30JxH2rt
W61PUK3t13+01p40vs+SJA1d9iMNVD6+sh+pc9R/NxsZ1duPGvksNLLPkiQN
XfYjSZIkSYL9SJIkSZJgP5IkSZIk2I8kSZIkCfYjSZIkSYL9SJIkSZJgP2qb
vr5If9+OyO/6+40ZTH6XwrW0Y0ek3Zd1QdrP6r61/XSZoZ+driVJklrAftQ2
9iOz67EfmREW+5EkqdXsR23gT3ZJ2nV+L5UktYD9qA38mS5Ju87vpZKkFrAf
lSr7ad49e3pk/ic/Eplxyt9U8o7XGTOIzP7gOyNr7rw1Ur3S0oy7Nl/n2Wyo
5VdcHJn2lldFprz2JcYMIlP/5mWRhz/7iUjP6pWRna43SZKaxH5UKvuRaUHs
R2YkxH4kSSqH/agc/ZVbMVTHq90zp0W6XnxYZMzBT4+MO3LvSo54ljEDy5GV
jB21V+ShA58SWX75RZHiVdeuq33+WWdGxo7aM7Lw85+MLPvW140ZUJamLDn/
S5FJJx0XmfLq4yO969dGdrqBgyRJu8x+VA77kWlJ7EdmBMR+JEkqk/2oHNX7
eCcLzv5ohGY08YRRkQkvPNiYQafr+EMj44/ZPzLxZUdFetauiTx+8ZU3bsyb
0eZpkyJjD98z8tiYByLl7IOGtx3d3ZGul4yKLPvO+RGWd+j97SVJQ5D9qBz2
I9O62I80ctiPJEmtZj8q3/R3/HVk3FF7R6pD3Oc/x5hdTbqWxh29T2TTlK4I
11uZs+z6d/RG+Hr1LddHJr70qMjjj1ZGsP09PZX09hrTaNJ11bd9W4Rrad4/
fzAy54xTI/nVVc51Lkka3uxH5bMfmZbEfmSGa+xHkqQS2Y/KN/3tr4nwm/X2
I9O00I/SdbVp8oQI11vb+tHN10Um/sWRkZ3uN+7v0WtQqldXun6q/ehDp0Qe
f9R+JElqDvtR+exHpiWxH2lYsx9JksphPyqf/ci0JJ3cj/JOZD/SoORXl/1I
ktQ69qPy2Y9MS2I/0rBmP5IklcN+VD77kWlJ7Eca1uxHkqRy2I/KZz8yLYn9
SMOa/UiSVA77UfnsR6YlsR9pWLMfSZLKYT8qn/3ItCT2Iw1r9iNJUjnsR+Vr
Wz9Kr9X1wkMiE15wUCXF5W0f5A/kWJq8Tc4JWz7uwErafpgDPyf2o/JVz3B+
D/O6y5v2ujSCYXc+a7EfSZLKYT8qn/2oWcfS5G3aj3aZ/aiR5U17XfuR/UiS
1AL2o/KV2o8Y86eMPXzPSg59RmTCsQdEuiq16OBxo54ZqS7Pe1NnJu3huCP3
jow/Zv9IdfkuNZqDKknnZNwRe0Wq5+G4Aypp+yE3GPtRqfpTVB77kSSpHPaj
8tmPdv2I7EdPEPtRqexHZbMfSZLKYT8qX0n9KI3wxx97QCVH7xuZ/cF3RuZ9
7AORrhcfHhl7yJ9H5v3zaZGFXzw7Qu+ozrh70SH/K9W9zbLTozW6FS2sOKMv
P/bq7L58m4X5ftU2d9TekdmnvSPSPWt6ZMX1V0Q4n10vPqyS4v6kr9kCW67u
VWH7a27/fqR7zozI9Le+OjL+uc+OsOWd9rnusVdfKz9v9qPqSkO8HxX2/7Gx
D0Y2TemK5MvX/fzuyPrf/iJSfWoawxdT3ebvJ+PFW5Y/WmMfVt54dWTrogUR
llTPf3UL6ev+vkqGBfuRJKkc9qPy2Y/sR/ajcvanJexHbWI/kiSVw35UvrL6
USXjn7df5NG7bo8wjto0uSuy9eF5kYkvOyqy6AtnRVZcd3mk2o/SXLUxBz3t
96FJMfeMhsL+jzn46b9PdTZaoZUwf2/8c/eNVDtOem71DGTrjE0Z85zdI2MP
2yOSb42u8dD+fxph/L/qpqsjXS85vJKoPy84qLozaQvVV0zPouOw/8wkZPtd
xx8a4ehmfeDtkR1buiPT3vKqCOewum+cgfR1db5iWvL4a1W2X5zNyKPVOXut
bkn2o1Zjz1P6tnRH5p753sjMd7/595n38dMijNVXXHNpZOUNV0aavCN9OyKL
vvCpyKZJ4yPN3X5nsh9JksphPyqf/ch+ZD8qZ3+azH7UVvYjSVI57Efla3k/
esHBEZrO9JNfGWFc0XXCEZHRz35SZM4Zp0a6XjIqMvUNfxmp7tURz4pMetnR
kSXfOCfyyPnnRhZ86szIrH94S2TGO15XySlviCz8wqcii7/yuUh1Blq6y8GE
Fx4UoTUwhpn2hpdHxh6+V2TmqW+s5F1vjnCPhdkfPKWS9789svTir0Xm/dP7
I+OO3jfCWaLvMOdt+6oVkVW3XB+Z/IpjI3S6ReecHXnkm/8VmfLXJ0ToQRzj
rH/428iCT38s8vB//Etk3FH7RGiRq75/bWTbskcizEWcdvIrIzPf9abIonM+
HZn3sfdH6HELP//JyNKLz4vwWuwh/XHOGe+KLLvk/Mis9741ks9dtB+Vsz/N
RSvh6/W/+XlkymtfHMnX2dQ1NsIMt22LF1byyOIIj/asWhFZcdUlkdU/+F7k
0TtvjWxfvjSyZe7sShbMjay57abIo3f+IFLr7G2ePiXSt3VLZMfGxyKbp02O
bJo4PrL8iosi25YsihSfOxTZjyRJ5bAflc9+ZD+yH5WzP81lP2ov+5EkqRz2
o/K1vh/94c4ME084IrJ92SMRfk98+tteExnznKdGRu/9J5HVt94Q2XDvLyKj
93lShDHeoz+5o5I0N489p8WsvuX6SN+2bZHVP7gx0rPu0ciq710VGXvw0yPM
eWNu3uYZUyOLzv2PyP277xZ59K7bIut+dldkzCF/Huldvy7CDMBVN10T6du+
LfLw5/41wly18UfvE5nz4fdEdmzeFNk8fXJk5ntOjnB0LHn0x7dFetevjUx8
6VGReR99X6S/vy+yceK4yKJzPxOp3tUh3bGBLTBvioa15GtfiPT39kY2jhsd
obWtuvm6yIbR90aWX/mtyJa5syJ0PXrT1sULI0vOPzfCOHn2+98WGTdqr0hL
3nf7Uatlf+mV1jP5pOMii//rs5GeVSsj+eoLzv6nyJKvnxPp69ke4bP/yDe/
HJnzj++KTHrFMRGuloejtn/6Y5Ne+fzI4q/+Z2TSScdFVt14dYRtcjXy9dTX
/0WE+XVbFz0c4Qp8+LOfiMz96Psi/HtCf09PZAif+cR+JEkqh/2ofPYj+5H9
qJz9aTL7UVvZjyRJ5bAfla+k+zNU56RVZrhNe9OJEe423Ld9e6TaTdLdDFZc
fUlkzZ23RsYfd0BkR3d3hLsTcAeDbSuWRR468CmRR390SyU//mHk3t12iyz8
z09GuL8x2+T+4Xz92NgHIgs/f1bkgWf8UaQ6s+iOmyP0o20rl0eYk3bvH+0W
WXbZhZFNUydFuKMCezLm4KdFumfPiMw+410Rjm5H9+YIR/3gHrtFaHlLv/X1
CDPcetauiTCbLt/Ph57z1Mj8T5we6Z47K3L/U3eLLPnq5yO0ttH7/klk8l+9
MMKMprkfPy0y9c2viNDvuHf65qkTI8uv+k5k4suPjTz20P0RzvBDBzwl0vWi
QyP2oyEpn+E2dVKE2ZhdJ4yKcL3x6KIvnhVZceW3I9uWL40wz7P63CldkTmn
/32EJfM+/oHIsksvjLCE587/1zMi1Rfv7Ynw9cxTXh/h3wS2Lpwfmfr6l0by
nZ36xpdHti1dHCnu/9BiP5IklcN+VD77kf3IflTO/rSE/ahN7EeSpHLYj8pX
6t+HTf2Ie2I/tF8l/EY543nm4Sy98CuRdT+/K/LgXn8c2XD/ryu575eV3P+r
yLqf/Tgyep8nR9befUdkxXWXRR7c448jCz/7ichj4x6MFPsRM9O4H8J9T94t
svJ7V0X4zfRqP1q+LDLrfW+LPPjM3SKLv/wfEdpKfq7GPXffyJZ5syOMkeZ+
+D2R7pnTIjSphw74swiz4FbfdlNkzumnRrpnTo1wt23aFnf/Zh/Ywy3z50Q4
Y49c8OUIZ2P0vv8vMut9b430PrYhwqynNXfcEll987UR7jvBvq29584IcxHX
/PDGyPxPfiTC3RuKf53WfjTUcbcEZpYyo7J6h5MLvxLhqLlC+PcE/sbx8u9e
HGHmHn+pedWN10Sqdwi/6juRBWd9NMKr5P1oxjtfF6Efcd3OePtrI7xW76aN
kelvf21k2+KHI9UdHbLn334kSSqH/ah89iP7kf2onP0pk/2o1exHkqRy2I/K
1/J+xDg5/SVTxmDcuXryq18UmfCiQyLbli2JcCeBZRefF1n/659GRu/35Ai/
8c39gRmzMe+OeWvMzVt1y7WRB562W2TR58+KMCav9qPq/Rl2j2zqGhdZef0V
kfHHHBjhd8nX3H5zhG6yffWqyKIvnh0Ze8Reke4ZUyN0HLZDo6FfbF24IDL/
7H+KTHrFsRHuvTD7Q6dEaGe9G9ZF5v/bhyNzP/zuCHOQ8r9LW+1HaZ9pi1uX
LIyM3udPIksv/Gpk44QxEeYWTj7p+ZHeDesj9DLmyzHvjna2aeK4yMrrLo/Q
qia9/HkR7n/OfTNa0ojtR62W3Z+Bf09Y/t1vRXZs3BDpXbc2MvmVz49wpXGP
BfoRo/eZ731LhM8j11W++bkffW9kxTWXRViy/PKLIvP/5fQIS/J+NP0tr4ps
njYpQiuf9sa/jPAoM06nvunEyLZFCyLVlxmy599+JEkqh/2ofPYj+5H9qJz9
aTL7UVvZjyRJ5bAfla+k+3unmXX8dvZjYx+MbFu6JLJ1yaLI+l//LDL2sD0j
9COayOh9nxTZPLmrkpnTIuvv/WWEey/M+Ps3RLifw/LLLow8uOcfRxac9ZHI
ul/cHRlz6DMidAH+jur8sz4SYfRId3hs9H2R5Zf/d4Q2xF5tWTAvwr0XNnaN
jUw68XkR7lpcHf8fvU+Ee2vPP+vMCPu85LwvRGg3zDViHiD9izsnbHjgN5Hq
32nN+hG9Zv4nzohwN4mH9ntyhHuAr7379gj3GOddW3DWmRHOJ11y4/jRkerf
203nvHvOzMimKRMjzOtj9iB/gdf5deXsT5Ox5ym8szNOfWNk+t+9NsJfE2ZO
Jqs/csG5kRXXXBrhXZj25pMic8/8h8i8f/5QZO6Z741sX7k8sujcf4+s/uGN
Ebaw+vvXRhZ/6d8j1V3I7u9N6++eMyPCXUTmfOidER7dsaU7wr8YbF+6JLLT
UQxB9iNJUjnsR+WzH9mP7Efl7E+T2Y/ayn4kSSqH/ah8Zd6fgdloYw9/ZmTK
619ayetOiDBKp3fQZcYdtU9kxjv/JsJfO2Wm0ITjD4vwt1M3do2L0CYmvvjw
yITjDqwkHcUT3LM624fJf/WiyKQTj43QcegIXccfFuGvbXKvY/4m5oRj94+M
f96zI2wn33L1tVieQn+ZdOIxkSmv+4sIMwyZz1Z9rfp31X7BwZHqOum4Hn9W
pUPlR0rvYw4ho+LqbqR1xh+9byXpLuLTTj4pMvFlR0dYUjwW+9FQt23ZIxFm
XVYXpWPs79leSRq3868H8z72/ggz37hHCvdPWHbJBRHm7/X19ESqm0nvXa2R
f7UrZa0tb09PsM4QZz+SJJXDflQ++5H9yH5Uzv6Uw35UDvuRJKkc9qPyldSP
soZS/VuxjNufW0n1dbOxOp1lymtfEuHuB9ybmr/Tyt2zuSMBvWOncT7dgdQY
t9N0xh+zX6T66sfsH6EfMb+OGWhjnrN7pDoDrVabqL4WSY3phYdE2P4THGP9
PawmbS1fp8azeK0Jxx4QoVfutE72nvJodX5g65qR/ah8/X0phWPJ7uFQ/Euy
tOmlF30tsuQbX4ow/437gRefpZz9SJJUDvtR+exH9iP7UTn700L2o9LZjyRJ
5bAfla/UflTsSjVG6fQRxvOTX/mCCHchWHD2RyOPz1jbKzLIewvUffXqPLQT
jojstH5TX6XM89mG/bEftUs2w63mo8n25Usja3/yo8j63/ws0rdlS6S45qB3
JaX+kqHKfiRJKof9qHz2o+Kj9qMmxH7ULvajUtiPJEnlsB+Vr239qOExP3cS
GHvIn0f426nMWGvJXalTqrPU0oy19p+EIRr7USerf9Qj85wMkP1IklQO+1H5
7EfF2I+aEPtRJ7Mf7TL7kSSpHPaj8nV0PyL87dR0F4LqvQhKubdA+w98SMd+
1Pm4C3cayVffl5F8NgbIfiRJKof9qHz2o1pj+/Yf+JCO/ajz2Y92gf1IklQO
+1H5hkA/MkMxndyPatz1Wmpc9epK14/9SJLUOvaj8tmPTEtiP9KwZj+SJJXD
flS+Ge/468i4o/aO2I9M01L9K8D7RDZN6YpwvbWtH916Q6Taj6qPpnllPT2V
9PYaM6D0bd8W4Vqa9/HTInPOODWSX13lXOeSpOHNflQ++5FpSexHZljHfiRJ
Kof9qBz9fTsifD3/3/4xMuagp0UmnjAqwsi2y5jB5fhDIxOO3T/SdcKoSM/q
lZHHL77y5rPlXYw5fmMOeXpk/b2/jJSzDxreeh/bEOHfBJZefF6E5fYjSVKz
2I/KYT8yLYz9SCOG/UiS1Gr2o3Lk9/LtnjU9MvGlR0bGHLR7ZNwRe1Uy6pnG
DCzpyhl7+J4RrqXlV347stNV19ar/eHPfDwy9tBnRBacdWZkyde/WMl5KV83
pm7O+0MWfenTEWZsTnn9SyM969ZGqv8C4H0/JElNYj8qh/3ItCT2IzO8Yz+S
JJXOflSq7Cf41ofnRRad+5nIrPe+tZJ3n1zJe/425WRj6iZdJ+9+c2Tev5we
WffLeyLVKy2/n3bb9KdUrLr5usjM95wcmfbGl1fy5ldU8qYTjambV1TyxhMj
09/2msiSb5wT6V2/LvL4hWYzkiQ1k/2oVPYj07TYj8xIiP1IklQ2+1Eb+NNc
rePVpZHDq12S1AL2ozbwZ7pax6tLI4dXuySpBexHbZNmQFXvSZv/frExAwz3
Q+jU+xtXZtlV941Zf+0+XWaopvg9U5KkFrAftY39yDQp9iMzImI/kiSVwn4k
SZIkSbAfSZIkSRLsR5IkSZIE+5EkSZIkwX4kSZIkSbAfSZIkSRLsR5IkSZIE
+5EkSZIkwX4kSZIkSbAfSZIkSRLsR5IkSZIE+5EkSZIkwX4kSZIkSbAfSZIk
SRLsR5IkSZIE+5EkSZIkwX4kSZIkSbAfSZIkSRLsR5IkSZIE+5EkSZIkwX4k
SZIkSbAfSZIkSRLsR5IkSZIE+5EkSZIkwX4kSZIkSbAfSZIkSRLsR5IkSZIE
+5EkSZIkwX4kSZIkSbAfSZIkSRLsR5IkSZIE+5EkSZIkwX4kSZIkSbAfSZIk
SRLsR5IkSZIE+5EkSZIkwX4kSZIkSbAfSZIkSRLsR5IkSZIE+5EkSZIkwX4k
SZIkSbAfSZIkSRLsR5IkSZIE+5EkSZIkwX4kSZIkSbAfSZIkSRKa1Y/WJfYj
SZIkSUNX4/2IBmQ/kiRJkjRc2Y8kSZIkCfYjSZIkSYL9SJIkSZJgP5IkSZIk
2I8kSZIkCfYjSZIkSYL9SJIkSZJgP5IkSZIk2I8kSZIkCfYjSZIkSYL9SJLK
15+0ey+GM84wP6favS/19GXavS+NGirnVpIGx34kSeWzH7XaUBnD248kqdPY
jyR1PsZjjCH7M8U1a402i8vzJfnWikvyfci/Lj6ruUc9OH0F7d6jRu16Z8y3
sCK5PWFJ/aui1vveCvme8HNzUlJ8NL/yy9zDovx1H0nuTIr7nK/f3uuw/vcK
SarFfiSp89mPGmc/4mv7UXPZjySNHPYjSWqu4piwN8mXrEny5bXGk7VGyAMd
cxY7Zr63xSW19qHWmsV1+Lp4jAM9h/X3rXiMfM3Pmu8l+XMH+uq1zkCt421k
b/MlP0vGJo3vZ61XLDaCWntb/7iK5zP/emHy/WSg57bWNht5x+u/I/XPeePX
niTZjySpuYojNPtR8bmNn8NGRr/5fvK1/ai4pNb6xeMqns/8a/uRpOHNfiSp
M+Xjmc3JxGRcsijJ19yW3JfcnbCE8TlLpiSMncYndyTrE7bG9ucl+f6w/oZk
WZLPiXowqTUGuy1ZlUxNvpuwb806Y90JM8puTvJRd/keytRfc20yIam1TiPj
23wd3qObEpbk9xPoSX6a3JIw2s/f09bJR++/SLjqWJJfFXMSjoJ3dklS3OY9
SX6M9c/YQB/Nl/Dp47zlR1TsUFcn7Nv25P86N/+3xpsO3zf4XAz0uZJGMvuR
pM5kPxoo+5H9yH6Usx9JGhz7kaTOxEiGMRXjKzrODxMax9yE9RkPP5DwKDOX
fpn8JLkuoaHQaHiUURzbuT65Mcn3h20yfmZc/bWEsf2VCWuOTvJewNbmJ99K
GBUvTxgbM55k+2yBMScz8WhnNAjW/G2SjzkZOV+a0Pi+mSxO+C7N8W5M6I98
32YcznbYB16RJYyHf5XQ8ti3GUlXwiiU7dMuOQOc8/sT2iXbzDsC63Pm2c60
5DcJe86akxNaMPufXy31+1H+ivz84txekXB0vPqshGuJ9Tlq3inOFe8m7wI/
1zjGvL/wftFS8+bSeD+iv/864Wq5KOH95Urm/ZqdcG1wnjkbLOEdzLfD9h9O
WM6a+c9olvBTvn4/4ujydb6azEw4V7yPvGK+na0Jn2WuxvxfJzjbvOO8Lyxf
nfAZ593h1VmHf0u5Ibksyc+JLUlSffYjSZ3JfmQ/sh/Zj+xHkspnP5LUafLR
C98x7koYKzKm5XsOY8visxhN8SjzpniUES/fqViT0de1CeswNvtBkm+TsShz
nGhqjPx5FRoNI+SbMrQw7oTMlukv7MlVyTUJ42q2842E0TXPpTtcnvC6PItR
PXtII7gwYfusz4iUBsfWOF7ODPuTvzqvRWdk/M/4ljl7lyTcPfszCWeG/eH8
MFbn2Fmfdnlrwlllhht7zvbZNzrX+QnvOM9lbiRjXbZMR+gvyM9GrX6Uf832
F2doTLTanydcD8yKZE/OS2ju5yZ8zXvK+PzLCevnx5t3pfr9iG3+T8I67BWd
9EsJjSDfW/o7d+GmI9A+8neQI6Vtcd2ynxw7M9O4NhrpR8X5dez5fye8v3TP
byesz2uxn19JuN7YK9rZfyX5co6Fa5vj5esFyecSzg/vPu/aY4n9SFIj7EeS
Oo39yH5kP+Jr+5H9SFL57EeSOk0+emEuECNnRsuMgvL5Qvlz+Q7DuIsljFf5
mlEW852YncV4m7ET6zCWY0Sab5nROON2xn5jEsbA9As6BXPeGGHSNWgNKxO2
zOwgRt2PJuwDo2XuSp3PDOS5vCJ9hPEt54Q9ZJzJmJZRKONkGiXjT8bAzEpi
ffaBc8JYmr2lYzLO53XZN0bX9Mr8r68yEs7PGD8RmKeXn43iO857yrvM0fFc
mgKtijbHmo1cOY30I9ZnnM/55JzT9Thq9p9ZnbxTvHf5sdM3+Zrn5u8m7xFn
gHUa70e8U1zPvCO0DPYqb8f0X34W04N4Z+mqbJ+tcZVyXeVbwI8Tznn+7w/5
PtfqR8V3gXPFPE9abX5XcK5zelA+o5VzyzWQvwr7z5rsIcs5Uh7la5ZzdMzJ
LO6nJNViP5LUaexH9iP7EV/bj+xHkspnP5LUmRhl8X2GHvSjhJEqYyTGwKzP
SOxfEx5lphZjPMbJjCF5Fn2B0T6/4U4DYjzGb5fz/Sof7zGjjPsG0DtOT9hP
lvPqdA3G2OwzI3+2zwiT8SG/Xc7cNvoaY0jaDa2BOUWM99gmdzBgy+wb8+h4
XfaZcSndjVlGNERGpPzuPOfn4oQROKN9RtTMo2MuGa/O/D3mdDHTjzEn55a5
aoxI6RqcE845x8Xr5qNWxvAcC8uZwchPFloVTY32x3wwnpV35MHNr+P9ovHx
vvAqvCP8Xj/b4VF6Je8dbYX16TV0GbbGO8V9PPJ7DuQNqH4/4pov3vmc+ZPM
O+WomXvGo3SEcxJ+RnO18w7SZNkf3nf2gauCTwGfo/zndf1+lD/KvzzwXvNO
fSehm/OJ4/3lU0b351rNr0aWX5BwLbGc65lPCi2Pa5tzznXI+8tZ4llcS86v
k9QI+5GkzmQ/sh/Zj+xH9iNJ5bMfSep8jHYY0TEq5q7a+TqM6xhFM55kTR7l
XtPMoWL8OTHDyI05UfxmN/OX8jshg7HZpoTvgcz4ykdcvDrbYQktg3E1bYh7
GrOcrzlGnsX+MDJnfb7TctQsZ74WY0hehe3wKizha+7mzbMYITO+5dXpF3zN
s2he+Wwuvm8z2uccsjzvp+whPwWYo8g7wk8H9o1jYR4UI1uey/nkUfaW7sk7
lR8RHZM94Wzk93wu9qN8NletOWAcO6/LEq40mh1Hkb8LjP+5Ntgme8g2eV3O
NuPz/Dos7gkj//xu6nnXoPVzDvM5gewVZ4k1eV/4mlfP/4YyX3Pe6EH5s/Ij
5YriLvTsSbFTsLV8hlvx/gycE44uvw8/nxe6J58mjo7WxhljHzjP9CN6Vj5+
YK4jVy9fsw/5/dW5fnit/FzZjyTVZz+S1PnsR/Yj1rQf2Y/Yjv1IUuvYjyQN
XY5zmquc88kIOf/rro1oZN/ydfhZk98RopHfzS/nDOR7wizK/K8Jl3MPgeKR
8jOd+0vkna7Yj5jJmd9RYVfOLU2fe540stxPvaRWsx9JGrocKTWX/ch+ZD+S
JPuRpKGiL1McI7Gk1jq1lhTXb+RVituptZ/FZ+XPLW6/+OrF9WttrbjN4prF
Ldc/M8VzW/9YGlmn1vvbyLPqn58c/Suff1hrzcaPpf55Lm6teCaL6zNLML/D
fK2tNbLPjR9RcXlxP2thtmT9c9vIKxaf1fjy+ttvZJuSVIv9SNJQ0UhzqbVO
/RaQP9rIqxS3U2s/i89qZCxXa2Re3E6tPay1fnHL9c9M8dzWP5ZG1qn1/jby
rPrnJ2c/qn9ExeXF/azFfiRpeLMfSZLK5Ei18/keSRrJ7EeSpDI59u58vkeS
RjL7kSRpuOr8cX6tGXSdbyjusyQ1wn4kSRquOn8Mbz+SpE5jP5IkSZIk2I8k
SZIkCbvej7jPp/1IkiRJ0lDXeD9an9CG7EeSJEmShh/7kSRJkiTBfiRJkiRJ
sB9JkiRJEuxHkiRJkgT7kSRJkiTBfiRJkiRJsB9JkiRJEuxHkiRJkgT7kSRJ
kiTBfiRJkiRJsB9JkiRJEuxHkiRJkgT7kSRJkiTBfiRJkiRJsB9JkiRJEuxH
kiRJkgT7kSRJkiTBfiRJkiRJsB9JkiRJEuxHkiRJkgT7kSRJkiTBfiRJkiRJ
sB9JkiRJEuxHkiRJkgT7kSRJkiTBfiRJkiRJsB9JkiRJEuxHkiRJkgT7kSRJ
kiTBfiRJkiRJaFc/kiRJkqShyH4kSZIkSbAfSZIkSRLsR5IkSZIE+5EkSZIk
wX4kSZIkSbAfSZIkSRLsR5IkSZKEWv2oL9mWbEgeTBYn7d5rSZIkSWommg6t
hwZEG+rL2I8kSZIkjQSN9KPtyaZkRjI+sSVJkiRJGh4WJTSdmQkNiDZkP5Ik
SZI0cjTSj/qT3mRLwu8oTU/uT+6VJEmSpCHugYT/D6L10IBoQ/0Z+5EkSZKk
4a3xfsS97Ph/pe6E9VcnyzUcPaJhZ4mGo8Uadtp9Takl2v0TQM3X7pGaWoJ2
Q9Oh9dCAaEP2oxGu3d911HztHh2oJdo9llfztfuaUku0+yeAmq/dIzW1RCP9
6HdJsSXxP038vtIGDUfrJA0FazXstPuaUkus17DT7pGaWoJ2Q9Op9T9H9qMR
q90/SSQ1pN1jeTVfu68ptUS7x/JqvnaP1NQSA+1HeUvid5R41jYNR1s17GyR
JLVJu38CqPnaPVJTS9BuaDq1mpH9aMRq93cdNV+7RweSNHK1+yeAmq/dIzW1
ROP9SJIkSZIkSZIkScL/B0gdhSo=
     "], {{0, 456.}, {560., 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{144, 144}],
    BoxForm`ImageTag[
    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
     MetaInformation -> <|
      "Exif" -> <|
        "ImageWidth" -> 1120, "ImageLength" -> 912, "XResolution" -> 144, 
         "YResolution" -> 144, "ResolutionUnit" -> "Inch", "Software" -> 
         "Created with the Wolfram Language : www.wolfram.com", "DateTime" -> 
         DateObject[{2021, 8, 2, 13, 55, 27.}, "Instant", "Gregorian", -4.], 
         "TimeZoneOffset" -> -4|>, 
       "Comments" -> <|
        "Software" -> "Created with the Wolfram Language : www.wolfram.com", 
         "Creation Time" -> 
         DateObject[{2021, 8, 2, 13, 55, 27.}, "Instant"]|>|>],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{560., 456.},
   PlotRange->{{0, 560.}, {0, 456.}}],
  #& ,
  TaggingRules -> {"DefaultContentBoxes" -> True},
  AutoDelete->True]], "ExampleImage",
 TaggingRules->{},
 CellTags->"DefaultContent",
 CellID->432327487,ExpressionUUID->"68c7a4de-0238-4399-a050-db18fd223253"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Neat Examples", "Subsection",
 TaggingRules->{},
 CellChangeTimes->{{3.866319993863075*^9, 3.866319999393295*^9}},
 CellID->507227050,ExpressionUUID->"5ae9a88a-aa0b-4a52-b021-1f0781e6aff8"],

Cell["Create a constant association:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.866320012147574*^9, 3.8663200159889193`*^9}},
 CellID->337003629,ExpressionUUID->"a5bd6d5b-9dda-41b8-883c-f79364b80994"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<PeterBurbery`AssociationFunctions`\>\"", 
  "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.866320017453342*^9, 3.866320043886655*^9}},
 CellLabel->"In[10]:=",
 CellID->3011126,ExpressionUUID->"edaab486-0aa4-4955-90b5-f41ccf3aea49"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ConstantAssociation", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], ",", "x"}], 
  "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.86636357036662*^9, 3.866363583263707*^9}},
 CellLabel->"In[73]:=",
 CellID->413855837,ExpressionUUID->"b7ec07b1-b537-42e8-b58b-f85dd1a5f454"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"a", "\[Rule]", "x"}], ",", 
   RowBox[{"b", "\[Rule]", "x"}], ",", 
   RowBox[{"c", "\[Rule]", "x"}], ",", 
   RowBox[{"d", "\[Rule]", "x"}]}], "\[RightAssociation]"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.8663635836324005`*^9},
 CellLabel->"Out[73]=",
 CellID->464722400,ExpressionUUID->"99144cf3-6d82-4518-b61e-7319609850f4"]
}, Open  ]],

Cell["Partition an association:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.866363597368588*^9, 3.866363602420032*^9}},
 CellID->193813692,ExpressionUUID->"06008d1b-b2a3-42a7-9035-7ab94fcaa410"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AssociationPartition", "[", 
  RowBox[{
   RowBox[{"AssociationMap", "[", 
    RowBox[{"f", ",", 
     RowBox[{"ToExpression", "/@", 
      RowBox[{"Alphabet", "[", "]"}]}]}], "]"}], ",", "2"}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8663201610062604`*^9, 3.8663201666540785`*^9}},
 CellLabel->"In[14]:=",
 CellID->108050433,ExpressionUUID->"131d90fe-7df4-4c2b-8828-ef6e1a5bb163"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"a", "\[Rule]", 
      RowBox[{"f", "[", "a", "]"}]}], ",", 
     RowBox[{"b", "\[Rule]", 
      RowBox[{"f", "[", "b", "]"}]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"c", "\[Rule]", 
      RowBox[{"f", "[", "c", "]"}]}], ",", 
     RowBox[{"d", "\[Rule]", 
      RowBox[{"f", "[", "d", "]"}]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"e", "\[Rule]", 
      RowBox[{"f", "[", "e", "]"}]}], ",", 
     RowBox[{"f", "\[Rule]", 
      RowBox[{"f", "[", "f", "]"}]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"g", "\[Rule]", 
      RowBox[{"f", "[", "g", "]"}]}], ",", 
     RowBox[{"h", "\[Rule]", 
      RowBox[{"f", "[", "h", "]"}]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"i", "\[Rule]", 
      RowBox[{"f", "[", "i", "]"}]}], ",", 
     RowBox[{"j", "\[Rule]", 
      RowBox[{"f", "[", "j", "]"}]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"k", "\[Rule]", 
      RowBox[{"f", "[", "k", "]"}]}], ",", 
     RowBox[{"l", "\[Rule]", 
      RowBox[{"f", "[", "l", "]"}]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"m", "\[Rule]", 
      RowBox[{"f", "[", "m", "]"}]}], ",", 
     RowBox[{"n", "\[Rule]", 
      RowBox[{"f", "[", "n", "]"}]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"o", "\[Rule]", 
      RowBox[{"f", "[", "o", "]"}]}], ",", 
     RowBox[{"p", "\[Rule]", 
      RowBox[{"f", "[", "p", "]"}]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"q", "\[Rule]", 
      RowBox[{"f", "[", "q", "]"}]}], ",", 
     RowBox[{"r", "\[Rule]", 
      RowBox[{"f", "[", "r", "]"}]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"s", "\[Rule]", 
      RowBox[{"f", "[", "s", "]"}]}], ",", 
     RowBox[{"t", "\[Rule]", 
      RowBox[{"f", "[", "t", "]"}]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"u", "\[Rule]", 
      RowBox[{"f", "[", "u", "]"}]}], ",", 
     RowBox[{"v", "\[Rule]", 
      RowBox[{"f", "[", "v", "]"}]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"w", "\[Rule]", 
      RowBox[{"f", "[", "w", "]"}]}], ",", 
     RowBox[{"x", "\[Rule]", 
      RowBox[{"f", "[", "x", "]"}]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"y", "\[Rule]", 
      RowBox[{"f", "[", "y", "]"}]}], ",", 
     RowBox[{"z", "\[Rule]", 
      RowBox[{"f", "[", "z", "]"}]}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.8663201676294956`*^9},
 CellLabel->"Out[14]=",
 CellID->1110362,ExpressionUUID->"07b34250-7dfe-4482-bd94-d111bce82405"]
}, Open  ]],

Cell[TextData[{
 "Combine partitioning associations with other association operations like ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["AssociationThread", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/AssociationThread",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "f6970325-b577-4a81-bad0-24f5172cf6e3"],
 ":"
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.866363605500315*^9, 3.8663636276516857`*^9}, 
   3.8663689741800137`*^9},
 CellID->389007450,ExpressionUUID->"5d16bb59-d149-4b0b-956c-37fc49829dad"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AssociationThread", "[", 
  RowBox[{
   RowBox[{"Range", "[", "3", "]"}], "->", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"AssociationThread", "[", 
       RowBox[{
        RowBox[{"Range", "[", "2", "]"}], "->", "#"}], "]"}], "&"}], "/@", 
     RowBox[{"Partition", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"AssociationThread", "[", 
          RowBox[{
           RowBox[{"Range", "[", "2", "]"}], "->", "#"}], "]"}], "&"}], "/@", 
        RowBox[{"Partition", "[", 
         RowBox[{
          RowBox[{"AssociationPartition", "[", 
           RowBox[{
            RowBox[{"AssociationMap", "[", 
             RowBox[{"f", ",", 
              RowBox[{"ToExpression", "/@", 
               RowBox[{
                RowBox[{"Alphabet", "[", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{";;", "24"}], "]"}], "]"}]}]}], "]"}], ",", "2"}], 
           "]"}], ",", "2"}], "]"}]}], ",", "2"}], "]"}]}], ")"}]}], 
  "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8663207503817997`*^9, 3.866320763050979*^9}},
 CellLabel->"In[55]:=",
 CellID->646084442,ExpressionUUID->"815f6bc4-e4b1-4bd4-bf96-93da36a639e8"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"1", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"1", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         RowBox[{"1", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"a", "\[Rule]", 
             RowBox[{"f", "[", "a", "]"}]}], ",", 
            RowBox[{"b", "\[Rule]", 
             RowBox[{"f", "[", "b", "]"}]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"2", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"c", "\[Rule]", 
             RowBox[{"f", "[", "c", "]"}]}], ",", 
            RowBox[{"d", "\[Rule]", 
             RowBox[{"f", "[", "d", "]"}]}]}], "\[RightAssociation]"}]}]}], 
        "\[RightAssociation]"}]}], ",", 
      RowBox[{"2", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         RowBox[{"1", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"e", "\[Rule]", 
             RowBox[{"f", "[", "e", "]"}]}], ",", 
            RowBox[{"f", "\[Rule]", 
             RowBox[{"f", "[", "f", "]"}]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"2", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"g", "\[Rule]", 
             RowBox[{"f", "[", "g", "]"}]}], ",", 
            RowBox[{"h", "\[Rule]", 
             RowBox[{"f", "[", "h", "]"}]}]}], "\[RightAssociation]"}]}]}], 
        "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"2", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"1", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         RowBox[{"1", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"i", "\[Rule]", 
             RowBox[{"f", "[", "i", "]"}]}], ",", 
            RowBox[{"j", "\[Rule]", 
             RowBox[{"f", "[", "j", "]"}]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"2", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"k", "\[Rule]", 
             RowBox[{"f", "[", "k", "]"}]}], ",", 
            RowBox[{"l", "\[Rule]", 
             RowBox[{"f", "[", "l", "]"}]}]}], "\[RightAssociation]"}]}]}], 
        "\[RightAssociation]"}]}], ",", 
      RowBox[{"2", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         RowBox[{"1", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"m", "\[Rule]", 
             RowBox[{"f", "[", "m", "]"}]}], ",", 
            RowBox[{"n", "\[Rule]", 
             RowBox[{"f", "[", "n", "]"}]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"2", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"o", "\[Rule]", 
             RowBox[{"f", "[", "o", "]"}]}], ",", 
            RowBox[{"p", "\[Rule]", 
             RowBox[{"f", "[", "p", "]"}]}]}], "\[RightAssociation]"}]}]}], 
        "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"3", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"1", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         RowBox[{"1", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"q", "\[Rule]", 
             RowBox[{"f", "[", "q", "]"}]}], ",", 
            RowBox[{"r", "\[Rule]", 
             RowBox[{"f", "[", "r", "]"}]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"2", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"s", "\[Rule]", 
             RowBox[{"f", "[", "s", "]"}]}], ",", 
            RowBox[{"t", "\[Rule]", 
             RowBox[{"f", "[", "t", "]"}]}]}], "\[RightAssociation]"}]}]}], 
        "\[RightAssociation]"}]}], ",", 
      RowBox[{"2", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         RowBox[{"1", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"u", "\[Rule]", 
             RowBox[{"f", "[", "u", "]"}]}], ",", 
            RowBox[{"v", "\[Rule]", 
             RowBox[{"f", "[", "v", "]"}]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"2", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"w", "\[Rule]", 
             RowBox[{"f", "[", "w", "]"}]}], ",", 
            RowBox[{"x", "\[Rule]", 
             RowBox[{"f", "[", "x", "]"}]}]}], "\[RightAssociation]"}]}]}], 
        "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.8663207633971767`*^9},
 CellLabel->"Out[55]=",
 CellID->193858203,ExpressionUUID->"13fcf845-2532-415c-ace6-436842f3eac5"]
}, Open  ]],

Cell["Create a nested dataset:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.866363521223464*^9, 3.866363528970166*^9}},
 CellID->231950245,ExpressionUUID->"2241538d-2126-401a-b147-7b3942d3f808"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", 
  InterpretationBox[
   DynamicModuleBox[{Typeset`open = False}, 
    TemplateBox[{"Expression", 
      RowBox[{"AssociationThread", "[", 
        DynamicBox[
         FEPrivate`FrontEndResource["FEBitmaps", "IconizeEllipsis"]], "]"}], 
      GridBox[{{
         RowBox[{
           TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
           TagBox["1352", "IconizedItem"]}]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
       "Column", 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
      Dynamic[Typeset`open]},
     "IconizedObject"]],
   AssociationThread[Range[3] -> Map[AssociationThread[Range[2] -> #]& , 
      Partition[
       Map[AssociationThread[Range[2] -> #]& , 
        Partition[
         PeterBurbery`AssociationFunctions`AssociationPartition[
          AssociationMap[$CellContext`f, 
           Map[ToExpression, 
            Part[
             Alphabet[], 
             Span[1, 24]]]], 2], 2]], 2]]],
   SelectWithContents->True,
   Selectable->False], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8663625257094374`*^9, 3.8663625301775875`*^9}},
 NumberMarks->False,
 CellLabel->"In[71]:=",
 CellID->7161652,ExpressionUUID->"34d860e6-3100-4ce1-901d-fca18639444b"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3TFLbGnfqHmZSU406EcQP4FgMOlgIJMeORifw37nYPIOvEc4jKHZDhpk
IiOTDiqRzgx2J08gQgcNSjWNNI0oPKnwwBPupOc/+8b1rF1l3a4qq8q/tX5X
ILqqau117Srvq+51V5Wb/+3//s//1/+ytrb2P/5TfPnP//V//h//8R//9f/Z
X48f/su//4/D//7v//bp//z3o3/77//2H//7f/tfY+P/G1/+t7j+///9XwAA
AADwBv7xj388AABQ5W8AAEzm73//+83NzW+//fZH/7i7u+P+3gfyDvTZPTPl
fomv7/3cGd9R7peHb3OKuJv+2T+4c0ceyv0SX9/7lDy+o7lfevtbw5078qAU
OVEK7tyRB6XIiVJw5448KEVOlII7d+RBKXKiFNy5Iw9KkROl4M4deVCKnCgF
d+7Ig1LkRCm4c0celCInSsGdO/KgFDlRCu7ckQelyIlScOeOPChFTpSCO3fk
QSlyohTcuSMPSpETpeDOHXlQipwoBXfuyINS5EQpuHNHHt5Siqurq8/PDAaD
+HHe42V/UQru3JGH2UpxeXm5tbW1Nsak69/e3l61eOsw+kx7n/f39/PabQbe
UorT09OTk5MFPWCWBnfuyMMMpYhhv3RhY2Pj8PCwzCkODg52dnYm3WRvby8u
3XtmDiPp824Lka04hnntNgOzleLLly/b29vl3lnow2YJcOeOPMxQiohCycTT
01PHm8RgvtBzU6VWi9v/8pm2FO2xom8jBvd+umOZzFCKaEQ8II+Pj7vfRCmm
ZdpSnJycjJwJXMKDZ6Fw596F4XB4cXFx8o3T09Pr6+uFHl5vmaEU5QE51cjc
vRT39/eXl5dl5D87O7u9ve1yK6WI55bll+XTp099GzG499M9ArG5uTm+Whob
9WLu5CnFpFXy2PhqL5SiIYaOvo0YDdx75V7mU9vb21HJksv9/f3yn7C+vv74
+LiEo+0PXUrRfjVsUO6LGPw/f0+lBV1KUfa8s7PTXiUv/9arayJK0dDDEaOB
e6/cY+IwHA5HNp6fn5f/h9PT04UcX1/pUoqmDnUqY3WXUsTEYfyVroPBoOz8
7OysfoRKUejhiNHAvZ/uI5Ql/phozPGokGdOMYmYZcQ/FxONynWUoqHPIwb3
frqPsLu7G/8P8XWOR4U86xSV25YwVa6jFA19HjG499B9OByen5+ftCjL3Eox
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
Wyo6ujfPpV/kgw4X3Lv/9a4IYilj86k1SrEIZijFq+/IHqfjJwRGFwaDQdl/
hKO5rVJ0uSsjCs1vTXzzcRtRmOF59Tir/by6z+4VlGIRzFCKGXjL36dQin7+
VRfu3GdDKRaBUuREKbhznw2lWARKkROl4M59NpRiEShFTpSCO/fZKKt1H3SZ
Ji1LK0X7VRlT3bascb/411Hb+1SKFYM7d+RhOaXAtCgFd+7Ig1LkRCm4c0ce
lCInSsGdO/KgFDlRCu7ckQelyIlScOeOPChFTpSCO3fkQSlyohTcuSMPSpET
peDOHXlQipwoBXfuyINS5EQpuPfZ/e7u7gGZuLm5ifslvr73geA74jdFKbi/
94G8A8W9jEsA6pTfFCMG975R3IfD4R/IhDlFTswpuHNHHh6sU6TkwToFd+5I
g1LkRCm4c0celCInSsGdO/KgFDlRCu7ckQelyIlScOeOPChFTpSCO3fkQSly
ohTcuSMPSpETpeDOHXlQipwoBXfuyINS5EQpuHNHHpQiJ0rBnTvyoBQ5UQru
3JEHpciJUnDnjjwoRU6Ugjt35EEpcqIU3LkjD28pxdXV1ednBoNB/Djv8bK/
KAV37sjDbKW4vLzc2tpaG2PS9W9vb69avHUYfaa9z/v7+3ntNgNKwZ078jBD
KWLYL13Y2Ng4PDwsc4qDg4OdnZ1JN9nb24tL956Zw0j6vNtCZCuOYV67zYBS
cOeOPMxQiohCycTT01PHm8RgvtBzU6VWi9v/8lEK7tyRhxlKEY2IUhwfH3e/
iVJMi1Jw517n/Pz85OTky5cv5cfr6+vT09PYEtsfHx8XfJi9Y4ZSlFNPU43M
XUoxGAxin83Vbm9vz87Oylr5q5MXpVg9uHOvs7u7GwNRpGE4HJbvG9bX15uC
YC7kKUVcp+z2/v6+fN8Qs5j6zZVi9eDOvU6pw/7+fnQhvtnc3IxqHB0dlR/j
q5nFHOlSivarYYMyesdg/vl7KoN591IcHByUs1tlkfr4+Lj8WF8WUYrVgzv3
Ou15xOnpabM9ZhNl4/n5+SKPtF90KUVThzqVsbp7KQpnZ2fN9rhh2TgYDCpH
qBQrBnfudZpSjBehbI8pxmKOsY9km1O8WIRXS6QUqwd37nVKKeLr+EUn37BU
MUeyrVO8+G6LV0ukFKsHd+51KqXA3PkQpXgVpVg9uHOvoxTLRClyohTcuddR
imWiFDlRCu7c6yjFMlGKnCgFd+51lGKZKEVOlII79zpKsUyUIidKwZ17HaVY
JkqRE6Xgzr2OUiwTpciJUnDnXqd8lqyP7FgOM5Ti1ffBjdP9s2QrH9nx6iHN
cMO0KAV37sjDDKWYAX+fYlqUgjt35EEpcqIU3LkjD0qRE6Xgzh15UIqcKAV3
7sjD0krR/ksW89ptx7+O8RFRCu7ckYfllALTohTcuSMPSpETpeDOHXlQipwo
BXfuyINS5EQpuHNHHpQiJ0rBnTvyoBQ5UQru3JEHpciJUnDnjjwoRU6Ugjt3
5EEpcqIU3O/u7h76R1jf3Nz00z0z7pecxD2iFD13j1/MvwHAZMooYbTss/vv
v/9+DwCTMafgHg+DrwAwmQfrFL13VwoAdZSCu1IAqKMU3JUCQB2l4K4UAOoo
BXelAFBHKbgrBYA6SsFdKQDUUQruSgGgjlJwVwoAdZSCu1IAqKMU3JUCQB2l
4K4UAOooBXelAFBHKbhnK8VPP/30ww8/vPdRAPgXSsH91VKcnZ2dPDPpCj//
/POrD7Y///xz0h7aKAWQDaXgXi9FDNo//vhj+X7SGB4bu5Til19+UQrgI6IU
3LuffSqTghjwR7Y0xCBftsdQX7bEdKNsiYva14wbtq/WLohSANlQCu7TlqIM
8m1iY3tO0Z6GRCmaYT+u0y5C+5xVXL/dlPFSxBW6TFsALAKl4N69FDFcv/hs
v12KkRy0Lx2/qKF9UeUcV3s6A2BpKAX3jqUog/mLY3W7FO3ZQSFG+HJW6sVS
jJ+AmlSKSTMaAItGKbh3KUVZjG6WIUZ4tRTlZNRIKWJjc8P2YrdSANlQCu6v
lqIM483SwziznX1qz1C6lMLZJ+C9UAru9VKU4b2Sia/fL2F/nbyiXXLQjPbt
vrTPPsVGK9pAKpSC+6vvpzj5npGTS1+fE9C+aPxVsoVyxqk0ojSoedFsU4ry
/fi/AuC9UAru2T7NA0A2lIK7UgCooxTclQJAHaXgrhQA6igFd6UAUEcpuCsF
gDpKwV0pANRRCu5KAaCOUnBXCgB1lIK7UgCooxTclQJAHaXgrhQA6ihFcb+7
u3voHzc3N+EeX9/7QACkJkZIpSij5d8AAC9RRkilGA6Hf/SPcu//+uuv730g
70A8Rwr933777b0PBN9R7pd+zvEzY07BnTvy8PB8PvwvZOLBOgV37kiDUuRE
KbhzRx6UIidKwZ078qAUOVEK7tyRB6XIiVJw5448KEVOlII7d+RBKXKiFNy5
Iw9KkROl4M4deVCKnCgFd+7Ig1LkRCm4c0celCInSsGdO/KgFDlRCu7ckQel
yIlScOeOPChFTpSCO3fkQSlyohTcuSMPSpETpeDOHXl4Symurq4+PzMYDOLH
eY+X/UUpuHNHHmYrxeXl5dbW1toYk65/e3t71eKtw+gz7X3e39/Pa7cZUIqp
3B8fH8/Pz0++cXFxET8u+vAWymz3++npaegv6JCWRp8f85mZoRQx7JcubGxs
HB4eljnFwcHBzs7OpJvs7e3FpXvPzGEkfd5tIbIVxzCv3WZAKbq7xwi5vr7e
fsYSP0Y4lnCQC2La+/3Lly/b29vFfaEHtgT6/JjPzAyliCiUTDw9PXW8SQzm
Cz03VWq1uP0vH6Xo6P7p06cyQu7v78cz6qOjo83NzbIlJhfLOdS50/1+bzdC
KbA4ZihFNCIekMfHx91vohTTohRd3GOcjIdipOH6+rrZ+Pj4WAbP2L74w1wI
3e/3iOPIGeAlHN5C6eg+HA7Lycbxi8p5yA89qUzIDKUoD8ipRuZXS3F/fz9p
tB8MBmXFvHJzpVg9OrrHgDC+KlEKErQL8oGYak5RBsxmbrWEw1soHd2bu3j8
ot3d3dgeXxdzgD0lSSni0klr4nHb2F5f3VCK1eON7uXhFOPJfI9qOczgXhk5
PxZKkZMupWi/GjYod1AM3Z+/p9ICpZgWpVAKpaigFEumSymaOtSpjNVKMS1K
8Rb36+vrtW+vgJr7US0HpVCKbJhT5EQp3uJeTtrH17kf1XJQCqXIhnWKnCjF
zO5lDIkJxcd9/51SKEU2lCInSjGbe9ShvJ/i9PR0QQe2BJRCKbKhFDlRitnc
9/f31769C29BR7UclEIpsqEUOVGKGdzL8sT29vbHPe9UUAqlyIZS5EQppnU/
Pz//6MsTDUrRvRQjb64sDwOlmDvZSnF7e9vePhgMmpdaVW6uFKvHVO5NJj7o
m7JHUIpX3eP5QPFtf6BHkwmlmDtJSvH09DS+2yYTSvHeD5N3oLv7imXin0rR
zb2cZVr79nLo6EX5MR4GZa1KKeZLklL89XyWKSifZF5+3NjYKB9dqxR9o/vn
PpWHzdHR0clLDIfDpRzvPOno3nxKXvtzn5otH/Qj8ro/5puPgmwonxVZPjVR
KeZLnlLEtGJnZ6d9v29tbd3e3pb3+ilF3+jifnFxsfYaH/EDPaY9V/8iH3So
nPYxH4+B5i9YlS3lUxM/aCjTMkMpXn1H9jjdP3X88vKy7D++KVvKO8R9lmzf
6OLefJJqhZ7MKcb5oENlnx/zmZmhFDPg71NMi1Jw5448KEVOlII7d+RBKXKi
FNy5Iw9KkROl4M4deVhaKdqvypjXbtv7VIoVgzt35GE5pcC0KAV37siDUuRE
KbhzRx6UIidKwZ078qAUOVEK7tyRB6XIiVJw5448KEVOlII7d+RBKXKiFNy5
Iw9KkROl4M4deVCKnCgFd+7Ig1LkRCm499n97u7uAZm4ubmJ+yW+vveB4Dvi
N0UpuL/3gbwDxb2MSwDqlN8UIwb3vlHch8PhH8iEOUVOzCm4c0ceHqxTpOTB
OgV37kiDUuREKbhzRx6UIidKwZ078qAUOVEK7tyRB6XIiVJw5448KEVOlII7
d+RBKXKiFNy5Iw9KkROl4M4deVCKnCgFd+7Ig1LkRCm4c0celCInSsGdO/Kg
FDlRCu7ckQelyIlScOeOPChFTpSCO3fkQSlyohTcuSMPbynF1dXV52cGg0H8
OO/xsr8oBXfuyMNspbi8vNza2lobY9L1b29vr1q8dRh9pr3P+/v7ee02A0rB
nTvyMEMpYtgvXdjY2Dg8PCxzioODg52dnUk32dvbi0v3npnDSPq820JkK45h
XrvNgFJw5448zFCKiELJxNPTU8ebxGC+0HNTpVaL2//yUQru3JGHGUoRjYhS
HB8fd7+JUkyLUnDnPokvX76cfGM4HL54hfPz87g0vi7kEHvJDKUop56mGpnr
pWhWxietNQwGg7JoPmkPSrF6cOc+ievr6zIKnZ6ejl8a+SiXRiwWdpi9I0Mp
moWPs7Oz8UsjH6/+i0qxenDnXmF7ezvGhM3NzfGLIh9lxJg048AMdClF+9Ww
QbkXYvD//D2VFrx69mlnZyf2ubW1NX5R5KP8i5VXNynF6sGde4UmBzG/GLmo
RGR3d3dhx9hHupSiqUOdylj9aimaHMT8YuSiEpH6K6aUYvXgzr3C4+NjGTGO
jo7a25tTTxYp5kuSOcXT01PZ7chCeXPqqbJI8ZdSrCLcudfZ39+PkWF9fb29
McIxvhFvJ8M6RaF58W17Y4RjfOM4SrF6cOde5+LiooxF8U2zcXNzM7Z8+vRp
kcfYR/KU4vLysuw5vmk2lneCHx4e1m+rFKsHd+6vMtKFL1++TFq8wBvJU4q/
xroQN5m0eDGCUqwe3Lm/SjnXFDw+PsaPkYz4fnt7e8HH2EdSlaKcawrKu78j
GfF95UNCGpRi9eDO/VVG1q/X19fXJrzJAm8kVSlG1q/Lm8FffJPFCEqxenDn
3oXd3d0YJfb395tlizK/wHxJVYpyzdj5wcFBs2zR5dOllGL14M69CzGbKANF
eSmUtewFka0UMZso+y8vhXp1LbugFKsHd+5diBlEOek0/joozJFspYgZRDnp
NP46qApKsXpw596RspC9NuHDPTAXspXir+eF7LUJH+7xIkqxenDn3pHhcFg+
WtaEYnHMUIpX35E9zlSluL+/L/9ExwnFX0qxinDnjjzMUIoZ8PcppkUpuHNH
HpQiJ0rBnTvyoBQ5UQru3JEHpciJUnDnjjwsrRRrLea12/Y+lWLF4M4deVhO
KTAtSsGdO/KgFDlRCu7ckQelyIlScOeOPChFTpSCO3fkQSlyohTcuSMPSpET
peDOHXlQipwoBXfuyINS5EQpuHNHHpQiJ0rB/e7u7qF/hPXNzU0/3TPjfslJ
3CNK0XP3+MX8GwBMpowSRss+u//+++/3ADAZcwru8TD4CgCTebBO0Xt3pQBQ
Rym4KwWAOkrBXSkA1FEK7koBoI5ScFcKAHWUgrtSAKijFNyVAkAdpeCuFADq
KAV3pQBQRym4KwWAOkrBXSkA1FEK7koBoI5ScFcKAHWUgnu2Uvz0008//PDD
ex8FgH+hFNxfLcXZ2dnJM5Ou8PPPP7/6YPvzzz8n7aGNUgDZUAru9VLEoP3j
jz+W7yeN4bGxSyl++eUXpQA+IkrBvfvZpzIpiAF/ZEtDDPJlewz1ZUtMN8qW
uKh9zbhh+2rtgigFkA2l4D5tKcog3yY2tucU7WlIlKIZ9uM67SK0z1nF9dtN
GS9FXKHLtAXAIlAK7t1LEcP1i8/226UYyUH70vGLGtoXVc5xtaczAJaGUnDv
WIoymL84VrdL0Z4dFGKEL2elXizF+AmoSaWYNKMBsGiUgnuXUpTF6GYZYoRX
S1FORo2UIjY2N2wvdisFkA2l4P5qKcow3iw9jDPb2af2DKVLKZx9At4LpeBe
L0UZ3iuZ+Pr9EvbXySvaJQfNaN/uS/vsU2y0og2kQim4v/p+ipPvGTm59PU5
Ae2Lxl8lWyhnnEojSoOaF802pSjfj/8rAN4LpeCe7dM8AGRDKbgrBYA6SsFd
KQDUUQruSgGgjlJwVwoAdZSCu1IAqKMU3JUCQB2l4K4UAOooBXelAFBHKbgr
BYA6SsFdKQDUUQruSgGgThkr/v73v9/c3Nzd3T30j7Dm/t4HAiA1Zax4+NYL
AAAm8Y9//OO9kwUASM1fAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
WFH+PyYIJQY=
    "], {{0, 457.}, {263., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->144.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{263., 457.},
  PlotRange->{{0, 263.}, {0, 457.}}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.8663207674408965`*^9, 3.866362531748867*^9},
 CellLabel->"Out[71]=",
 CellID->28376296,ExpressionUUID->"d34dab81-d09d-4c23-8396-9d68dc85d5af"]
}, Open  ]],

Cell["Create a large nested association:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8663635077038774`*^9, 3.866363512882391*^9}},
 CellID->31231031,ExpressionUUID->"cd5ebc4f-6afe-4e14-8677-38a3926af3ff"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AssociationThread", "[", 
  RowBox[{
   RowBox[{"Range", "[", "3", "]"}], "->", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"AssociationThread", "[", 
       RowBox[{
        RowBox[{"Range", "[", "2", "]"}], "->", "#"}], "]"}], "&"}], "/@", 
     RowBox[{"Partition", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"AssociationThread", "[", 
          RowBox[{
           RowBox[{"Range", "[", "2", "]"}], "->", "#"}], "]"}], "&"}], "/@", 
        RowBox[{"Partition", "[", 
         RowBox[{
          RowBox[{"AssociationPartition", "[", 
           RowBox[{
            RowBox[{"AssociationMap", "[", 
             RowBox[{"f", ",", 
              RowBox[{"Array", "[", 
               RowBox[{"a", ",", "24"}], "]"}]}], "]"}], ",", "2"}], "]"}], 
          ",", "2"}], "]"}]}], ",", "2"}], "]"}]}], ")"}]}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{3.8663210240172586`*^9},
 CellLabel->"In[65]:=",
 CellID->778393321,ExpressionUUID->"bd7009fb-4416-4570-9a03-cc0322567084"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"1", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"1", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         RowBox[{"1", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{
             RowBox[{"a", "[", "1", "]"}], "\[Rule]", 
             RowBox[{"f", "[", 
              RowBox[{"a", "[", "1", "]"}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"a", "[", "2", "]"}], "\[Rule]", 
             RowBox[{"f", "[", 
              RowBox[{"a", "[", "2", "]"}], "]"}]}]}], 
           "\[RightAssociation]"}]}], ",", 
         RowBox[{"2", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{
             RowBox[{"a", "[", "3", "]"}], "\[Rule]", 
             RowBox[{"f", "[", 
              RowBox[{"a", "[", "3", "]"}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"a", "[", "4", "]"}], "\[Rule]", 
             RowBox[{"f", "[", 
              RowBox[{"a", "[", "4", "]"}], "]"}]}]}], 
           "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]}], ",", 
      RowBox[{"2", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         RowBox[{"1", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{
             RowBox[{"a", "[", "5", "]"}], "\[Rule]", 
             RowBox[{"f", "[", 
              RowBox[{"a", "[", "5", "]"}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"a", "[", "6", "]"}], "\[Rule]", 
             RowBox[{"f", "[", 
              RowBox[{"a", "[", "6", "]"}], "]"}]}]}], 
           "\[RightAssociation]"}]}], ",", 
         RowBox[{"2", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{
             RowBox[{"a", "[", "7", "]"}], "\[Rule]", 
             RowBox[{"f", "[", 
              RowBox[{"a", "[", "7", "]"}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"a", "[", "8", "]"}], "\[Rule]", 
             RowBox[{"f", "[", 
              RowBox[{"a", "[", "8", "]"}], "]"}]}]}], 
           "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"2", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"1", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         RowBox[{"1", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{
             RowBox[{"a", "[", "9", "]"}], "\[Rule]", 
             RowBox[{"f", "[", 
              RowBox[{"a", "[", "9", "]"}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"a", "[", "10", "]"}], "\[Rule]", 
             RowBox[{"f", "[", 
              RowBox[{"a", "[", "10", "]"}], "]"}]}]}], 
           "\[RightAssociation]"}]}], ",", 
         RowBox[{"2", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{
             RowBox[{"a", "[", "11", "]"}], "\[Rule]", 
             RowBox[{"f", "[", 
              RowBox[{"a", "[", "11", "]"}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"a", "[", "12", "]"}], "\[Rule]", 
             RowBox[{"f", "[", 
              RowBox[{"a", "[", "12", "]"}], "]"}]}]}], 
           "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]}], ",", 
      RowBox[{"2", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         RowBox[{"1", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{
             RowBox[{"a", "[", "13", "]"}], "\[Rule]", 
             RowBox[{"f", "[", 
              RowBox[{"a", "[", "13", "]"}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"a", "[", "14", "]"}], "\[Rule]", 
             RowBox[{"f", "[", 
              RowBox[{"a", "[", "14", "]"}], "]"}]}]}], 
           "\[RightAssociation]"}]}], ",", 
         RowBox[{"2", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{
             RowBox[{"a", "[", "15", "]"}], "\[Rule]", 
             RowBox[{"f", "[", 
              RowBox[{"a", "[", "15", "]"}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"a", "[", "16", "]"}], "\[Rule]", 
             RowBox[{"f", "[", 
              RowBox[{"a", "[", "16", "]"}], "]"}]}]}], 
           "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"3", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"1", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         RowBox[{"1", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{
             RowBox[{"a", "[", "17", "]"}], "\[Rule]", 
             RowBox[{"f", "[", 
              RowBox[{"a", "[", "17", "]"}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"a", "[", "18", "]"}], "\[Rule]", 
             RowBox[{"f", "[", 
              RowBox[{"a", "[", "18", "]"}], "]"}]}]}], 
           "\[RightAssociation]"}]}], ",", 
         RowBox[{"2", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{
             RowBox[{"a", "[", "19", "]"}], "\[Rule]", 
             RowBox[{"f", "[", 
              RowBox[{"a", "[", "19", "]"}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"a", "[", "20", "]"}], "\[Rule]", 
             RowBox[{"f", "[", 
              RowBox[{"a", "[", "20", "]"}], "]"}]}]}], 
           "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]}], ",", 
      RowBox[{"2", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         RowBox[{"1", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{
             RowBox[{"a", "[", "21", "]"}], "\[Rule]", 
             RowBox[{"f", "[", 
              RowBox[{"a", "[", "21", "]"}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"a", "[", "22", "]"}], "\[Rule]", 
             RowBox[{"f", "[", 
              RowBox[{"a", "[", "22", "]"}], "]"}]}]}], 
           "\[RightAssociation]"}]}], ",", 
         RowBox[{"2", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{
             RowBox[{"a", "[", "23", "]"}], "\[Rule]", 
             RowBox[{"f", "[", 
              RowBox[{"a", "[", "23", "]"}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"a", "[", "24", "]"}], "\[Rule]", 
             RowBox[{"f", "[", 
              RowBox[{"a", "[", "24", "]"}], "]"}]}]}], 
           "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]}]}], 
     "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.8663210282047644`*^9, 3.8663210337024317`*^9}},
 CellLabel->"Out[65]=",
 CellID->21679737,ExpressionUUID->"08c2f952-7544-4e2f-981c-262c547d0da6"]
}, Open  ]],

Cell["Make a large nested dataset:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.866363553419126*^9, 3.8663635576503844`*^9}},
 CellID->58294237,ExpressionUUID->"bc2037df-bd60-44b1-8f75-b408a4df5159"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", 
  InterpretationBox[
   DynamicModuleBox[{Typeset`open = False}, 
    TemplateBox[{"Expression", 
      RowBox[{"AssociationThread", "[", 
        DynamicBox[
         FEPrivate`FrontEndResource["FEBitmaps", "IconizeEllipsis"]], "]"}], 
      GridBox[{{
         RowBox[{
           TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
           TagBox["1184", "IconizedItem"]}]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
       "Column", 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
      Dynamic[Typeset`open]},
     "IconizedObject"]],
   AssociationThread[Range[3] -> Map[AssociationThread[Range[2] -> #]& , 
      Partition[
       Map[AssociationThread[Range[2] -> #]& , 
        Partition[
         PeterBurbery`AssociationFunctions`AssociationPartition[
          AssociationMap[$CellContext`f, 
           Array[$CellContext`a, 24]], 2], 2]], 2]]],
   SelectWithContents->True,
   Selectable->False], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8663635427956343`*^9, 3.866363547370228*^9}},
 NumberMarks->False,
 CellLabel->"In[70]:=",
 CellID->16626472,ExpressionUUID->"f2c5ed36-f0ce-428b-83d8-560bd804661f"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvb9rJEm07yl24bGm2ltX6C8oKGPdRYZY94mH7PfQ3Yecu3BfwbIy5bXR
ILMsOW3IEc06MqadMYSgjQGJGhoxNIUE1xVckDmO9qwOOsTkj8jIjIqqiMrP
x2jUWZFR+VVVnU9FRGZq77/9X//5//yfdnZ2/sf/Iv/85//6f//v//Zv//X/
OdqV//yXf/0fp//9X//l5P/419m//Pd/+bf/7b/9z7Lx//1POzv/q7T//39+
AwAAAAAA2BD/8R//8QQAABDB7wAAAEP593//9/v7+z///POv8fH4+Ej2TR/I
Bhhz9pzR10X+3fQ3a+iBvmpP7+MReRFfxwfZyQ75oK+L/LvpyX7ogb1qo/1M
kZ3skA94pETwCNnJDvmAR0oEj5Cd7JAPeKRE8AjZyQ75gEdKBI+QneyQD3ik
RPAI2ckO+YBHSgSPkJ3skA94pETwCNnJDvmAR0oEj5Cd7JAPeKRE8AjZyQ75
gEdKBI+QneyQD3ikRPAI2ckO+YBHSgSPkJ3skA94pETwCNnJDvmAR0oEj5Cd
7JAPeKRE8AjZyQ75EOOR29vbzx9cXV3Jf1ddL6EZPEJ2sqfj7u7uN4fO9tLm
/J3FYuFvZvhbFscwj9zc3Ozv7+/UaGv/8PBw6xBbRqP7NwMul0t/M8PfMmaX
AcR45OLiQt7wid5Oa4PsZE/HwcHBZDI5+MDTUnQgDawA+qVjHe7t7W3Ba+Ey
wCNStPWX9unTp9PTUy3Ix8fH0+m0bZfDw0N59PCDFVTSof1LbZcG9rr7pWMd
ijQlY+CR9N1lAMM8Im9y+XRo8KRvqjVAdrKnQ0p95zBEDHJycqK/1d3d3RCP
GDp4WcWR5sIAj4gyVCIvLy+Bu0hdTTrrFdK/GESsZwYM8Yihrux1SAN2Caev
R9xKMrZ6QvZxZo+h0yOXl5dmEB3o4ZG+HtEifHZ2Fr7Lxj1ydXVlBpnP51Lh
R+URe5+PsJ6QfZzZFRk1XF9fa92Wgn93dxeyV6dH5FH5ZR4dHT0/P786v2c8
El7E9DfWq0iGe0RGDTc3N1qEpeA/PDyspH95VI5ZRlI6hhqbR2wd0Ebia3hr
JYXsZPcj+tjb29upIRs7bRIyr+U2wCP5eKRt7V42dtokpH+3wdg8Yuj3qFHV
E4Pso8qutX0ymYhDtW7L8EF/Cbu7uzqOaCPEI/XnwiN+j7jn91oFltL9+Z94
anJIndeep9Opu3avz9W5FtN33gyPpHtHrQeyk92PDDrq59bausbFxYVnXzzS
lxCPWNX14ymbIXVeBh31E2VtXWM+n3v2xSOBjLCeGGQfZ/YKeuKBDFI8bfBI
X/IZj7QhIxR5OhmkeNrgkUDGXE/IPs7sFfRyD/9VIXikL/msj3j2VW2tsH88
ku4dtR7ITvYQFovF5eXluYMuvuOR1ZKbR5bL5dXVlTvM0cV3POKCR8hOdj93
d3fuleYV8MhqyccjDw8P7pXmFfCICx4hO9k9PD8/2zXmR0dHjEdSk4lHXl5e
7Brz4+NjxiN+8AjZye7BU9hZH0lBJh7xFHbWR+rgEbKT3YPKYjKZ1B/S87Xw
yGrJxCMqi8Y7Per5WnjEBY+Qnewe9Pr9yvWG7ooJHlktmXhE76BYud7QXTHB
Iy54hOxk92B59/b2ZrOZFG27X6Wum8R75MDBbsDi3m3ec/cVPPKWxiN6/6ud
97ugnJ2dSec6DNn5uDdvvEcOHewGLO7d5j13XynaI4vFwhYZ7T5LtuXy8nI9
77TVQnay+xF97PwT99688R7Z6cLTAx55S3a+luij8kK49+aN90jn6+7poWiP
2HezRvwfqGwhO9k7EZOqOASr6nrvSr9GQzxy3oXnLx7iEauQveaRAuedlsul
isPtX6+mv7q6iuz/cxeeP19YtEfc76V1tvt7KdnHmT2SvusjfcEjw9j43x+J
pGiPbCVkJ3s68Ehf8EgIeCQ3yE72dOCRvuCREPBIbpCd7OnAI33BIyHgkdwg
O9nTUbkx16q6dfvEIwOo3DirlP7dPgOlMGCXAeARspMd8mE9HoHVgkfITnbI
BzxSIniE7GSHfMAjJYJHyE52yAc8UiJ4hOxkh3zAIyWCR8hOdsgHPFIieITs
ZId8wCMlgkfITnbIBzxSIniE7GSHfMAjJYJHyE52yAc8UiJ4hOxjzv74+PgE
OXF/fy+vi/y76QOBHsjnCI+QfdMHsgE0u1YtAIhBP0fUE7KPDc2+WCz+gpxg
PFIijEfITnbIhyfWRwrkifURspMdsgGPlAgeITvZIR/wSIngEbKTHfIBj5QI
HiE72SEf8EiJ4BGykx3yAY+UCB4hO9khH/BIieARspMd8gGPlAgeITvZIR/w
SIngEbKTHfIBj5QIHiE72SEf8EiJ4BGykx3yAY+UCB4hO9khH/BIieARspMd
8gGPlAgeITvZIR/wSIngEbKTHfIhxiO3t7efP7i6upL/rrpeQjN4hOxkT8fd
3d1vDp6Wi8Xi8vLy/J3r6+vn52dPY7dP2XHFB71Rhnnk5uZmf39/p0Zb+4eH
h1uH2DIa0f9yuRTlqfskxcvLi6ex26fsGHIkA3YZAB4hO9nTcXBwMJlMDj5o
bCPKODk5qRTA3d1d0YqnW2Vvb0+8k+zwN8AAj0jR1l/ap0+fTk9PtSYfHx9P
p9O2XQ4PD+XRww9WUEn79y/KkKOtvO4SQbTi6VYRaUrGwCPpu8sA8AjZyZ4O
KfX+YYgMWMQFWkOOjo5ECrPZTCSiWzwqUXT8stJD3jADPCLK0Ars/zLvInU1
6axXZ//iPhtAyfFLhT87O5MIusWjEkVd2euQBuwSDh4hO9nT0ekRGYxM3nGn
p2SjykWE4u8fjwhafqUOh++ycY+I8qbvuHNNslHlIon8/eOR3CA72UOQOn99
fa11++LiQsYRIXt1euT1fUhSXw2Rp9Cvpv7d8Yigv6heRTLcI1Lnb25utAjP
53MZR6yqf+mqPoCSp9A4/t3xSG6Qnex+RB829eQiGzttEuKRRmQvPBJIIo+0
rd3Lxk6bDB7vyF54pETITnY/Uqjlcz2ZTE5OTrRuHx0d2Wq4/8QqPNKXEI+4
5/cK+ouS0v35n3hKcUid156n06m7dm+r4f61GDwyNshOdj8y6KifW3t5eamf
94uLC8++gz0ym820f7+nxukRc4cfT9kMnHeqnyh7dXWlnc/nc8++gz1ydnam
/fs9hUdyg+xkH4aMUOTzLoMUT5thHhF36Clb/s5fx+qR9YxH2pARijydDFI8
bYb1L+7Qcwb8nb/hkfwgO9mHIY6Qj3zbVSHWZoBHdN5MVNJ5jeE4PVIh0fqI
Z1/V1sr7txOYOy8YxCO5QXayh+Beb67o4vvKPWLXJHZePPKKR95J6hH3enNF
F99X7hG7JrHz4pE3PJIfZCe7n7u7Ox16NLJaj/SSyCseeSeRRx4eHnTo0chq
PdJLIm94JD/ITnYPtlSx83G9ebrxSF+JvOKRd1J4xJYqdj6uN083HukrkTc8
kh9kJ7sHPel3p+n829WujwyQyCseeSeFR2z5vt5stesjAyTyhkfyg+xk96Cy
mEwm9Yf0fK2VeGSYRF7xyDspPKKyaLzTo56vtRKPDJPIGx7JD7KT3YNW+Mr1
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
hOxkh3zAIyWCR8hOdsgHPFIieITsZId8wCMlgkfITnbIBzxSIniE7GSHfMAj
JYJHyE52yAc8UiJ4hOxkh3zAIyWCR8hOdsgHPFIieITsZId8wCMlgkfITnbI
hxiP3N7efv7g6upK/rvqegnN4BGykz0dd3d3vzl0tpc25+8sFgt/S2lweXmp
ja+vr/19Gp3dbpxhHrm5udnf39+p0db+4eHh1iG2jEb3bwZcLpf+ltJAFKmN
JXVnt0ZnzwPaG3ikV/bn52f3wyv/TX14SRn2ul9cXEj8RIe0Ntbznj84OJhM
JgcfeFpKhZcGVgA90pF33Ww2qxTM3d3dNpvYs+/t7eX/wg3wiBRt/SV8+vTp
9PRUa+zx8fF0Om3b5fDwUB49/CD8uQIJ71/KtTSw19EjnZeXl7Ozs8rrLpE9
NrEDEMnK7yTksHu1N/BIeHapn/JprXx4RStrOMhE9H3dpbhJVdTsSQ9sDazN
I53DEDHIycmJvaM6PWK6kR/EC+IU28s/MNHvPwOTrIsBHhFlaEWVShu4i5TK
pLNeIf2LQcR6poNOj5hu5Acp8uIU26tzYKJuDT/+vu3xSGB2+6QfHR3ph1e+
3YV8eHMm/HV3DYJHwun0iHwPMYPoQM/vEWvgfoGREYq+OtKJZ4y8rR7Rcip1
NXyXjXvk6urKDDKfz6Vo+z1iDWRH2yjelFFPiEPxSGpCssuHWl4sEcfd3Z1t
tA+vbE9/mEkIf92tfI3WIzJqkC8MWoql4LvvBA+dHtG3lnw50frf6REdesi3
msp2OR7dUY6t7bm21SMavFfdC/eIjBrk277WVSn4Dw8PK+lfHpVjlpGU1v9O
j6grZfxS2W5zenJsnqfDI6kJzC5f/+rf9LQICIFVJTd6jUe0Ctm4bA2Hl5Tw
7KIPG3u6VL5XNBIyr+U28HtEjkQfrS+Xy5tTFeNZhcEjRohH2tbuZWOnTUL6
dxv4PSJHoo/W175FQ6oY/yoMHklNZHb/t8fMGZDd1JnuqNZD37GYjD3FoVqK
ZfigvwT/PNJrmEfqz9X2jtJH6+Nf0ZlrOk/n2+ER9/xeq8C6auDiX2vorPPa
83Q6ddfu9bk655H6zpv5PaKPir8q20Vnrun8/eORpOARPOJHqnT9+7+ta3jm
kV5X7RFdYa+MOOQATGr6Q5vatsYjVnX9eCphSJ2XKl3//m/rGv55pNV6RFfY
KyMOOQCTmv7gURseSU1Mdp2Uls/vyo9qPeCRmPe8ro7VlypcUnhERkP6X/GF
jYzkMGzWy7NGvx0eWc94pA1d2q4vVcT0H+IRGQ3pf8UXNjKSw7BZL88z4pHU
xGTXxQJ/JckZPBLznm8cHdTbrNwj6gL5DmNn0Om5W/bSbL1HKnSOPurEeKRx
dBDZf4hHNKCMklRkOx/nbumSPR7ZLIOz68e2c4Y8Z/BIr/O17BJURZck1u+R
2WwmR6KzWO5aPx4J36XX+Vp2/biiSxLr98jZ2Zkcic5iuWv9eCQHhmUXd2gZ
8U+PZw4eCVwfca80r7B+jxh2trDS+dLgESNwfcS90rzC+j1i2NnCinnE3z8e
Scqw7DovbTPVhYJHOrPb+bQ7H5egbnA84t4Opf4FRvf1rNbhEaOzztv5tFq3
NzsecW+HUl/f133laP3945GkDMiuyyKTyaTcGS0Fj3Rm9xT29a+P2ElijbdQ
0OUSz3cbPGJ01nlPYV//+oidJNZ4/xNdLrFV+Lb+8UhS+mbXz3LRyyIGHunM
rrKQEl1/SOv2Oj0ibzl9tK4Du57dc8M3PGJ01nmVReOdHrVur9MjMjhqy2jX
s7v3S2nsH48kpVd2k0ihF7BXwCOB91WrfG1wV0zW6ZFX5z5vboPAW/TgEaOz
zusdFCvXG7orJuv0iB1PpYHdX6t+iWK9fzySlPDsWyaRVzwSkN3ySomezWZS
h+1s2877kLyGeeTAwS5Ld+8233hXtx3nlqF6JJ3vTDxiBN7/Skv02dmZdG5n
24bchyTEI4cOdlm6e7d59+4rpoydj/Uau9+v/Nt5nxY8kprw+2vpi6jFpE7+
fyGoTmB2iWYx7fuwbSn0zvnh7/nGP/Zh9+aN98hOF5UeRCX188dELp1fb/CI
EVLnG//Yh92bN94jna97pQdRSf38MZFLyK0j8UhqQrLblcLhH/Yi6PudvBF/
Ic2WXu95MamKQ7AXWu9d6ddoiEcav5Z0fkURa9ghBQ6Qt9UjnVev1wmcd1ou
lyoOt3+9mt6/HhF4/y4/jX+RUKxhhxR48+E3PJKekOx2t9u+H/bMGTAeqbP1
45EY+q6PJGVbPTKAjf/9kTWDR1JDdrKnA4/0BY+kAI+khuxkTwce6QseSQEe
SQ3ZyZ4OPNIXPJICPJIaspM9HZUTq5I+VxvuAeARpXLiU3H9B+IeQ4gX+rY3
8AjZyQ75sB6PwGrBI2QnO+QDHikRPEJ2skM+4JESwSNkJzvkAx4pETxCdrJD
PuCREsEjZCc75AMeKRE8QnayQz7gkRLBI2QnO+QDHikRPEJ2skM+4JESwSNk
JzvkAx4pETxC9jFnf3x8fIKcuL+/l9dF/t30gUAP5HOER8i+6QPZAJpdqxYA
xKCfI+oJ2ceGZl8sFn9BTjAeKRHGI2QnO+TDE+sjBfLE+gjZyQ7ZgEdKBI+Q
neyQD3ikRPAI2ckO+YBHSgSPkJ3skA94pETwCNnJDvmAR0oEj5Cd7JAPeKRE
8AjZyQ75gEdKBI+QneyQD3ikRPAI2ckO+YBHSgSPkJ3skA94pETwCNnJDvmA
R0oEj5Cd7JAPeKRE8AjZyQ75gEdKBI+QneyQD3ikRPAI2ckO+RDjkdvb288f
XF1dyX9XXS+hGTxCdrKn4+7u7jeHzvbS5vydxWLR2fj5+fni4kIaX15e+vs0
QrrdLMM8cnNzs7+/v1Ojrf3Dw8OtQ2wZje7fDLhcLjsbv7y8zOdzdWVnt0ZI
z33bG3iE7GRPx8HBwWQyOfjA01IqvDSwAtgpHTHI7u6uNvb3bM++t7cn0hkS
Y40M8IgUbf09fPr06fT0VAvy8fHxdDpt2+Xw8FAePfwg/LkCCe9fyrU0sNe9
UzpiEImpjTuP3A5AJCu/k5DD7tXewCNkJ3s6pHp3GkEMcnJyopXB1ODZS0Yf
YgS3sd8jho50+gVYOwM8IspQicgX9cBdpFQmnfUK6V8MItYzA3Z6REYfOuYK
94ihbg0//r7t8QjZyZ6OTo+IFMwgOknl94gaRN0hAsIjgtbVs7Oz8F027hGR
ghlEJ6n8HrFZO+lZBIRHcoPsZA9Bivb19bWWYin4d3d3IXt1ekQelYJwdHT0
/Pz8+l7q/R6RDsU4ciT6Xzwi6C+hV90L94gU7ZubG62rUvAfHh5W0r88Kscs
IykdQ3V6RDoU48iR6H/xSG6Qnex+pGjbKMBFNnbaJGRey23Q6RF5RjWOgkfe
knmkbe1eNnbaJKR/t0GnR+QZ3Vk7PJIbZCe7H63tk8nk5ORES7EMH2wyyq3q
dUI8Un8uj0cqjNMj7vm9VoGlqH7+J55KHlLntefpdOqu3dtklH8tpu+8WadH
KuCR3CA72f3IEKB+uqyta1xcXHj2xSN9CfGIVV0/nkoYUudlCFA/99XWNebz
uWdfPDI2yE72YcgIRT7LMkjxtMEjfclnPNKGjFDk6WSQ4mmDR8YG2ck+DL3c
o/PaDTzSi3zWRzz7dtZwPDI2yE72EBaLxeXl5bmDLr7jkdWSm0eWy+XV1ZU7
zNHFdzzigkfITnY/d3d37pXmFfDIasnHIw8PD+6V5hXwiAseITvZPTw/P9tl
40dHR4xHUpOJR15eXuyy8ePjY8YjfvAI2cnuwVPYWR9JQSYe8RR21kfq4BGy
k92DymIymdQf0vO18MhqycQjKovGOz3q+Vp4xAWPkJ3sHvQOipXrDd0VEzyy
WjLxiN5BsXK9obtigkdc8AjZye5B73+1834XlNlsJnVYhyE7H7fbjffIgYPd
gMW927x795XLy0u3vR2JbZGDbHsiPGIE3v9q5/0uKGdnZ9K5DkN2Pm63G++R
Qwe7AYt7t3n37itXV1duezsS2+K/TSUeSQ3Zye5HKvPOP3HvzRvvkZ0uGm/A
1YbnePCIEVLnpTJXfrfuvXnjPdL5ujfegKsN//HgkdSQneydLBYLFYdgVV3/
dqH/bxGGeOS8C/euLPYHE9vwHM+2eqTz6vU6gfNOy+VSxeH2r1fT+/8WYeD9
u/y4d2WpXMJfx388eCQ1ZCd7OvqujyRlWz0ygI3//ZE1g0dSQ3aypwOP9AWP
pACPpIbsZE8HHukLHkkBHkkN2cmeDjzSFzySAjySGrKTPR2VG3Mlfa423APA
I0rlxlnF9R+IewwhXujb3sAjZCc75MN6PAKrBY+QneyQD3ikRPAI2ckO+YBH
SgSPkJ3skA94pETwCNnJDvmAR0oEj5Cd7JAPeKRE8AjZyQ75gEdKBI+QneyQ
D3ikRPAI2ckO+YBHSgSPkH3M2R8fH58gJ+QVub+/53UpC3m98AjZN30gG0Cz
S8n6HQDi0M8R9YTsY0Oz//z5cwkAcTAeIfuYs8tH4G8AiOOJ9RGyjzg7HgGI
B4+QfczZ8QhAPHiE7GPOjkcA4sEjZB9zdjwCEA8eIfuYs+MRgHjwCNnHnB2P
AMSDR8g+5ux4BCAePEL2MWfHIwDx4BGyjzk7HgGIB4+QfczZ8QhAPHiE7GPO
jkcA4sEjZB9zdjwCEA8eIfuYs+MRgHjwCNnHnD03j3z79u3Lly+bPgqAfuAR
so85e6dH5vP5+Qc/fvxobPD9+/fOD9qvX7+kh85meARKBI+QfczZ/R4RR3z9
+lV/FlmICEQHlTZS9kM8Ig7CI7Ct4BGyjzl7+LyWDijcIYluMUQBul1EoFtE
Q7pFHnJbqoysmesXPAIlgkfIPubs4R6RgUljhRcLuOMRaWNDGPGI7aLDGWvm
zoZJe9c49WeRBiFDHoBNgUfIPubsIR6pDDfqj1qRr8jCfbT+kOE+1DYekY2N
qzMAOYBHyD7m7OHjEZ2bqq+PuB5xRxaK1H8VUKNH6lNbbR7RObT6swPkAB4h
+5iz9zrv1112Nzo9ortUPCIbbUd3CR6PQIngEbKPOftqPRI+r+Uu2Yd4hHkt
yBk8QvYxZ/d7xF0W0WpfL+buwvrf7evsld1d+7jzWrKRdXYoDjxC9jFn93hE
J5Hc83UbRwQqCPcs3/p5v4rOZalBdHhipwGbR/Tnyo4AmYNHyD7m7LndFwWg
RPAI2cecHY8AxINHyD7m7HgEIB48QvYxZ8cjAPHgEbKPOTseAYgHj5B9zNnx
CEA8eITsY86ORwDiwSNkH3N2PAIQDx4h+5iz4xGAePAI2cecHY8AxINHyD7m
7HgEIB48QvYxZ8cjAPHgEbI/Pj4+jQ9JfX9/P87sAKtFPkd4ZOTZpZz+DgAw
FK0h1NIxZ//58+cSAGAojEfIvmSNAAAieGJ9ZPTZ8QgAxIBHyI5HACAGPEJ2
PAIAMeARsuMRAIgBj5AdjwBADHiE7HgEAGLAI2THIwAQAx4hOx4BgBjwCNnx
CADEgEfIjkcAIAY8QnY8AgAx4BGy4xEAiAGPkB2PAEAMeITsuXnk27dvX758
2fRRAEAoeITsnR6Zz+fnH/z48aOxwffv3zvfbL9+/ZIeOpvhEYCywCNk93tE
HPH161f9WWQhIhAdVNpI2Q/xiDgIjwBsH3iE7OHzWjqgcIckusUQBeh2EYFu
EQ3pFnnIbakysmauX/AIQFngEbKHe0QGJo0VXizgjkekjQ1hxCO2iw5nrJk7
GybtXePUn0UahAx5AGD94BGyh3ikMtyoP2pFviIL99H6Q4b7UNt4RDY2rs4A
wGbBI2QPH4/o3FR9fcT1iDuyUKT+q4AaPVKf2mrziM6h1Z8dADYLHiF7r/N+
3WV3o9MjukvFI7LRdnSX4PEIQFngEbKv1iPh81rukn2IR5jXAsgTPEJ2v0fc
ZRGt9vVi7i6s/92+zl7Z3bWPO68lG1lnBygIPEJ2j0d0Esk9X7dxRKCCcM/y
rZ/3q+hclhpEhyd2GrB5RH+u7AgA2YJHyJ7bfVEAoCzwCNnxCADEgEfIjkcA
IAY8QnY8AgAx4BGy4xEAiAGPkB2PAEAMeITseAQAYsAjZMcjABADHiE7HgGA
GPAI2fEIAMSAR8iORwAgBjxCdjwCADHgEc3++Pj4ND7u7+8lu/y76QMBgIKR
+olHtJb+DgAA/dH6iUcWi8Vf40Nf/T/++GPTB7IB5BuUxP/zzz83fSDwD/R1
Gef8QLkwHiE72SEfnj5m2t+gHJ5YHyE72SEb8EiJ4BGykx3yAY+UCB4hO9kh
H/BIieARspMd8gGPlAgeITvZIR/wSIngEbKTHfIBj5QIHiE72SEf8EiJ4BGy
kx3yAY+UCB4hO9khH/BIieARspMd8gGPlAgeITvZIR/wSIngEbKTHfIBj5QI
HiE72SEf8EiJ4BGykx3yAY+UCB4hO9khH/BIieARspMd8iHGI7e3t58/uLq6
kv+uul5CM3iE7GRPx93d3W8One2lzfk7i8Wis+eLiwttLD/7+zQ6u904wzxy
c3Ozv7+/U6Ot/cPDw61DbBmN7t8MuFwuO3uez+faWH7u7Nbo7HlAewOP9Mr+
/Px8fX2tH97Ly0v5b+rDS8qw113LV6JDWhvrec8fHBxMJpODDzwtpcJLAyuA
HumINdyWijxLm03s2ff29vJ/4QZ4RMqp/hI+ffp0enqqNfb4+Hg6nbbtcnh4
KI8efhD+XIGE9y/lWhrY6+iRjsR0WyryLB6b2AGIZOV3EnLYvdobeCQ8u9TP
3d3dyus4m83WcJCJ6Pu6S3GTeqXBkx7YGlibRzqHIWKQk5MT/a3aG6xtL5GF
tpF/ZS/xgvxrW/zDDf3+MzjLehjgEVGGSuTl5SVwFymVSWe9QvoXg4j1zIB+
j4gstI25Uv61LZ1jB3Vr+PH3bY9HArPbJ10qg34eraKWq5Lw1901CB4Jp9Mj
Mqo1g+hAz+8RGVPo6MMdC4s+VCXyLvU817Z6RMvp2dlZ+C4b98jV1ZUZROep
/B7RWTsZfbiuFH1odnGK/3jwSGrCPSIf4cqn2+SS/7RzI+Gvu9W30XpEXmKb
0pSC71+SMDo9Io/KL/Po6Ei94PeISaf+7PaQ5624rR7R4L3qXrhHpFbf3Nxo
XZWC37kkEdi/PCrHLCMp9YLfIyad+rPbQ/4hCR5JTXj2+mqIbPF/e8ycXuMR
rUKmzjUcXlLCs4s+dBRQQTZ22iRkXstt4PeIPVp/yN6KIpS2J8IjRohH2tbu
ZWOnTUL6dxv4PWKP1h8SDelDIhTPc+GR1ERm1xdRSs1qj2o9DMiu359H5RGt
3pPJRNcjBBk+6C9hd3fXf65FiEfqzzXAI4JObXlMsTUecc/vtRorpfvzP/FU
8pA6rz1Pp1N37V6fq3Mtpu+82WCPvH1M6/nLPh5JTUx2K6qBsxy5gUdCssuL
W58ssnmki4sLz76JPNIoLz2Jy3NW2NZ4xOqqH08lDKnzMuioTxbZPNJ8Pvfs
m8gjjfLSk7j8Z4XhkdQMzi7lRZee/YubOYNHYt7zIa/+aj0ibzl9tP6kYjqd
fBuDR9YzHmlDRig7XUvbq/WIndhcf1IxnU6+4ZHN0je7fBJns5mdvFSuRF7x
SNx7vvP7/+uqPSLYlJpeDFJ5N47EIxU6Rx91YjwS8v1/tR55+zi3eed9dUaL
/NnZmRrNNOrvH48kpW92d+AsH+pCz9RS8Eiv87UuLy/PHTq//78m8Mjz87Od
6uCy986O9yx0PGL0Ol/r6urKHeaEfP9fuUdeXl7sYhOX/Xd2uk57xiOpGTAe
EaQ+2MVfnjNkMgePBK6P1K8fD/n+/5rAI4orNflBl+fUI2NYZ6+QyCON148H
fv9fuUcUV2ryg542ph5hnX2zxGS/uLjQV5/ztYojMLt8/7drzGX4ufHxSBti
Ft3Rc8oHHjE667x8/7drzI+Pjzc+HmlDzKI7+k9FxiOpicyukwyTyWS1R7Ue
8Ehndk9h38j6iH9HUZu/DR5ROuu8p7BvZH3Ev6OorbMZHklKZHYZiZRbV/FI
Z3aVReP3BF3dzsEjdh6X/yRkPGJ01nmVReOdHnV1OweP2Hlc/pOQ3/BIegKz
t31CZ7PZzvsqSYJDSw4eCbyvWuV6Q3fFZOMesduHdg6K8YjRWed1UbtyvaG7
YrJxj4g7dObNc1tjt388kpSQ7PrptpsgGXbz1ULP/sUjndkt797ennxncO/P
qS99vEcOHOwGLO7d5t0lD7tBjXuyhx5G518xwCNG4P2vdMro7OxMOreTbLV6
x3vk0MFuwOLebd5d8nAvmZGHbO1Gfg65yzEeSU1Idvdm3bbYGn5zjGwJfN0X
i4XVLjvp1LYUerpa+Hteh5wu7r154z2y00XjDbgMMU7gS4BHjJA6L/qo/Krd
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
kL16eURNLXaQXdo8Ioehg2I5hsBujW31iH9up5HwOr9cLm9ubrSuSiWXmr/a
/oXpdKp2kF3aPCKHobqUYwjs1gWPpCY8e/27n2zxzz9kTq/xiFYhU+caDi8p
4dlFH+6ahSEbO20S7hE1tThCl87b3lfaTIwT0md9XzyihNT5trV72dhpk3CP
6BhEJ+U8HtFmnhWfzmfBI0mJzK6vu5Sa1R7VehiQ3UpcuqNaD33HYlK6xaFa
io+OjvSXoGXfs2+gR2yUoW8kj0fUaAMGI69b5BH3VCWbC3LXCzpXDULqvJVu
d+1en6tzLSbQIzbKEGdprjaPqNGGDUbe8Eh6YrLb5z1wliM38EhIdnlx6/OW
l5eX+nvwl/RAj+iZV6In/a/HI7Y95IzfClvjEXe52YOnEobUeRl01M99vbq6
0s79JT3QI3rmlehJ/+vxiG0PPOO3Ah5JzeDsUl50Qlu+pqY4sDWAR2Le8yGv
fohHVEnu0KbNI7a9fsbvTsA829Z4ZD3jkTZ0OUMGKZ42If2rktyhTZtHbHv9
jN+dsHk2PJKavtnlkzibzezkpXIl8opH4t7zWsz9V4V0ekTcUV837/SIekfG
L/V5Ns8pH1vjkQqdo486MR7RYu6/KqSzf3FHfd280yPqHRm/1OfZ/JcN4pHU
9M3ufhOQz2+hZ2opeKTX+VoycDh30KWKSI+oAiqddHqkroPr6+vOLzZ4xOh1
vpYMHNxhji5VRHpEFVDppNMj9Yw3Nzf6kH98hEdSM2A8IsgHX79Gyr9SXpIe
YTrwSOD6SOM8khLjEf1l1gcRnR5p7FOVJHZrezo8YgSujzTOIykxHlEv1AcR
nR5p7FOVJHbzHA8eSU1MdrsijPO1iiMwu8076fBzteMR7WEymZz/Ezu52s4Q
U9H4PWLX+LQ9HR4xwueddt7XwVc7HtEeptNpZUFHxhQ2uNAtKhq/R2yFyHM8
eCQ1kdn1Iz/sfP6Ng0c6s3suLY9fH2n7rltHO7HrlRpPEsMj4bt0euRz+6Xl
8esj4a+7diJS0/82niSGR3IgMrvNS6/2qNYDHunMrrJo/J6g51rEeOS8hbbx
iP9J9SE7ebjt6TxHmwOZeERl0Xjdn56vFeORzy20jUf8T6oP2cnDnmf0NIhs
j0cCs7ddJqA31tvd3U1waMnBI4H3Vatcb+iumESuszfimb+y61Yqq3KecZPb
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
eI6A7K3RcvaSuX8caX+Aerhnnp3sZIdiwCM1gkfITnYoBzxSI3iE7GSHcsAj
NYJHyE52KAc8UiN4hOxkh3LAIzWCR8hOdigHPFIjeITsZIdywCM1gkfITnYo
BzxSI3iE7GSHcsAjNYJHyE52KAc8UiN4hOxkh3LAIzWCR8hOdigHPFIjeITs
ZIdywCM1gkfITnYoBzxSI3iE7GSHcsAjNYJHyE52KIcUj3z58uX9I5eXl/Lf
pftL6AePkJ3s+bi+vv7DobfNxcXFu2E6jTebTaBx7yHcE5DNF8+4LPM8sl6v
Dw4O9jyG2t/e3n5xSO1GZ+1fTPd+mE7j7XYbaDx0CPccZA+jpz21vTHDIz9+
/Li6utL3rXwE5L+531pZmdefnJ+f+5/x6iB7bo+8evXq8PDw1SNDbfwO0Og0
FhcEGve+Lnb0/f398l+4GR6RTlvjv3z58u3bt9q1npycHB0dDW3y+vVrefb1
I/HHiiRm//J44KXsNJaOPdDY944dQhHJDrVJaW9M9Yj0IS9evOikOD09fYI3
WCam9ifyQZaeofczXh1kfwKPDJUhbhv5fcq/MfWIeSS+HjF6d1gaMzwiylCJ
/Pz5M3IT6SqzjnrF7F89Iv/G1CPmkUn1iNG7zwXbT/LImzdvNIu9561XqVcl
8f2J24u21pe2nD2FeI9E9vDmkRkn81w9IgaRX8jZ2Vn8JuV4JLK7No/MO5/S
PCKlcedzYXIpf+i1l/j+RD6DnULsCU4vK2SP94i8vW04V6ry6+vrmK3wyFRm
eCQ8ttNLvEe22+16vdZ+dbVa3d7eLrX/Zj3y6/fkiP+IBhz9vJTJpO/k+kk0
dT7B6WWF7DHZRR/y9WnPQx4ctQkemUo5Hhmau5cHR22CR2agAeXjtuw76mmY
kT3ls1wUZI+vxQ4PD8Wh2hUfHx/rL+HFixfhdSZ4ZCoxHnHX9wr6C/EnGgI9
eUw/r3s+Ojpy5+71WKNzMXhkKvbGjqz0S4O+lOxh5I3tj9leXFzo7+H8/Dyw
7bx5dtlkSE/+PLucSeRH79l4xNwRJtATxvTzUnT4a18vLy9156vVKrDtvHl2
2WRIT/48u5xJ5CDbQ/EekTewTr/KV7Ucb6ongL6U7POIeefHe8Tn9PTUt8nQ
ul9/4tLn2XjkaeqRIaRCkcNJkRJoE+8Rn7OzM98mQ+t+Dw4OYoKU6RF5N8qb
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
AAAAAAAAAAAAVMX/AyCjJCU=
    "], {{0, 856.}, {268., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->144.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{268., 856.},
  PlotRange->{{0, 268.}, {0, 856.}}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.8663210942327576`*^9},
 CellLabel->"Out[70]=",
 CellID->204835930,ExpressionUUID->"55ff1dbc-db66-4b18-bb4b-98d228a6d00a"]
}, Open  ]],

Cell["Find all the properties for a linear model fit:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8663708351991806`*^9, 3.866370847832612*^9}},
 CellID->16655976,ExpressionUUID->"96c460b8-24bb-4de9-a239-1bf283e73ec6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"k", "+", 
     RowBox[{"RandomInteger", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "10"}], ",", "10"}], "}"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "5", ",", "100", ",", "5"}], "}"}]}], "]"}]}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.866370234675248*^9, 3.8663703370458355`*^9}},
 CellLabel->"In[133]:=",
 CellID->6749407,ExpressionUUID->"cf2fa950-3c88-4d53-8618-ad967df704f4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "9", ",", "20", ",", "28", ",", "35", ",", "23", ",", "45", ",", 
   "43", ",", "42", ",", "45", ",", "55", ",", "52", ",", "69", ",", "76", 
   ",", "73", ",", "79", ",", "85", ",", "92", ",", "96", ",", "95"}], 
  "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.8663702427894197`*^9, 3.866370288851203*^9}, {
   3.8663703268327627`*^9, 3.866370337504443*^9}, 3.866370866080041*^9},
 CellLabel->"Out[133]=",
 CellID->342446595,ExpressionUUID->"6003d014-46aa-4bdc-acce-91dbc8427492"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"linearModelFit", "=", 
  RowBox[{"LinearModelFit", "[", 
   RowBox[{"data", ",", "x", ",", "x"}], "]"}]}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8663702548047943`*^9, 3.86637027298007*^9}},
 CellLabel->"In[134]:=",
 CellID->3657101,ExpressionUUID->"51ed3a79-27ed-4aa3-b708-45ba1dd0960a"],

Cell[BoxData[
 TagBox[
  RowBox[{"FittedModel", "[", 
   TagBox[
    PanelBox[
     TagBox[
      RowBox[{"2.7684210526315707`", "\[VeryThinSpace]", "+", 
       RowBox[{"4.803007518796993`", " ", "x"}]}],
      Short[#, 2]& ],
     FrameMargins->5],
    Editable -> False], "]"}],
  InterpretTemplate[
  FittedModel[{
    "Linear", {2.7684210526315707`, 
     4.803007518796993}, {{$CellContext`x}, {1, $CellContext`x}}, {0, 0}}, {{
    1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 
    1., 1.}}, {2, 9, 20, 28, 35, 23, 45, 43, 42, 45, 55, 52, 69, 76, 73, 79, 
    85, 92, 96, 95}, CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7LHTDA6ofA40vgAaXwSNL4HGl0HjK6DxldD4
Kmh8NTS+BhpfC42vg8bXQ+MboPEN0fhGaHxjNL6JAwB46SHv
    "], 
    Function[Null, 
     Internal`LocalizedBlock[{$CellContext`x}, #], {HoldAll}]]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->True]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.8663702645279427`*^9, 3.866370290485218*^9}, {
   3.866370329251612*^9, 3.866370338488596*^9}, 3.866370868008671*^9},
 CellLabel->"Out[134]=",
 CellID->68989064,ExpressionUUID->"bc055242-57f6-405a-bb4b-e34240f2cec7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PropertiesSummary", "[", "linearModelFit", "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8663708692226048`*^9, 3.8663708714543867`*^9}},
 CellLabel->"In[135]:=",
 CellID->249156849,ExpressionUUID->"c13f8b1c-4aa6-4e27-95ee-5ddf55a6e808"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"AdjustedRSquared\"\>", "\[Rule]", "0.9662699414327461`"}], 
   ",", 
   RowBox[{"\<\"AIC\"\>", "\[Rule]", "127.4964060247256`"}], ",", 
   RowBox[{"\<\"AICc\"\>", "\[Rule]", "128.99640602472562`"}], ",", 
   RowBox[{"\<\"ANOVATable\"\>", "\[Rule]", 
    StyleBox[
     TagBox[GridBox[{
        {"\<\"\"\>", "\<\"DF\"\>", "\<\"SS\"\>", "\<\"MS\"\>", \
"\<\"F\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
        {"x", "1", "15340.806015037593`", "15340.806015037593`", 
         "545.2957903739248`", "6.537881292144451`*^-15"},
        {"\<\"Error\"\>", "18", "506.39398496240625`", "28.132999164578123`", 
         "", ""},
        {"\<\"Total\"\>", "19", "15847.199999999999`", "", "", ""}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
       GridBoxDividers->{
        "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
         "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       GridBoxSpacings->{
        "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
      "Grid"], "DialogStyle",
     StripOnInput->False]}], ",", 
   RowBox[{"\<\"ANOVATableDegreesOfFreedom\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "18", ",", "19"}], "}"}]}], ",", 
   RowBox[{"\<\"ANOVATableEntries\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "1", ",", "15340.806015037593`", ",", "15340.806015037593`", ",", 
        "545.2957903739248`", ",", "6.537881292144451`*^-15"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"18", ",", "506.39398496240625`", ",", "28.132999164578123`"}],
        "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"19", ",", "15847.199999999999`"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"ANOVATableFStatistics\"\>", "\[Rule]", 
    RowBox[{"{", "545.2957903739248`", "}"}]}], ",", 
   RowBox[{"\<\"ANOVATableMeanSquares\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"15340.806015037593`", ",", "28.132999164578123`"}], "}"}]}], 
   ",", 
   RowBox[{"\<\"ANOVATablePValues\"\>", "\[Rule]", 
    RowBox[{"{", "6.537881292144451`*^-15", "}"}]}], ",", 
   RowBox[{"\<\"ANOVATableSumsOfSquares\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "15340.806015037593`", ",", "506.39398496240625`", ",", 
      "15847.199999999999`"}], "}"}]}], ",", 
   RowBox[{"\<\"BasisFunctions\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "x"}], "}"}]}], ",", 
   RowBox[{"\<\"BetaDifferences\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.5612795300365483`"}], ",", "0.48026077634150227`"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.29538247693008474`"}], ",", "0.24552375386604625`"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.21865743807904867`", ",", 
        RowBox[{"-", "0.1754015579776877`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.4263705122339221`", ",", 
        RowBox[{"-", "0.3270848480197404`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.5309887391168445`", ",", 
        RowBox[{"-", "0.3844435320384019`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.4859686387429544`"}], ",", "0.3254249355925321`"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.4180033643711254`", ",", 
        RowBox[{"-", "0.2503662198249331`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.06805062507297606`", ",", 
        RowBox[{"-", "0.03425161960999641`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.12476421162079883`"}], ",", "0.045752113004629155`"}],
        "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.14457967872083888`"}], ",", "0.022492746088454446`"}],
        "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.010523289653272927`"}], ",", 
        RowBox[{"-", "0.002251072321405644`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.0998011383048691`"}], ",", 
        RowBox[{"-", "0.10247422811006354`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.016998761930334148`", ",", "0.07272524797915791`"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.013885290963301997`"}], ",", "0.1663339631192383`"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.016434687438677598`", ",", 
        RowBox[{"-", "0.06328078785399277`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.009909186707730716`", ",", 
        RowBox[{"-", "0.02664775133622452`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.013598092757016757`"}], ",", 
        "0.030251663583635048`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.08738417558586342`"}], ",", "0.17254747587765928`"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.07830547256410367`"}], ",", "0.14237999195574375`"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.18883590049683766`", ",", 
        RowBox[{"-", "0.32315618625126974`"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"BestFit\"\>", "\[Rule]", 
    RowBox[{"2.7684210526315707`", "\[VeryThinSpace]", "+", 
     RowBox[{"4.803007518796993`", " ", "x"}]}]}], ",", 
   RowBox[{"\<\"BestFitParameters\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2.7684210526315707`", ",", "4.803007518796993`"}], "}"}]}], ",", 
   RowBox[{"\<\"BIC\"\>", "\[Rule]", "130.48360284538757`"}], ",", 
   RowBox[{"\<\"CatcherMatrix\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "0.20000000000000012`", ",", "0.18421052631578952`", ",", 
        "0.168421052631579`", ",", "0.15263157894736842`", ",", 
        "0.13684210526315796`", ",", "0.12105263157894738`", ",", 
        "0.10526315789473686`", ",", "0.08947368421052636`", ",", 
        "0.07368421052631582`", ",", "0.05789473684210528`", ",", 
        "0.042105263157894736`", ",", "0.02631578947368422`", ",", 
        "0.010526315789473707`", ",", 
        RowBox[{"-", "0.005263157894736863`"}], ",", 
        RowBox[{"-", "0.021052631578947382`"}], ",", 
        RowBox[{"-", "0.0368421052631579`"}], ",", 
        RowBox[{"-", "0.052631578947368404`"}], ",", 
        RowBox[{"-", "0.06842105263157892`"}], ",", 
        RowBox[{"-", "0.0842105263157895`"}], ",", 
        RowBox[{"-", "0.10000000000000003`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.014285714285714289`"}], ",", 
        RowBox[{"-", "0.012781954887218047`"}], ",", 
        RowBox[{"-", "0.011278195488721809`"}], ",", 
        RowBox[{"-", "0.009774436090225566`"}], ",", 
        RowBox[{"-", "0.008270676691729328`"}], ",", 
        RowBox[{"-", "0.006766917293233084`"}], ",", 
        RowBox[{"-", "0.005263157894736843`"}], ",", 
        RowBox[{"-", "0.003759398496240603`"}], ",", 
        RowBox[{"-", "0.0022556390977443628`"}], ",", 
        RowBox[{"-", "0.0007518796992481215`"}], ",", 
        "0.0007518796992481218`", ",", "0.0022556390977443615`", ",", 
        "0.0037593984962406017`", ",", "0.005263157894736846`", ",", 
        "0.006766917293233085`", ",", "0.008270676691729324`", ",", 
        "0.009774436090225564`", ",", "0.011278195488721806`", ",", 
        "0.012781954887218049`", ",", "0.014285714285714292`"}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"\<\"CoefficientOfVariation\"\>", "\[Rule]", 
    "0.09970028146149454`"}], ",", 
   RowBox[{"\<\"CookDistances\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.15451789603718966`", ",", "0.04535553653331294`", ",", 
      "0.025444460699667076`", ",", "0.09304281441085413`", ",", 
      "0.14004131139998913`", ",", "0.1246709880797577`", ",", 
      "0.10388761793262614`", ",", "0.0038983760353445925`", ",", 
      "0.01690255347940702`", ",", "0.033381394359005244`", ",", 
      "0.00035921164364212654`", ",", "0.07478894881806618`", ",", 
      "0.01716188382562117`", ",", "0.05026685497678319`", ",", 
      "0.005561446971968879`", ",", "0.0007885014587139835`", ",", 
      "0.0008651397522280482`", ",", "0.02463760544419182`", ",", 
      "0.015527947563437053`", ",", "0.07296576834303156`"}], "}"}]}], ",", 
   RowBox[{"\<\"CorrelationMatrix\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1.`", ",", 
        RowBox[{"-", "0.876523064686166`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.876523064686166`"}], ",", "0.9999999999999998`"}], 
       "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"CovarianceMatrix\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"6.070805082882649`", ",", 
        RowBox[{"-", "0.4442052499670231`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.4442052499670231`"}], ",", "0.04230526190162126`"}], 
       "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"CovarianceRatios\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "1.17731527671185`", ",", "1.2622311245486266`", ",", 
      "1.2487859558279155`", ",", "1.0687627853348665`", ",", 
      "0.9010137441987558`", ",", "0.8636845663767758`", ",", 
      "0.8548981121645901`", ",", "1.1756097369536578`", ",", 
      "1.1067620136643588`", ",", "1.0212632615406376`", ",", 
      "1.1788042803161043`", ",", "0.8610145051286457`", ",", 
      "1.1210093590532166`", ",", "1.027375953442849`", ",", 
      "1.2020312469470995`", ",", "1.2374055119863658`", ",", 
      "1.2627949534010983`", ",", "1.25025281571985`", ",", 
      "1.308231447937864`", ",", "1.2806548694323336`"}], "}"}]}], ",", 
   RowBox[{"\<\"Data\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "2", ",", "9", ",", "20", ",", "28", ",", "35", ",", "23", ",", "45", 
      ",", "43", ",", "42", ",", "45", ",", "55", ",", "52", ",", "69", ",", 
      "76", ",", "73", ",", "79", ",", "85", ",", "92", ",", "96", ",", 
      "95"}], "}"}]}], ",", 
   RowBox[{"\<\"DesignMatrix\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1.`", ",", "1.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.`", ",", "2.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.`", ",", "3.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.`", ",", "4.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.`", ",", "5.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.`", ",", "6.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.`", ",", "7.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.`", ",", "8.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.`", ",", "9.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.`", ",", "10.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.`", ",", "11.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.`", ",", "12.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.`", ",", "13.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.`", ",", "14.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.`", ",", "15.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.`", ",", "16.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.`", ",", "17.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.`", ",", "18.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.`", ",", "19.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.`", ",", "20.`"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"DurbinWatsonD\"\>", "\[Rule]", "2.101030771267028`"}], ",", 
   RowBox[{"\<\"EigenstructureTable\"\>", "\[Rule]", 
    StyleBox[
     TagBox[GridBox[{
        {"\<\"Eigenvalue\"\>", "\<\"Index\"\>", "x"},
        {"0.9999999999999998`", "1.`", "1.`"}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
       GridBoxDividers->{
        "Columns" -> {{False}}, "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       GridBoxSpacings->{
        "Columns" -> {{Automatic}}, "RowsIndexed" -> {2 -> 0.75}}],
      "Grid"], "DialogStyle",
     StripOnInput->False]}], ",", 
   RowBox[{"\<\"EigenstructureTableEigenvalues\"\>", "\[Rule]", 
    RowBox[{"{", "0.9999999999999998`", "}"}]}], ",", 
   RowBox[{"\<\"EigenstructureTableEntries\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"0.9999999999999998`", ",", "1.`", ",", "1.`"}], "}"}], "}"}]}],
    ",", 
   RowBox[{"\<\"EigenstructureTableIndexes\"\>", "\[Rule]", 
    RowBox[{"{", "1.`", "}"}]}], ",", 
   RowBox[{"\<\"EigenstructureTablePartitions\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", "1.`", "}"}], "}"}]}], ",", 
   RowBox[{"\<\"EstimatedVariance\"\>", "\[Rule]", "28.132999164578123`"}], 
   ",", 
   RowBox[{"\<\"FitDifferences\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.5618068007305915`"}], ",", 
      RowBox[{"-", "0.2966885729117599`"}], ",", "0.2212502147311254`", ",", 
      "0.437240664214599`", ",", "0.5570019707729953`", ",", 
      RowBox[{"-", "0.5289507104736441`"}], ",", "0.4825178523366625`", ",", 
      "0.08610723650273461`", ",", 
      RowBox[{"-", "0.1817331162578633`"}], ",", 
      RowBox[{"-", "0.26037236021582116`"}], ",", 
      RowBox[{"-", "0.026058046048977074`"}], ",", 
      RowBox[{"-", "0.40704045316282406`"}], ",", "0.18282843844364505`", ",",
       "0.3205668348991373`", ",", 
      RowBox[{"-", "0.10285756877774287`"}], ",", 
      RowBox[{"-", "0.03860866102297473`"}], ",", "0.040439835593077955`", 
      ",", "0.2176500968942482`", ",", "0.17205063037438031`", ",", 
      RowBox[{"-", "0.37802658904842157`"}]}], "}"}]}], ",", 
   RowBox[{"\<\"FitResiduals\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "5.571428571428564`"}], ",", 
      RowBox[{"-", "3.374436090225556`"}], ",", "2.82255639097745`", ",", 
      "6.019548872180458`", ",", "8.216541353383466`", ",", 
      RowBox[{"-", "8.58646616541353`"}], ",", "8.610526315789478`", ",", 
      "1.8075187969924826`", ",", 
      RowBox[{"-", "3.995488721804513`"}], ",", 
      RowBox[{"-", "5.7984962406015015`"}], ",", 
      RowBox[{"-", "0.6015037593984971`"}], ",", 
      RowBox[{"-", "8.404511278195493`"}], ",", "3.792481203007526`", ",", 
      "5.989473684210537`", ",", 
      RowBox[{"-", "1.8135338345864653`"}], ",", 
      RowBox[{"-", "0.6165413533834538`"}], ",", "0.5804511278195577`", ",", 
      "2.777443609022555`", ",", "1.9744360902255664`", ",", 
      RowBox[{"-", "3.828571428571422`"}]}], "}"}]}], ",", 
   RowBox[{"\<\"Function\"\>", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2.7684210526315707`", "\[VeryThinSpace]", "+", 
       RowBox[{"4.803007518796993`", " ", "#1"}]}], "&"}], ")"}]}], ",", 
   RowBox[{"\<\"FVarianceRatios\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "1.202424957499661`", ",", "1.2248424223027432`", ",", 
      "1.2012465727852295`", ",", "1.098018303037061`", ",", 
      "0.9980647440940118`", ",", "0.9691481509112245`", ",", 
      "0.9579599360342451`", ",", "1.117966404242042`", ",", 
      "1.0812847498347766`", ",", "1.0370340105670983`", ",", 
      "1.1141534188400268`", ",", "0.9537140691381459`", ",", 
      "1.0916961654318145`", ",", "1.0501585329718937`", ",", 
      "1.143327029056754`", ",", "1.1696314298021135`", ",", 
      "1.1935354883085627`", ",", "1.2019518751117377`", ",", 
      "1.2469615710788429`", ",", "1.2540869388443765`"}], "}"}]}], ",", 
   RowBox[{"\<\"HatDiagonal\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.18571428571428583`", ",", "0.15864661654135342`", ",", 
      "0.1345864661654136`", ",", "0.11353383458646615`", ",", 
      "0.09548872180451132`", ",", "0.08045112781954888`", ",", 
      "0.06842105263157897`", ",", "0.059398496240601534`", ",", 
      "0.05338345864661656`", ",", "0.05037593984962406`", ",", 
      "0.050375939849624074`", ",", "0.05338345864661656`", ",", 
      "0.059398496240601534`", ",", "0.068421052631579`", ",", 
      "0.0804511278195489`", ",", "0.09548872180451129`", ",", 
      "0.1135338345864662`", ",", "0.1345864661654136`", ",", 
      "0.15864661654135342`", ",", "0.18571428571428583`"}], "}"}]}], ",", 
   RowBox[{"\<\"MeanPredictionBands\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"2.7684210526315707`", "\[VeryThinSpace]", "+", 
       RowBox[{"4.803007518796993`", " ", "x"}], "-", 
       RowBox[{"2.100922040241038`", " ", 
        SqrtBox[
         RowBox[{"6.070805082882649`", "\[VeryThinSpace]", "-", 
          RowBox[{"0.8884104999340462`", " ", "x"}], "+", 
          RowBox[{"0.04230526190162126`", " ", 
           SuperscriptBox["x", "2"]}]}]]}]}], ",", 
      RowBox[{"2.7684210526315707`", "\[VeryThinSpace]", "+", 
       RowBox[{"4.803007518796993`", " ", "x"}], "+", 
       RowBox[{"2.100922040241038`", " ", 
        SqrtBox[
         RowBox[{"6.070805082882649`", "\[VeryThinSpace]", "-", 
          RowBox[{"0.8884104999340462`", " ", "x"}], "+", 
          RowBox[{"0.04230526190162126`", " ", 
           SuperscriptBox["x", "2"]}]}]]}]}]}], "}"}]}], ",", 
   RowBox[{"\<\"MeanPredictionConfidenceIntervals\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2.7692245182537123`", ",", "12.373632624603417`"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"7.935965352420259`", ",", "16.812906828030854`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"13.08937054774098`", ",", "21.26551667030412`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"18.225704750180242`", ",", "25.735197505458842`"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"23.340006961401237`", ",", "30.22691033183183`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"28.425760738072047`", ",", "34.747171592755016`"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"33.47464637707259`", ",", "39.304300991348455`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"38.47663183228658`", ",", "43.908330573728456`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"43.420820292578945`", ",", "48.57015715103008`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"48.29740500307065`", ",", "53.29958747813235`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"53.100412521867646`", ",", "58.10259499692935`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"57.829842848969925`", ",", "62.97917970742106`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"62.491669426271535`", ",", "67.9233681677134`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"67.09569900865152`", ",", "72.9253536229274`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"71.65282840724498`", ",", "77.97423926192795`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"76.17308966816816`", ",", "83.05999303859875`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"80.66480249454114`", ",", "88.17429524981975`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"85.13448332969587`", ",", "93.31062945225902`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"89.58709317196913`", ",", "98.46403464757974`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"94.02636737539657`", ",", "103.63077548174627`"}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"\<\"MeanPredictionConfidenceIntervalTable\"\>", "\[Rule]", 
    StyleBox[
     TagBox[GridBox[{
        {"\<\"Observed\"\>", "\<\"Predicted\"\>", "\<\"Standard Error\"\>", "\
\<\"Confidence Interval\"\>"},
        {"2", "7.571428571428564`", "2.285760233456305`", 
         RowBox[{"{", 
          RowBox[{"2.7692245182537123`", ",", "12.373632624603417`"}], "}"}]},
        {"9", "12.374436090225556`", "2.1126299085786515`", 
         RowBox[{"{", 
          RowBox[{"7.935965352420259`", ",", "16.812906828030854`"}], "}"}]},
        {"20", "17.17744360902255`", "1.945847100929336`", 
         RowBox[{"{", 
          RowBox[{"13.08937054774098`", ",", "21.26551667030412`"}], "}"}]},
        {"28", "21.980451127819542`", "1.7871897698824277`", 
         RowBox[{"{", 
          RowBox[{"18.225704750180242`", ",", "25.735197505458842`"}], "}"}]},
        {"35", "26.783458646616534`", "1.639019258810875`", 
         RowBox[{"{", 
          RowBox[{"23.340006961401237`", ",", "30.22691033183183`"}], "}"}]},
        {"23", "31.58646616541353`", "1.5044372741117316`", 
         RowBox[{"{", 
          RowBox[{"28.425760738072047`", ",", "34.747171592755016`"}], "}"}]},
        {"45", "36.38947368421052`", "1.38740384046022`", 
         RowBox[{"{", 
          RowBox[{"33.47464637707259`", ",", "39.304300991348455`"}], "}"}]},
        {"43", "41.19248120300752`", "1.2926940260997728`", 
         RowBox[{"{", 
          RowBox[{"38.47663183228658`", ",", "43.908330573728456`"}], "}"}]},
        {"42", "45.99548872180451`", "1.2254945114147004`", 
         RowBox[{"{", 
          RowBox[{"43.420820292578945`", ",", "48.57015715103008`"}], "}"}]},
        {"45", "50.7984962406015`", "1.1904731301899734`", 
         RowBox[{"{", 
          RowBox[{"48.29740500307065`", ",", "53.29958747813235`"}], "}"}]},
        {"55", "55.6015037593985`", "1.1904731301899736`", 
         RowBox[{"{", 
          RowBox[{"53.100412521867646`", ",", "58.10259499692935`"}], "}"}]},
        {"52", "60.40451127819549`", "1.2254945114147007`", 
         RowBox[{"{", 
          RowBox[{"57.829842848969925`", ",", "62.97917970742106`"}], "}"}]},
        {"69", "65.20751879699247`", "1.2926940260997737`", 
         RowBox[{"{", 
          RowBox[{"62.491669426271535`", ",", "67.9233681677134`"}], "}"}]},
        {"76", "70.01052631578946`", "1.387403840460221`", 
         RowBox[{"{", 
          RowBox[{"67.09569900865152`", ",", "72.9253536229274`"}], "}"}]},
        {"73", "74.81353383458647`", "1.5044372741117322`", 
         RowBox[{"{", 
          RowBox[{"71.65282840724498`", ",", "77.97423926192795`"}], "}"}]},
        {"79", "79.61654135338345`", "1.6390192588108758`", 
         RowBox[{"{", 
          RowBox[{"76.17308966816816`", ",", "83.05999303859875`"}], "}"}]},
        {"85", "84.41954887218044`", "1.7871897698824288`", 
         RowBox[{"{", 
          RowBox[{"80.66480249454114`", ",", "88.17429524981975`"}], "}"}]},
        {"92", "89.22255639097745`", "1.945847100929337`", 
         RowBox[{"{", 
          RowBox[{"85.13448332969587`", ",", "93.31062945225902`"}], "}"}]},
        {"96", "94.02556390977443`", "2.1126299085786524`", 
         RowBox[{"{", 
          RowBox[{"89.58709317196913`", ",", "98.46403464757974`"}], "}"}]},
        {"95", "98.82857142857142`", "2.2857602334563065`", 
         RowBox[{"{", 
          RowBox[{"94.02636737539657`", ",", "103.63077548174627`"}], "}"}]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
       GridBoxDividers->{
        "Columns" -> {{False}}, "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       GridBoxSpacings->{
        "Columns" -> {{Automatic}}, "RowsIndexed" -> {2 -> 0.75}}],
      "Grid"], "DialogStyle",
     StripOnInput->False]}], ",", 
   RowBox[{"\<\"MeanPredictionConfidenceIntervalTableEntries\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2", ",", "7.571428571428564`", ",", "2.285760233456305`", ",", 
        RowBox[{"{", 
         RowBox[{"2.7692245182537123`", ",", "12.373632624603417`"}], "}"}]}],
        "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "9", ",", "12.374436090225556`", ",", "2.1126299085786515`", ",", 
        RowBox[{"{", 
         RowBox[{"7.935965352420259`", ",", "16.812906828030854`"}], "}"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "20", ",", "17.17744360902255`", ",", "1.945847100929336`", ",", 
        RowBox[{"{", 
         RowBox[{"13.08937054774098`", ",", "21.26551667030412`"}], "}"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "28", ",", "21.980451127819542`", ",", "1.7871897698824277`", ",", 
        RowBox[{"{", 
         RowBox[{"18.225704750180242`", ",", "25.735197505458842`"}], "}"}]}],
        "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "35", ",", "26.783458646616534`", ",", "1.639019258810875`", ",", 
        RowBox[{"{", 
         RowBox[{"23.340006961401237`", ",", "30.22691033183183`"}], "}"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "23", ",", "31.58646616541353`", ",", "1.5044372741117316`", ",", 
        RowBox[{"{", 
         RowBox[{"28.425760738072047`", ",", "34.747171592755016`"}], "}"}]}],
        "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"45", ",", "36.38947368421052`", ",", "1.38740384046022`", ",", 
        RowBox[{"{", 
         RowBox[{"33.47464637707259`", ",", "39.304300991348455`"}], "}"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "43", ",", "41.19248120300752`", ",", "1.2926940260997728`", ",", 
        RowBox[{"{", 
         RowBox[{"38.47663183228658`", ",", "43.908330573728456`"}], "}"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "42", ",", "45.99548872180451`", ",", "1.2254945114147004`", ",", 
        RowBox[{"{", 
         RowBox[{"43.420820292578945`", ",", "48.57015715103008`"}], "}"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "45", ",", "50.7984962406015`", ",", "1.1904731301899734`", ",", 
        RowBox[{"{", 
         RowBox[{"48.29740500307065`", ",", "53.29958747813235`"}], "}"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "55", ",", "55.6015037593985`", ",", "1.1904731301899736`", ",", 
        RowBox[{"{", 
         RowBox[{"53.100412521867646`", ",", "58.10259499692935`"}], "}"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "52", ",", "60.40451127819549`", ",", "1.2254945114147007`", ",", 
        RowBox[{"{", 
         RowBox[{"57.829842848969925`", ",", "62.97917970742106`"}], "}"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "69", ",", "65.20751879699247`", ",", "1.2926940260997737`", ",", 
        RowBox[{"{", 
         RowBox[{"62.491669426271535`", ",", "67.9233681677134`"}], "}"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "76", ",", "70.01052631578946`", ",", "1.387403840460221`", ",", 
        RowBox[{"{", 
         RowBox[{"67.09569900865152`", ",", "72.9253536229274`"}], "}"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "73", ",", "74.81353383458647`", ",", "1.5044372741117322`", ",", 
        RowBox[{"{", 
         RowBox[{"71.65282840724498`", ",", "77.97423926192795`"}], "}"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "79", ",", "79.61654135338345`", ",", "1.6390192588108758`", ",", 
        RowBox[{"{", 
         RowBox[{"76.17308966816816`", ",", "83.05999303859875`"}], "}"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "85", ",", "84.41954887218044`", ",", "1.7871897698824288`", ",", 
        RowBox[{"{", 
         RowBox[{"80.66480249454114`", ",", "88.17429524981975`"}], "}"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "92", ",", "89.22255639097745`", ",", "1.945847100929337`", ",", 
        RowBox[{"{", 
         RowBox[{"85.13448332969587`", ",", "93.31062945225902`"}], "}"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "96", ",", "94.02556390977443`", ",", "2.1126299085786524`", ",", 
        RowBox[{"{", 
         RowBox[{"89.58709317196913`", ",", "98.46403464757974`"}], "}"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "95", ",", "98.82857142857142`", ",", "2.2857602334563065`", ",", 
        RowBox[{"{", 
         RowBox[{"94.02636737539657`", ",", "103.63077548174627`"}], "}"}]}], 
       "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"MeanPredictionErrors\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "2.285760233456305`", ",", "2.1126299085786515`", ",", 
      "1.945847100929336`", ",", "1.7871897698824277`", ",", 
      "1.639019258810875`", ",", "1.5044372741117316`", ",", 
      "1.38740384046022`", ",", "1.2926940260997728`", ",", 
      "1.2254945114147004`", ",", "1.1904731301899734`", ",", 
      "1.1904731301899736`", ",", "1.2254945114147007`", ",", 
      "1.2926940260997737`", ",", "1.387403840460221`", ",", 
      "1.5044372741117322`", ",", "1.6390192588108758`", ",", 
      "1.7871897698824288`", ",", "1.945847100929337`", ",", 
      "2.1126299085786524`", ",", "2.2857602334563065`"}], "}"}]}], ",", 
   RowBox[{"\<\"ParameterConfidenceIntervals\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2.4080415608044894`"}], ",", "7.94488366606763`"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4.3708847688767705`", ",", "5.235130268717215`"}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"\<\"ParameterConfidenceIntervalTable\"\>", "\[Rule]", 
    StyleBox[
     TagBox[GridBox[{
        {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", \
"\<\"Confidence Interval\"\>"},
        {"1", "2.7684210526315707`", "2.463900380064634`", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2.4080415608044894`"}], ",", "7.94488366606763`"}], 
          "}"}]},
        {"x", "4.803007518796993`", "0.2056824297348251`", 
         RowBox[{"{", 
          RowBox[{"4.3708847688767705`", ",", "5.235130268717215`"}], "}"}]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
       GridBoxDividers->{
        "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
         "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       GridBoxSpacings->{
        "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
      "Grid"], "DialogStyle",
     StripOnInput->False]}], ",", 
   RowBox[{"\<\"ParameterConfidenceIntervalTableEntries\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2.7684210526315707`", ",", "2.463900380064634`", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2.4080415608044894`"}], ",", "7.94488366606763`"}], 
         "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4.803007518796993`", ",", "0.2056824297348251`", ",", 
        RowBox[{"{", 
         RowBox[{"4.3708847688767705`", ",", "5.235130268717215`"}], "}"}]}], 
       "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"ParameterConfidenceRegion\"\>", "\[Rule]", 
    RowBox[{"FittedModels`ParameterEllipsoid", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2.7684210526315707`", ",", "4.803007518796993`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.5870695430850725`", ",", "0.26327732736566106`"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.9973251728633271`"}], ",", "0.07309240434637894`"}],
          "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.07309240434637894`"}], ",", 
          RowBox[{"-", "0.9973251728633271`"}]}], "}"}]}], "}"}]}], "]"}]}], 
   ",", 
   RowBox[{"\<\"ParameterErrors\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2.463900380064634`", ",", "0.2056824297348251`"}], "}"}]}], ",", 
   RowBox[{"\<\"ParameterPValues\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.27594830606254206`", ",", "6.537881292144404`*^-15"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"ParameterTable\"\>", "\[Rule]", 
    StyleBox[
     TagBox[GridBox[{
        {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
        {"1", "2.7684210526315707`", "2.463900380064634`", 
         "1.1235929321781053`", "0.27594830606254206`"},
        {"x", "4.803007518796993`", "0.2056824297348251`", 
         "23.35156933428511`", "6.537881292144404`*^-15"}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
       GridBoxDividers->{
        "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
         "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       GridBoxSpacings->{
        "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
      "Grid"], "DialogStyle",
     StripOnInput->False]}], ",", 
   RowBox[{"\<\"ParameterTableEntries\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "2.7684210526315707`", ",", "2.463900380064634`", ",", 
        "1.1235929321781053`", ",", "0.27594830606254206`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "4.803007518796993`", ",", "0.2056824297348251`", ",", 
        "23.35156933428511`", ",", "6.537881292144404`*^-15"}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"\<\"ParameterTStatistics\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1.1235929321781053`", ",", "23.35156933428511`"}], "}"}]}], ",", 
   RowBox[{"\<\"PartialSumOfSquares\"\>", "\[Rule]", 
    RowBox[{"{", "15340.80601503759`", "}"}]}], ",", 
   RowBox[{"\<\"PredictedResponse\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "7.571428571428564`", ",", "12.374436090225556`", ",", 
      "17.17744360902255`", ",", "21.980451127819542`", ",", 
      "26.783458646616534`", ",", "31.58646616541353`", ",", 
      "36.38947368421052`", ",", "41.19248120300752`", ",", 
      "45.99548872180451`", ",", "50.7984962406015`", ",", 
      "55.6015037593985`", ",", "60.40451127819549`", ",", 
      "65.20751879699247`", ",", "70.01052631578946`", ",", 
      "74.81353383458647`", ",", "79.61654135338345`", ",", 
      "84.41954887218044`", ",", "89.22255639097745`", ",", 
      "94.02556390977443`", ",", "98.82857142857142`"}], "}"}]}], ",", 
   RowBox[{"\<\"Properties\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"AdjustedRSquared\"\>", ",", "\<\"AIC\"\>", 
      ",", "\<\"AICc\"\>", ",", "\<\"ANOVATable\"\>", 
      ",", "\<\"ANOVATableDegreesOfFreedom\"\>", 
      ",", "\<\"ANOVATableEntries\"\>", ",", "\<\"ANOVATableFStatistics\"\>", 
      ",", "\<\"ANOVATableMeanSquares\"\>", ",", "\<\"ANOVATablePValues\"\>", 
      ",", "\<\"ANOVATableSumsOfSquares\"\>", ",", "\<\"BasisFunctions\"\>", 
      ",", "\<\"BetaDifferences\"\>", ",", "\<\"BestFit\"\>", 
      ",", "\<\"BestFitParameters\"\>", ",", "\<\"BIC\"\>", 
      ",", "\<\"CatcherMatrix\"\>", ",", "\<\"CoefficientOfVariation\"\>", 
      ",", "\<\"CookDistances\"\>", ",", "\<\"CorrelationMatrix\"\>", 
      ",", "\<\"CovarianceMatrix\"\>", ",", "\<\"CovarianceRatios\"\>", 
      ",", "\<\"Data\"\>", ",", "\<\"DesignMatrix\"\>", 
      ",", "\<\"DurbinWatsonD\"\>", ",", "\<\"EigenstructureTable\"\>", 
      ",", "\<\"EigenstructureTableEigenvalues\"\>", 
      ",", "\<\"EigenstructureTableEntries\"\>", 
      ",", "\<\"EigenstructureTableIndexes\"\>", 
      ",", "\<\"EigenstructureTablePartitions\"\>", 
      ",", "\<\"EstimatedVariance\"\>", ",", "\<\"FitDifferences\"\>", 
      ",", "\<\"FitResiduals\"\>", ",", "\<\"Function\"\>", 
      ",", "\<\"FVarianceRatios\"\>", ",", "\<\"HatDiagonal\"\>", 
      ",", "\<\"MeanPredictionBands\"\>", 
      ",", "\<\"MeanPredictionConfidenceIntervals\"\>", 
      ",", "\<\"MeanPredictionConfidenceIntervalTable\"\>", 
      ",", "\<\"MeanPredictionConfidenceIntervalTableEntries\"\>", 
      ",", "\<\"MeanPredictionErrors\"\>", 
      ",", "\<\"ParameterConfidenceIntervals\"\>", 
      ",", "\<\"ParameterConfidenceIntervalTable\"\>", 
      ",", "\<\"ParameterConfidenceIntervalTableEntries\"\>", 
      ",", "\<\"ParameterConfidenceRegion\"\>", 
      ",", "\<\"ParameterErrors\"\>", ",", "\<\"ParameterPValues\"\>", 
      ",", "\<\"ParameterTable\"\>", ",", "\<\"ParameterTableEntries\"\>", 
      ",", "\<\"ParameterTStatistics\"\>", ",", "\<\"PartialSumOfSquares\"\>",
       ",", "\<\"PredictedResponse\"\>", ",", "\<\"Properties\"\>", 
      ",", "\<\"Response\"\>", ",", "\<\"RSquared\"\>", 
      ",", "\<\"SequentialSumOfSquares\"\>", 
      ",", "\<\"SingleDeletionVariances\"\>", 
      ",", "\<\"SinglePredictionBands\"\>", 
      ",", "\<\"SinglePredictionConfidenceIntervals\"\>", 
      ",", "\<\"SinglePredictionConfidenceIntervalTable\"\>", 
      ",", "\<\"SinglePredictionConfidenceIntervalTableEntries\"\>", 
      ",", "\<\"SinglePredictionErrors\"\>", 
      ",", "\<\"StandardizedResiduals\"\>", 
      ",", "\<\"StudentizedResiduals\"\>", 
      ",", "\<\"VarianceInflationFactors\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"Response\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "2", ",", "9", ",", "20", ",", "28", ",", "35", ",", "23", ",", "45", 
      ",", "43", ",", "42", ",", "45", ",", "55", ",", "52", ",", "69", ",", 
      "76", ",", "73", ",", "79", ",", "85", ",", "92", ",", "96", ",", 
      "95"}], "}"}]}], ",", 
   RowBox[{"\<\"RSquared\"\>", "\[Rule]", "0.968045207673128`"}], ",", 
   RowBox[{"\<\"SequentialSumOfSquares\"\>", "\[Rule]", 
    RowBox[{"{", "15340.806015037593`", "}"}]}], ",", 
   RowBox[{"\<\"SingleDeletionVariances\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "27.54551083591333`", ",", "28.991767859959012`", ",", 
      "29.246363775744882`", ",", "27.383425634885004`", ",", 
      "25.397369321793555`", ",", "25.071540570439147`", ",", 
      "25.106319137824627`", ",", "29.58356138618518`", ",", 
      "28.79586973788722`", ",", "27.70516510642263`", ",", 
      "29.76546970332077`", ",", "25.398514226977532`", ",", 
      "28.888399868340628`", ",", "27.522670084983147`", ",", 
      "29.577490260208755`", ",", "29.763160725636897`", ",", 
      "29.76552412313527`", ",", "29.263535544539284`", ",", 
      "29.515323555695744`", ",", "28.72899896800827`"}], "}"}]}], ",", 
   RowBox[{"\<\"SinglePredictionBands\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"2.7684210526315707`", "\[VeryThinSpace]", "+", 
       RowBox[{"4.803007518796993`", " ", "x"}], "-", 
       RowBox[{"2.100922040241038`", " ", 
        SqrtBox[
         RowBox[{"34.20380424746077`", "\[VeryThinSpace]", "-", 
          RowBox[{"0.8884104999340462`", " ", "x"}], "+", 
          RowBox[{"0.04230526190162126`", " ", 
           SuperscriptBox["x", "2"]}]}]]}]}], ",", 
      RowBox[{"2.7684210526315707`", "\[VeryThinSpace]", "+", 
       RowBox[{"4.803007518796993`", " ", "x"}], "+", 
       RowBox[{"2.100922040241038`", " ", 
        SqrtBox[
         RowBox[{"34.20380424746077`", "\[VeryThinSpace]", "-", 
          RowBox[{"0.8884104999340462`", " ", "x"}], "+", 
          RowBox[{"0.04230526190162126`", " ", 
           SuperscriptBox["x", "2"]}]}]]}]}]}], "}"}]}], ",", 
   RowBox[{"\<\"SinglePredictionConfidenceIntervals\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4.562682890990432`"}], ",", "19.705540033847562`"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.3796238905938747`", ",", "24.36924828985724`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.30782530983301`", ",", "29.04706190821209`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"10.221470832977879`", ",", "33.739431422661205`"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"15.12014622164518`", ",", "38.44677107158789`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"20.003480539397025`", ",", "43.169451791430035`"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"24.871152823750172`", ",", "47.90779454467087`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"29.722898167058723`", ",", "52.66206423895631`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"34.55851295307396`", ",", "57.43246449053507`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"39.37785901702537`", ",", "62.21913346417763`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"44.18086653582237`", ",", "67.02214098297463`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"48.96753550946494`", ",", "71.84148704692605`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"53.73793576104368`", ",", "76.67710183294128`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"58.49220545532911`", ",", "81.52884717624981`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"63.23054820856996`", ",", "86.39651946060297`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"67.9532289284121`", ",", "91.2798537783548`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"72.66056857733878`", ",", "96.1785291670221`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"77.3529380917879`", ",", "101.09217469016698`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"82.03075171014275`", ",", "106.02037610940612`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"86.69445996615242`", ",", "110.96268289099042`"}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"\<\"SinglePredictionConfidenceIntervalTable\"\>", "\[Rule]", 
    StyleBox[
     TagBox[GridBox[{
        {"\<\"Observed\"\>", "\<\"Predicted\"\>", "\<\"Standard Error\"\>", "\
\<\"Confidence Interval\"\>"},
        {"2", "7.571428571428564`", "5.775612435874515`", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "4.562682890990432`"}], ",", "19.705540033847562`"}], 
          "}"}]},
        {"9", "12.374436090225556`", "5.709308565421838`", 
         RowBox[{"{", 
          RowBox[{"0.3796238905938747`", ",", "24.36924828985724`"}], "}"}]},
        {"20", "17.17744360902255`", "5.649718586334476`", 
         RowBox[{"{", 
          RowBox[{"5.30782530983301`", ",", "29.04706190821209`"}], "}"}]},
        {"28", "21.980451127819542`", "5.597056944336955`", 
         RowBox[{"{", 
          RowBox[{"10.221470832977879`", ",", "33.739431422661205`"}], "}"}]},
        {"35", "26.783458646616534`", "5.5515208092315635`", 
         RowBox[{"{", 
          RowBox[{"15.12014622164518`", ",", "38.44677107158789`"}], "}"}]},
        {"23", "31.58646616541353`", "5.513286739896163`", 
         RowBox[{"{", 
          RowBox[{"20.003480539397025`", ",", "43.169451791430035`"}], "}"}]},
        {"45", "36.38947368421052`", "5.482507508531283`", 
         RowBox[{"{", 
          RowBox[{"24.871152823750172`", ",", "47.90779454467087`"}], "}"}]},
        {"43", "41.19248120300752`", "5.459309206272545`", 
         RowBox[{"{", 
          RowBox[{"29.722898167058723`", ",", "52.66206423895631`"}], "}"}]},
        {"42", "45.99548872180451`", "5.443788750685103`", 
         RowBox[{"{", 
          RowBox[{"34.55851295307396`", ",", "57.43246449053507`"}], "}"}]},
        {"45", "50.7984962406015`", "5.43601190564208`", 
         RowBox[{"{", 
          RowBox[{"39.37785901702537`", ",", "62.21913346417763`"}], "}"}]},
        {"55", "55.6015037593985`", "5.43601190564208`", 
         RowBox[{"{", 
          RowBox[{"44.18086653582237`", ",", "67.02214098297463`"}], "}"}]},
        {"52", "60.40451127819549`", "5.443788750685104`", 
         RowBox[{"{", 
          RowBox[{"48.96753550946494`", ",", "71.84148704692605`"}], "}"}]},
        {"69", "65.20751879699247`", "5.459309206272545`", 
         RowBox[{"{", 
          RowBox[{"53.73793576104368`", ",", "76.67710183294128`"}], "}"}]},
        {"76", "70.01052631578946`", "5.482507508531283`", 
         RowBox[{"{", 
          RowBox[{"58.49220545532911`", ",", "81.52884717624981`"}], "}"}]},
        {"73", "74.81353383458647`", "5.513286739896163`", 
         RowBox[{"{", 
          RowBox[{"63.23054820856996`", ",", "86.39651946060297`"}], "}"}]},
        {"79", "79.61654135338345`", "5.5515208092315635`", 
         RowBox[{"{", 
          RowBox[{"67.9532289284121`", ",", "91.2798537783548`"}], "}"}]},
        {"85", "84.41954887218044`", "5.597056944336955`", 
         RowBox[{"{", 
          RowBox[{"72.66056857733878`", ",", "96.1785291670221`"}], "}"}]},
        {"92", "89.22255639097745`", "5.649718586334476`", 
         RowBox[{"{", 
          RowBox[{"77.3529380917879`", ",", "101.09217469016698`"}], "}"}]},
        {"96", "94.02556390977443`", "5.709308565421838`", 
         RowBox[{"{", 
          RowBox[{"82.03075171014275`", ",", "106.02037610940612`"}], "}"}]},
        {"95", "98.82857142857142`", "5.775612435874515`", 
         RowBox[{"{", 
          RowBox[{"86.69445996615242`", ",", "110.96268289099042`"}], "}"}]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
       GridBoxDividers->{
        "Columns" -> {{False}}, "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       GridBoxSpacings->{
        "Columns" -> {{Automatic}}, "RowsIndexed" -> {2 -> 0.75}}],
      "Grid"], "DialogStyle",
     StripOnInput->False]}], ",", 
   RowBox[{"\<\"SinglePredictionConfidenceIntervalTableEntries\"\>", 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2", ",", "7.571428571428564`", ",", "5.775612435874515`", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "4.562682890990432`"}], ",", "19.705540033847562`"}], 
         "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "9", ",", "12.374436090225556`", ",", "5.709308565421838`", ",", 
        RowBox[{"{", 
         RowBox[{"0.3796238905938747`", ",", "24.36924828985724`"}], "}"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "20", ",", "17.17744360902255`", ",", "5.649718586334476`", ",", 
        RowBox[{"{", 
         RowBox[{"5.30782530983301`", ",", "29.04706190821209`"}], "}"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "28", ",", "21.980451127819542`", ",", "5.597056944336955`", ",", 
        RowBox[{"{", 
         RowBox[{"10.221470832977879`", ",", "33.739431422661205`"}], "}"}]}],
        "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "35", ",", "26.783458646616534`", ",", "5.5515208092315635`", ",", 
        RowBox[{"{", 
         RowBox[{"15.12014622164518`", ",", "38.44677107158789`"}], "}"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "23", ",", "31.58646616541353`", ",", "5.513286739896163`", ",", 
        RowBox[{"{", 
         RowBox[{"20.003480539397025`", ",", "43.169451791430035`"}], "}"}]}],
        "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "45", ",", "36.38947368421052`", ",", "5.482507508531283`", ",", 
        RowBox[{"{", 
         RowBox[{"24.871152823750172`", ",", "47.90779454467087`"}], "}"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "43", ",", "41.19248120300752`", ",", "5.459309206272545`", ",", 
        RowBox[{"{", 
         RowBox[{"29.722898167058723`", ",", "52.66206423895631`"}], "}"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "42", ",", "45.99548872180451`", ",", "5.443788750685103`", ",", 
        RowBox[{"{", 
         RowBox[{"34.55851295307396`", ",", "57.43246449053507`"}], "}"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"45", ",", "50.7984962406015`", ",", "5.43601190564208`", ",", 
        RowBox[{"{", 
         RowBox[{"39.37785901702537`", ",", "62.21913346417763`"}], "}"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"55", ",", "55.6015037593985`", ",", "5.43601190564208`", ",", 
        RowBox[{"{", 
         RowBox[{"44.18086653582237`", ",", "67.02214098297463`"}], "}"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "52", ",", "60.40451127819549`", ",", "5.443788750685104`", ",", 
        RowBox[{"{", 
         RowBox[{"48.96753550946494`", ",", "71.84148704692605`"}], "}"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "69", ",", "65.20751879699247`", ",", "5.459309206272545`", ",", 
        RowBox[{"{", 
         RowBox[{"53.73793576104368`", ",", "76.67710183294128`"}], "}"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "76", ",", "70.01052631578946`", ",", "5.482507508531283`", ",", 
        RowBox[{"{", 
         RowBox[{"58.49220545532911`", ",", "81.52884717624981`"}], "}"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "73", ",", "74.81353383458647`", ",", "5.513286739896163`", ",", 
        RowBox[{"{", 
         RowBox[{"63.23054820856996`", ",", "86.39651946060297`"}], "}"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "79", ",", "79.61654135338345`", ",", "5.5515208092315635`", ",", 
        RowBox[{"{", 
         RowBox[{"67.9532289284121`", ",", "91.2798537783548`"}], "}"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "85", ",", "84.41954887218044`", ",", "5.597056944336955`", ",", 
        RowBox[{"{", 
         RowBox[{"72.66056857733878`", ",", "96.1785291670221`"}], "}"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "92", ",", "89.22255639097745`", ",", "5.649718586334476`", ",", 
        RowBox[{"{", 
         RowBox[{"77.3529380917879`", ",", "101.09217469016698`"}], "}"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "96", ",", "94.02556390977443`", ",", "5.709308565421838`", ",", 
        RowBox[{"{", 
         RowBox[{"82.03075171014275`", ",", "106.02037610940612`"}], "}"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "95", ",", "98.82857142857142`", ",", "5.775612435874515`", ",", 
        RowBox[{"{", 
         RowBox[{"86.69445996615242`", ",", "110.96268289099042`"}], "}"}]}], 
       "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"SinglePredictionErrors\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "5.775612435874515`", ",", "5.709308565421838`", ",", 
      "5.649718586334476`", ",", "5.597056944336955`", ",", 
      "5.5515208092315635`", ",", "5.513286739896163`", ",", 
      "5.482507508531283`", ",", "5.459309206272545`", ",", 
      "5.443788750685103`", ",", "5.43601190564208`", ",", 
      "5.43601190564208`", ",", "5.443788750685104`", ",", 
      "5.459309206272545`", ",", "5.482507508531283`", ",", 
      "5.513286739896163`", ",", "5.5515208092315635`", ",", 
      "5.597056944336955`", ",", "5.649718586334476`", ",", 
      "5.709308565421838`", ",", "5.775612435874515`"}], "}"}]}], ",", 
   RowBox[{"\<\"StandardizedResiduals\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1.1640459992311831`"}], ",", 
      RowBox[{"-", "0.6935918284281778`"}], ",", "0.5720352204779237`", ",", 
      "1.2053824003189346`", ",", "1.6288235337692119`", ",", 
      RowBox[{"-", "1.6881811172130894`"}], ",", "1.681945227960074`", ",", 
      "0.35137590027861854`", ",", 
      RowBox[{"-", "0.7742386506660378`"}], ",", 
      RowBox[{"-", "1.1218415174663277`"}], ",", 
      RowBox[{"-", "0.11637360139692215`"}], ",", 
      RowBox[{"-", "1.6286111473739124`"}], ",", "0.7372462732967362`", ",", 
      "1.1699594556348207`", ",", 
      RowBox[{"-", "0.35655804332031277`"}], ",", 
      RowBox[{"-", "0.12222138522060232`"}], ",", "0.11623222746018368`", ",",
       "0.5628924092822174`", ",", "0.40583158232005384`", ",", 
      RowBox[{"-", "0.7999085328050178`"}]}], "}"}]}], ",", 
   RowBox[{"\<\"StudentizedResiduals\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1.176393845509596`"}], ",", 
      RowBox[{"-", "0.683242125737588`"}], ",", "0.5610413193632089`", ",", 
      "1.2217686419006328`", ",", "1.7143033940734578`", ",", 
      RowBox[{"-", "1.7882842206967011`"}], ",", "1.7804441013577434`", ",", 
      "0.3426531751880634`", ",", 
      RowBox[{"-", "0.7652754200046671`"}], ",", 
      RowBox[{"-", "1.1304702918656444`"}], ",", 
      RowBox[{"-", "0.11313738101086487`"}], ",", 
      RowBox[{"-", "1.71404122796795`"}], ",", "0.727543322626558`", ",", 
      "1.1828605460360577`", ",", 
      RowBox[{"-", "0.3477423578082675`"}], ",", 
      RowBox[{"-", "0.11882715341287638`"}], ",", "0.11299983522802`", ",", 
      "0.5519122215066522`", ",", "0.39621424336570465`", ",", 
      RowBox[{"-", "0.7915677635394154`"}]}], "}"}]}], ",", 
   RowBox[{"\<\"VarianceInflationFactors\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.`", ",", "1.0000000000000009`"}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.8663708718351736`*^9},
 CellLabel->"Out[135]=",
 CellID->540806637,ExpressionUUID->"2a003ef1-f41c-41d3-b972-b188c949746f"]
}, Open  ]],

Cell["Find all the values for a country:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.866370909232777*^9, 3.8663709189894466`*^9}},
 CellID->3089954,ExpressionUUID->"6ecaad95-48c8-477d-a58a-b8ff24a9ff1b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PropertiesSummary", "[", 
  TemplateBox[<|
   "query" -> "united states", "boxes" -> TemplateBox[{"\"United States\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"UnitedStates\""}], "]"}], 
       "\"Entity[\\\"Country\\\", \\\"UnitedStates\\\"]\"", "\"country\""}, 
      "Entity"], "allassumptions" -> {}, "assumptions" -> {}, 
    "open" -> {1, 2}, 
    "querystate" -> {
     "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
      0.8721678`7.3921450421937775, "Messages" -> {}}, "contextinfo" -> 
    Automatic, "version" -> 5|>,
   "LinguisticAssistantTemplate"], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.866370920205453*^9, 3.8663709222594533`*^9}},
 CellLabel->"In[136]:=",
 CellID->8389228,ExpressionUUID->"b9d2ca50-6e24-4dd1-ab31-8f981e0cfd04"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"\[LeftAssociation]", 
       RowBox[{
         RowBox[{
           TemplateBox[{"\"adjusted net national income\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"AdjustedNetNationalIncome\""}], 
               "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"AdjustedNetNationalIncome\
\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{"1.81958445368411`*^13", 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
             "US dollars per year", 
             FractionBox["\"USDollars\"", "\"Years\""]}, "QuantityPrefixUnit",
             SyntaxForm -> Mod]}], ",", 
         RowBox[{
           
           TemplateBox[{
            "\"seasonal bank borrowings from Fed, plus adjustments\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", "\"AdjustmentSeasonalBorrowings\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"AdjustmentSeasonalBorrowings\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{
             InterpretationBox["2.7`*^7", 2.7*^7, Selectable -> False], 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             "US dollars", "\"USDollars\""}, "QuantityPrefix", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"regions\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"AdministrativeDivisions\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"AdministrativeDivisions\\\"]\""}, "EntityProperty"], "\[Rule]", 
           RowBox[{"{", 
             RowBox[{
               TemplateBox[{"\"Alabama, United States\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"AdministrativeDivision\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Alabama\"", ",", "\"UnitedStates\""}], "}"}]}],
                    "]"}], 
                 "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Alabama\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""}, "Entity"], ",", 
               TemplateBox[{"\"Alaska, United States\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"AdministrativeDivision\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Alaska\"", ",", "\"UnitedStates\""}], "}"}]}], 
                   "]"}], "\"Entity[\\\"AdministrativeDivision\\\", \
{\\\"Alaska\\\", \\\"UnitedStates\\\"}]\"", "\"administrative division\""}, 
                "Entity"], ",", 
               TemplateBox[{"\"Arizona, United States\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"AdministrativeDivision\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Arizona\"", ",", "\"UnitedStates\""}], "}"}]}],
                    "]"}], 
                 "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Arizona\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""}, "Entity"], ",", 
               TemplateBox[{"\"Arkansas, United States\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"AdministrativeDivision\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Arkansas\"", ",", "\"UnitedStates\""}], 
                    "}"}]}], "]"}], 
                 "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Arkansas\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""}, "Entity"], ",", 
               TemplateBox[{"\"California, United States\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"AdministrativeDivision\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"California\"", ",", "\"UnitedStates\""}], 
                    "}"}]}], "]"}], 
                 "\"Entity[\\\"AdministrativeDivision\\\", \
{\\\"California\\\", \\\"UnitedStates\\\"}]\"", 
                 "\"administrative division\""}, "Entity"], ",", 
               TemplateBox[{"\"Colorado, United States\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"AdministrativeDivision\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Colorado\"", ",", "\"UnitedStates\""}], 
                    "}"}]}], "]"}], 
                 
                 "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Colorado\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""}, "Entity"], ",", 
               TemplateBox[{"\"Connecticut, United States\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"AdministrativeDivision\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Connecticut\"", ",", "\"UnitedStates\""}], 
                    "}"}]}], "]"}], 
                 "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Connecticut\\\
\", \\\"UnitedStates\\\"}]\"", "\"administrative division\""}, "Entity"], ",", 
               TemplateBox[{"\"Delaware, United States\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"AdministrativeDivision\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Delaware\"", ",", "\"UnitedStates\""}], 
                    "}"}]}], "]"}], 
                 "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Delaware\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""}, "Entity"], ",", 
               TemplateBox[{"\"District of Columbia, United States\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"AdministrativeDivision\"", ",", 
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"DistrictOfColumbia\"", ",", "\"UnitedStates\""}], 
                    "}"}]}], "]"}], 
                 "\"Entity[\\\"AdministrativeDivision\\\", \
{\\\"DistrictOfColumbia\\\", \\\"UnitedStates\\\"}]\"", 
                 "\"administrative division\""}, "Entity"], ",", 
               TemplateBox[{"\"Florida, United States\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"AdministrativeDivision\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Florida\"", ",", "\"UnitedStates\""}], "}"}]}],
                    "]"}], 
                 "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Florida\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""}, "Entity"], ",", 
               TemplateBox[{"\"Georgia, United States\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"AdministrativeDivision\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Georgia\"", ",", "\"UnitedStates\""}], "}"}]}],
                    "]"}], 
                 "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Georgia\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""}, "Entity"], ",", 
               TemplateBox[{"\"Hawaii, United States\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"AdministrativeDivision\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Hawaii\"", ",", "\"UnitedStates\""}], "}"}]}], 
                   "]"}], "\"Entity[\\\"AdministrativeDivision\\\", \
{\\\"Hawaii\\\", \\\"UnitedStates\\\"}]\"", "\"administrative division\""}, 
                "Entity"], ",", 
               TemplateBox[{"\"Idaho, United States\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"AdministrativeDivision\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Idaho\"", ",", "\"UnitedStates\""}], "}"}]}], 
                   "]"}], "\"Entity[\\\"AdministrativeDivision\\\", \
{\\\"Idaho\\\", \\\"UnitedStates\\\"}]\"", "\"administrative division\""}, 
                "Entity"], ",", 
               TemplateBox[{"\"Illinois, United States\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"AdministrativeDivision\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Illinois\"", ",", "\"UnitedStates\""}], 
                    "}"}]}], "]"}], 
                 "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Illinois\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""}, "Entity"], ",", 
               TemplateBox[{"\"Indiana, United States\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"AdministrativeDivision\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Indiana\"", ",", "\"UnitedStates\""}], "}"}]}],
                    "]"}], 
                 "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Indiana\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""}, "Entity"], ",", 
               TemplateBox[{"\"Iowa, United States\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"AdministrativeDivision\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Iowa\"", ",", "\"UnitedStates\""}], "}"}]}], 
                   "]"}], "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Iowa\
\\\", \\\"UnitedStates\\\"}]\"", "\"administrative division\""}, "Entity"], 
               ",", 
               TemplateBox[{"\"Kansas, United States\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"AdministrativeDivision\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Kansas\"", ",", "\"UnitedStates\""}], "}"}]}], 
                   "]"}], "\"Entity[\\\"AdministrativeDivision\\\", \
{\\\"Kansas\\\", \\\"UnitedStates\\\"}]\"", "\"administrative division\""}, 
                "Entity"], ",", 
               TemplateBox[{"\"Kentucky, United States\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"AdministrativeDivision\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Kentucky\"", ",", "\"UnitedStates\""}], 
                    "}"}]}], "]"}], 
                 "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Kentucky\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""}, "Entity"], ",", 
               TemplateBox[{"\"Louisiana, United States\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"AdministrativeDivision\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Louisiana\"", ",", "\"UnitedStates\""}], 
                    "}"}]}], "]"}], 
                 "\"Entity[\\\"AdministrativeDivision\\\", \
{\\\"Louisiana\\\", \\\"UnitedStates\\\"}]\"", "\"administrative division\""},
                 "Entity"], ",", 
               TemplateBox[{"\"Maine, United States\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"AdministrativeDivision\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Maine\"", ",", "\"UnitedStates\""}], "}"}]}], 
                   "]"}], "\"Entity[\\\"AdministrativeDivision\\\", \
{\\\"Maine\\\", \\\"UnitedStates\\\"}]\"", "\"administrative division\""}, 
                "Entity"], ",", 
               TemplateBox[{"\"Maryland, United States\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"AdministrativeDivision\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Maryland\"", ",", "\"UnitedStates\""}], 
                    "}"}]}], "]"}], 
                 "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Maryland\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""}, "Entity"], ",", 
               TemplateBox[{"\"Massachusetts, United States\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"AdministrativeDivision\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Massachusetts\"", ",", "\"UnitedStates\""}], 
                    "}"}]}], "]"}], 
                 "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Massachusetts\
\\\", \\\"UnitedStates\\\"}]\"", "\"administrative division\""}, "Entity"], 
               ",", 
               TemplateBox[{"\"Michigan, United States\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"AdministrativeDivision\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Michigan\"", ",", "\"UnitedStates\""}], 
                    "}"}]}], "]"}], 
                 "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Michigan\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""}, "Entity"], ",", 
               TemplateBox[{"\"Minnesota, United States\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"AdministrativeDivision\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Minnesota\"", ",", "\"UnitedStates\""}], 
                    "}"}]}], "]"}], 
                 
                 "\"Entity[\\\"AdministrativeDivision\\\", \
{\\\"Minnesota\\\", \\\"UnitedStates\\\"}]\"", "\"administrative division\""},
                 "Entity"], ",", 
               TemplateBox[{"\"Mississippi, United States\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"AdministrativeDivision\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Mississippi\"", ",", "\"UnitedStates\""}], 
                    "}"}]}], "]"}], 
                 "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Mississippi\\\
\", \\\"UnitedStates\\\"}]\"", "\"administrative division\""}, "Entity"], ",", 
               TemplateBox[{"\"Missouri, United States\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"AdministrativeDivision\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Missouri\"", ",", "\"UnitedStates\""}], 
                    "}"}]}], "]"}], 
                 "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Missouri\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""}, "Entity"], ",", 
               TemplateBox[{"\"Montana, United States\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"AdministrativeDivision\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Montana\"", ",", "\"UnitedStates\""}], "}"}]}],
                    "]"}], 
                 "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Montana\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""}, "Entity"], ",", 
               TemplateBox[{"\"Nebraska, United States\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"AdministrativeDivision\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Nebraska\"", ",", "\"UnitedStates\""}], 
                    "}"}]}], "]"}], 
                 "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Nebraska\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""}, "Entity"], ",", 
               TemplateBox[{"\"Nevada, United States\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"AdministrativeDivision\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Nevada\"", ",", "\"UnitedStates\""}], "}"}]}], 
                   "]"}], "\"Entity[\\\"AdministrativeDivision\\\", \
{\\\"Nevada\\\", \\\"UnitedStates\\\"}]\"", "\"administrative division\""}, 
                "Entity"], ",", 
               TemplateBox[{"\"New Hampshire, United States\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"AdministrativeDivision\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"NewHampshire\"", ",", "\"UnitedStates\""}], 
                    "}"}]}], "]"}], 
                 "\"Entity[\\\"AdministrativeDivision\\\", \
{\\\"NewHampshire\\\", \\\"UnitedStates\\\"}]\"", 
                 "\"administrative division\""}, "Entity"], ",", 
               TemplateBox[{"\"New Jersey, United States\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"AdministrativeDivision\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"NewJersey\"", ",", "\"UnitedStates\""}], 
                    "}"}]}], "]"}], 
                 "\"Entity[\\\"AdministrativeDivision\\\", \
{\\\"NewJersey\\\", \\\"UnitedStates\\\"}]\"", "\"administrative division\""},
                 "Entity"], ",", 
               TemplateBox[{"\"New Mexico, United States\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"AdministrativeDivision\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"NewMexico\"", ",", "\"UnitedStates\""}], 
                    "}"}]}], "]"}], 
                 "\"Entity[\\\"AdministrativeDivision\\\", \
{\\\"NewMexico\\\", \\\"UnitedStates\\\"}]\"", "\"administrative division\""},
                 "Entity"], ",", 
               TemplateBox[{"\"New York, United States\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"AdministrativeDivision\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"NewYork\"", ",", "\"UnitedStates\""}], "}"}]}],
                    "]"}], 
                 "\"Entity[\\\"AdministrativeDivision\\\", {\\\"NewYork\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""}, "Entity"], ",", 
               TemplateBox[{"\"North Carolina, United States\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"AdministrativeDivision\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"NorthCarolina\"", ",", "\"UnitedStates\""}], 
                    "}"}]}], "]"}], 
                 "\"Entity[\\\"AdministrativeDivision\\\", {\\\"NorthCarolina\
\\\", \\\"UnitedStates\\\"}]\"", "\"administrative division\""}, "Entity"], 
               ",", 
               TemplateBox[{"\"North Dakota, United States\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"AdministrativeDivision\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"NorthDakota\"", ",", "\"UnitedStates\""}], 
                    "}"}]}], "]"}], 
                 "\"Entity[\\\"AdministrativeDivision\\\", {\\\"NorthDakota\\\
\", \\\"UnitedStates\\\"}]\"", "\"administrative division\""}, "Entity"], ",", 
               TemplateBox[{"\"Ohio, United States\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"AdministrativeDivision\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Ohio\"", ",", "\"UnitedStates\""}], "}"}]}], 
                   "]"}], "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Ohio\
\\\", \\\"UnitedStates\\\"}]\"", "\"administrative division\""}, "Entity"], 
               ",", 
               TemplateBox[{"\"Oklahoma, United States\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"AdministrativeDivision\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Oklahoma\"", ",", "\"UnitedStates\""}], 
                    "}"}]}], "]"}], 
                 "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Oklahoma\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""}, "Entity"], ",", 
               TemplateBox[{"\"Oregon, United States\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"AdministrativeDivision\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Oregon\"", ",", "\"UnitedStates\""}], "}"}]}], 
                   "]"}], "\"Entity[\\\"AdministrativeDivision\\\", \
{\\\"Oregon\\\", \\\"UnitedStates\\\"}]\"", "\"administrative division\""}, 
                "Entity"], ",", 
               TemplateBox[{"\"Pennsylvania, United States\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"AdministrativeDivision\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Pennsylvania\"", ",", "\"UnitedStates\""}], 
                    "}"}]}], "]"}], 
                 "\"Entity[\\\"AdministrativeDivision\\\", \
{\\\"Pennsylvania\\\", \\\"UnitedStates\\\"}]\"", 
                 "\"administrative division\""}, "Entity"], ",", 
               TemplateBox[{"\"Rhode Island, United States\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"AdministrativeDivision\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"RhodeIsland\"", ",", "\"UnitedStates\""}], 
                    "}"}]}], "]"}], 
                 "\"Entity[\\\"AdministrativeDivision\\\", {\\\"RhodeIsland\\\
\", \\\"UnitedStates\\\"}]\"", "\"administrative division\""}, "Entity"], ",", 
               TemplateBox[{"\"South Carolina, United States\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"AdministrativeDivision\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"SouthCarolina\"", ",", "\"UnitedStates\""}], 
                    "}"}]}], "]"}], 
                 "\"Entity[\\\"AdministrativeDivision\\\", {\\\"SouthCarolina\
\\\", \\\"UnitedStates\\\"}]\"", "\"administrative division\""}, "Entity"], 
               ",", 
               TemplateBox[{"\"South Dakota, United States\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"AdministrativeDivision\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"SouthDakota\"", ",", "\"UnitedStates\""}], 
                    "}"}]}], "]"}], 
                 "\"Entity[\\\"AdministrativeDivision\\\", {\\\"SouthDakota\\\
\", \\\"UnitedStates\\\"}]\"", "\"administrative division\""}, "Entity"], ",", 
               TemplateBox[{"\"Tennessee, United States\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"AdministrativeDivision\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Tennessee\"", ",", "\"UnitedStates\""}], 
                    "}"}]}], "]"}], 
                 "\"Entity[\\\"AdministrativeDivision\\\", \
{\\\"Tennessee\\\", \\\"UnitedStates\\\"}]\"", "\"administrative division\""},
                 "Entity"], ",", 
               TemplateBox[{"\"Texas, United States\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"AdministrativeDivision\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Texas\"", ",", "\"UnitedStates\""}], "}"}]}], 
                   "]"}], "\"Entity[\\\"AdministrativeDivision\\\", \
{\\\"Texas\\\", \\\"UnitedStates\\\"}]\"", "\"administrative division\""}, 
                "Entity"], ",", 
               TemplateBox[{"\"Utah, United States\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"AdministrativeDivision\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Utah\"", ",", "\"UnitedStates\""}], "}"}]}], 
                   "]"}], "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Utah\
\\\", \\\"UnitedStates\\\"}]\"", "\"administrative division\""}, "Entity"], 
               ",", 
               TemplateBox[{"\"Vermont, United States\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"AdministrativeDivision\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Vermont\"", ",", "\"UnitedStates\""}], "}"}]}],
                    "]"}], 
                 "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Vermont\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""}, "Entity"], ",", 
               TemplateBox[{"\"Virginia, United States\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"AdministrativeDivision\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Virginia\"", ",", "\"UnitedStates\""}], 
                    "}"}]}], "]"}], 
                 "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Virginia\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""}, "Entity"], ",", 
               TemplateBox[{"\"Washington, United States\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"AdministrativeDivision\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Washington\"", ",", "\"UnitedStates\""}], 
                    "}"}]}], "]"}], 
                 "\"Entity[\\\"AdministrativeDivision\\\", \
{\\\"Washington\\\", \\\"UnitedStates\\\"}]\"", 
                 "\"administrative division\""}, "Entity"], ",", 
               TemplateBox[{"\"West Virginia, United States\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"AdministrativeDivision\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"WestVirginia\"", ",", "\"UnitedStates\""}], 
                    "}"}]}], "]"}], 
                 "\"Entity[\\\"AdministrativeDivision\\\", \
{\\\"WestVirginia\\\", \\\"UnitedStates\\\"}]\"", 
                 "\"administrative division\""}, "Entity"], ",", 
               TemplateBox[{"\"Wisconsin, United States\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"AdministrativeDivision\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Wisconsin\"", ",", "\"UnitedStates\""}], 
                    "}"}]}], "]"}], 
                 "\"Entity[\\\"AdministrativeDivision\\\", \
{\\\"Wisconsin\\\", \\\"UnitedStates\\\"}]\"", "\"administrative division\""},
                 "Entity"], ",", 
               TemplateBox[{"\"Wyoming, United States\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"AdministrativeDivision\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Wyoming\"", ",", "\"UnitedStates\""}], "}"}]}],
                    "]"}], 
                 "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Wyoming\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""}, "Entity"]}], 
             "}"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"adult population\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"AdultPopulation\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"AdultPopulation\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{
            "2.14155872`*^8", "\"people\"", "people", "\"People\""}, 
            "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"obese adults\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"AdultsObese\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"AdultsObese\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{"31.1`", "\"%\"", "percent", "\"Percent\""}, 
            "QuantityPostfix", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"number of aggravated assaults\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"AggravatedAssault\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"AggravatedAssault\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{"821182", 
             RowBox[{
               FrameBox[
                StyleBox[
                "\"crimes\"", ShowStringCharacters -> False, StripOnInput -> 
                 False], FrameMargins -> 1, FrameStyle -> GrayLevel[0.85], 
                BaselinePosition -> Baseline, RoundingRadius -> 3, 
                StripOnInput -> False], "\[InvisibleSpace]", "\"/\"", 
               "\[InvisibleSpace]", "\"yr\""}], "crimes per year", 
             FractionBox[
              RowBox[{"IndependentUnit", "[", "\"crimes\"", "]"}], 
              "\"Years\""]}, "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"rate of aggravated assault\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"AggravatedAssaultRate\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"AggravatedAssaultRate\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{"0.002502`", 
             RowBox[{
               FrameBox[
                StyleBox[
                "\"crimes\"", ShowStringCharacters -> False, StripOnInput -> 
                 False], FrameMargins -> 1, FrameStyle -> GrayLevel[0.85], 
                BaselinePosition -> Baseline, RoundingRadius -> 3, 
                StripOnInput -> False], "\[InvisibleSpace]", "\"/(\"", 
               "\[InvisibleSpace]", "\"person\"", "\[ThinSpace]", "\"yr\"", 
               "\[InvisibleSpace]", "\")\""}], "crimes per person year", 
             FractionBox[
              RowBox[{"IndependentUnit", "[", "\"crimes\"", "]"}], 
              RowBox[{"\"People\"", " ", "\"Years\""}]]}, "Quantity", 
            SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"aggregate home value\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"AggregateHomeValue\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"AggregateHomeValue\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{"23694653539900", 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             "US dollars", "\"USDollars\""}, "QuantityPrefix", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           
           TemplateBox[{
            "\"aggregate home value, householder 15 to 24 years\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"AggregateHomeValue15To24\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"AggregateHomeValue15To24\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{"115468621800", 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             "US dollars", "\"USDollars\""}, "QuantityPrefix", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           
           TemplateBox[{
            "\"aggregate home value, householder 25 to 34 years\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"AggregateHomeValue25To34\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"AggregateHomeValue25To34\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{"1739775936100", 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             "US dollars", "\"USDollars\""}, "QuantityPrefix", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           
           TemplateBox[{
            "\"aggregate home value, householder 35 to 64 years\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"AggregateHomeValue35To64\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"AggregateHomeValue35To64\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{"14471046106900", 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             "US dollars", "\"USDollars\""}, "QuantityPrefix", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           
           TemplateBox[{
            "\"aggregate home value, householder 65 years and over\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"AggregateHomeValue65\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"AggregateHomeValue65\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{"7368362875000", 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             "US dollars", "\"USDollars\""}, "QuantityPrefix", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"aggregate household income\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"AggregateHouseholdIncome\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"AggregateHouseholdIncome\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{"1.06997929357`6.*^13", 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
             "US dollars per year", 
             FractionBox["\"USDollars\"", "\"Years\""]}, "QuantityPrefixUnit",
             SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"aggregate weekly hours index\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"AggregateWeeklyHoursIndex\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"AggregateWeeklyHoursIndex\\\"]\""}, "EntityProperty"], "\[Rule]", 
           "119.8`"}], ",", 
         RowBox[{
           TemplateBox[{"\"agricultural irrigated land fraction\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", "\"AgriculturalIrrigatedLandFraction\""}],
                "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"AgriculturalIrrigatedLandFraction\\\"]\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{
            "5.78551729401439`", "\"%\"", "percent", "\"Percent\""}, 
            "QuantityPostfix", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"agricultural land fraction\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"AgriculturalLandFraction\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"AgriculturalLandFraction\\\"]\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{
            "44.363367353855`", "\"%\"", "percent", "\"Percent\""}, 
            "QuantityPostfix", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"agricultural production index\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", "\"AgriculturalProductionIndex\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"AgriculturalProductionIndex\\\"]\""}, "EntityProperty"], "\[Rule]", 
           "104.3`"}], ",", 
         RowBox[{
           TemplateBox[{"\"agricultural production per capita index\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", 
                 "\"AgriculturalProductionPerCapitaIndex\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"AgriculturalProductionPerCapitaIndex\\\"]\""}, "EntityProperty"], 
           "\[Rule]", "98.9`"}], ",", 
         RowBox[{
           TemplateBox[{"\"agricultural products\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"AgriculturalProducts\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"AgriculturalProducts\\\"]\""}, "EntityProperty"], "\[Rule]", 
           RowBox[{"{", 
             
             RowBox[{"\"Beef\"", ",", "\"Corn\"", ",", "\"Cotton\"", ",", 
               "\"Dairy\"", ",", "\"Fish\"", ",", "\"ForestProducts\"", ",", 
               "\"Fruit\"", ",", "\"Grains\"", ",", "\"Pork\"", ",", 
               "\"Poultry\"", ",", "\"Vegetables\"", ",", "\"Wheat\""}], 
             "}"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"consumption\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"AgricultureConsumption\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"AgricultureConsumption\\\"]\""}, "EntityProperty"], "\[Rule]", 
           RowBox[{"Missing", "[", "\"NotAvailable\"", "]"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"consumption per capita\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", "\"AgricultureConsumptionPerCapita\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"AgricultureConsumptionPerCapita\\\"]\""}, "EntityProperty"], "\[Rule]", 
           RowBox[{"Missing", "[", "\"NotAvailable\"", "]"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"harvest area\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"AgricultureHarvestArea\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"AgricultureHarvestArea\\\"]\""}, "EntityProperty"], "\[Rule]", 
           RowBox[{"Missing", "[", "\"NotAvailable\"", "]"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"harvest area per capita\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", "\"AgricultureHarvestAreaPerCapita\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"AgricultureHarvestAreaPerCapita\\\"]\""}, "EntityProperty"], "\[Rule]", 
           RowBox[{"Missing", "[", "\"NotAvailable\"", "]"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"production\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"AgricultureProduction\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"AgricultureProduction\\\"]\""}, "EntityProperty"], "\[Rule]", 
           RowBox[{"Missing", "[", "\"NotAvailable\"", "]"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"production per capita\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", "\"AgricultureProductionPerCapita\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"AgricultureProductionPerCapita\\\"]\""}, "EntityProperty"], "\[Rule]", 
           RowBox[{"Missing", "[", "\"NotAvailable\"", "]"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"average yield\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"AgricultureYield\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"AgricultureYield\\\"]\""},
             "EntityProperty"], "\[Rule]", 
           RowBox[{"Missing", "[", "\"NotAvailable\"", "]"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"yield per capita\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"AgricultureYieldPerCapita\""}], 
               "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"AgricultureYieldPerCapita\
\\\"]\""}, "EntityProperty"], "\[Rule]", 
           RowBox[{"Missing", "[", "\"NotAvailable\"", "]"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"arrivals by air\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"AirArrivals\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"AirArrivals\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           TemplateBox[{"3.0325`*^7", 
             
             RowBox[{"\"people\"", "\[InvisibleSpace]", "\"/\"", 
               "\[InvisibleSpace]", "\"yr\""}], "people per year", 
             FractionBox["\"People\"", "\"Years\""]}, "Quantity", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"aircraft carriers\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"AircraftCarriers\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"AircraftCarriers\\\"]\""},
             "EntityProperty"], "\[Rule]", "11"}], ",", 
         RowBox[{
           TemplateBox[{"\"air force\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"AirForce\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"AirForce\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{"334000", "\"people\"", "people", "\"People\""}, 
            "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"airports\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"Airports\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"Airports\\\"]\""}, 
            "EntityProperty"], "\[Rule]", "13513"}], ",", 
         RowBox[{
           TemplateBox[{"\"air transport\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"AirTransport\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"AirTransport\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           TemplateBox[{"926737000", 
             
             RowBox[{"\"people\"", "\[InvisibleSpace]", "\"/\"", 
               "\[InvisibleSpace]", "\"yr\""}], "people per year", 
             FractionBox["\"People\"", "\"Years\""]}, "Quantity", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"alcohol fuel\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"Alcohol\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"Alcohol\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           TemplateBox[{"1.2272`*^7", 
             
             RowBox[{"\"t\"", "\[InvisibleSpace]", "\"/\"", 
               "\[InvisibleSpace]", "\"yr\""}], "metric tons per year", 
             FractionBox["\"MetricTons\"", "\"Years\""]}, "Quantity", 
            SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"total primary energy\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"AllPrimaryFuels\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"AllPrimaryFuels\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           TemplateBox[{"8.357345346728387`*^19", 
             
             RowBox[{"\"J\"", "\[InvisibleSpace]", "\"/\"", 
               "\[InvisibleSpace]", "\"yr\""}], "joules per year", 
             FractionBox["\"Joules\"", "\"Years\""]}, "Quantity", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"alternate names\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"AlternateNames\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"AlternateNames\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           RowBox[{"{", 
             
             RowBox[{"\"United States of America\"", ",", "\"America\"", ",", 
               "\"US\"", ",", "\"USA\"", ",", "\"U.S.\"", ",", "\"U.S.A.\""}],
              "}"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"AM radio stations\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"AMRadioStations\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"AMRadioStations\\\"]\""}, 
            "EntityProperty"], "\[Rule]", "4789"}], ",", 
         RowBox[{
           TemplateBox[{"\"annual annulments\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"AnnualAnnulments\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"AnnualAnnulments\\\"]\""},
             "EntityProperty"], "\[Rule]", 
           RowBox[{"Missing", "[", "\"NotAvailable\"", "]"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"annual births\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"AnnualBirths\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"AnnualBirths\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           TemplateBox[{"3.957544`3.*^6", 
             
             RowBox[{"\"people\"", "\[InvisibleSpace]", "\"/\"", 
               "\[InvisibleSpace]", "\"yr\""}], "people per year", 
             FractionBox["\"People\"", "\"Years\""]}, "Quantity", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"annual deaths\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"AnnualDeaths\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"AnnualDeaths\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           TemplateBox[{"2.960988`3.*^6", 
             
             RowBox[{"\"people\"", "\[InvisibleSpace]", "\"/\"", 
               "\[InvisibleSpace]", "\"yr\""}], "people per year", 
             FractionBox["\"People\"", "\"Years\""]}, "Quantity", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"annual divorces\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"AnnualDivorces\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"AnnualDivorces\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           TemplateBox[{"877000", 
             RowBox[{
               FrameBox[
                StyleBox[
                "\"divorces\"", ShowStringCharacters -> False, StripOnInput -> 
                 False], FrameMargins -> 1, FrameStyle -> GrayLevel[0.85], 
                BaselinePosition -> Baseline, RoundingRadius -> 3, 
                StripOnInput -> False], "\[InvisibleSpace]", "\"/\"", 
               "\[InvisibleSpace]", "\"yr\""}], "divorces per year", 
             FractionBox[
              RowBox[{"IndependentUnit", "[", "\"divorces\"", "]"}], 
              "\"Years\""]}, "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"annual HIV/AIDS deaths\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"AnnualHIVAIDSDeaths\""}], "]"}],
              "\"EntityProperty[\\\"Country\\\", \\\"AnnualHIVAIDSDeaths\\\"]\
\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{"22000.`", 
             
             RowBox[{"\"people\"", "\[InvisibleSpace]", "\"/\"", 
               "\[InvisibleSpace]", "\"yr\""}], "people per year", 
             FractionBox["\"People\"", "\"Years\""]}, "Quantity", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"annual marriages\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"AnnualMarriages\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"AnnualMarriages\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           TemplateBox[{"2279000", 
             RowBox[{
               FrameBox[
                StyleBox[
                "\"marriages\"", ShowStringCharacters -> False, StripOnInput -> 
                 False], FrameMargins -> 1, FrameStyle -> GrayLevel[0.85], 
                BaselinePosition -> Baseline, RoundingRadius -> 3, 
                StripOnInput -> False], "\[InvisibleSpace]", "\"/\"", 
               "\[InvisibleSpace]", "\"yr\""}], "marriages per year", 
             FractionBox[
              RowBox[{"IndependentUnit", "[", "\"marriages\"", "]"}], 
              "\"Years\""]}, "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"antenatal care coverage\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"AntenatalCareCoverage\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"AntenatalCareCoverage\\\"]\""}, "EntityProperty"], "\[Rule]", 
           RowBox[{"Missing", "[", "\"NotApplicable\"", "]"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"annual\[Hyphen]crop land area\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"ArableLandArea\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"ArableLandArea\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           TemplateBox[{"1.551075`*^6", 
             RowBox[{
               SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
             SuperscriptBox["\"Kilometers\"", "2"]}, "Quantity", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"annual\[Hyphen]crop land fraction\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"ArableLandFraction\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"ArableLandFraction\\\"]\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{
            "17.243856737746817`", "\"%\"", "percent", "\"Percent\""}, 
            "QuantityPostfix", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"total area\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"Area\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"Area\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           TemplateBox[{"9.63142`*^6", 
             RowBox[{
               SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
             SuperscriptBox["\"Kilometers\"", "2"]}, "Quantity", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"armored infantry fighting vehicles\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", "\"ArmoredInfantryFightingVehicles\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"ArmoredInfantryFightingVehicles\\\"]\""}, "EntityProperty"], "\[Rule]", 
           "6452"}], ",", 
         RowBox[{
           TemplateBox[{"\"armored personnel carriers\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"ArmoredPersonnelCarriers\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"ArmoredPersonnelCarriers\\\"]\""}, "EntityProperty"], "\[Rule]", 
           "29637"}], ",", 
         RowBox[{
           TemplateBox[{"\"army\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"Army\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"Army\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{"512000", "\"people\"", "people", "\"People\""}, 
            "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"artillery\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"Artillery\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"Artillery\\\"]\""}, 
            "EntityProperty"], "\[Rule]", "8137"}], ",", 
         RowBox[{
           TemplateBox[{"\"attack helicopters\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"AttackHelicopters\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"AttackHelicopters\\\"]\""}, "EntityProperty"], "\[Rule]", "1830"}], ",", 
         RowBox[{
           TemplateBox[{"\"automobile production\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"AutomobileProduction\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"AutomobileProduction\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{"8673000", 
             RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
             "reciprocal years", 
             FractionBox["1", "\"Years\""]}, "Quantity", SyntaxForm -> Mod]}],
          ",", 
         RowBox[{
           TemplateBox[{"\"average hourly earnings\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"AverageHourlyEarnings\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"AverageHourlyEarnings\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{"27.45`", 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             RowBox[{"\"per \"", "\[InvisibleSpace]", "\"hour\""}], 
             "US dollars per hour", 
             FractionBox["\"USDollars\"", "\"Hours\""]}, "QuantityPrefixUnit",
             SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"average length of stay\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"AverageLengthOfStay\""}], "]"}],
              "\"EntityProperty[\\\"Country\\\", \\\"AverageLengthOfStay\\\"]\
\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{"1.6`", "\"days\"", "days", "\"Days\""}, "Quantity", 
            SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"average number of meetings with tax officials\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", 
                 "\"AverageNumberOfTimesFirmsSpentInMeetingsWithTaxOfficials\"\
"}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"AverageNumberOfTimesFirmsSpentInMeetingsWithTaxOfficials\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           RowBox[{"Missing", "[", "\"NotAvailable\"", "]"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"average time to clear exports through customs\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", 
                 "\"AverageTimeToClearExportsThroughCustoms\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"AverageTimeToClearExportsThroughCustoms\\\"]\""}, "EntityProperty"], 
           "\[Rule]", 
           RowBox[{"Missing", "[", "\"NotAvailable\"", "]"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"average weekly hours\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"AverageWeeklyHours\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"AverageWeeklyHours\\\"]\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{"34.`", "\"h\"", "hours", "\"Hours\""}, "Quantity", 
            SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"average weekly overtime hours\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"AverageWeeklyOvertimeHours\""}],
                "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"AverageWeeklyOvertimeHours\\\"]\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{"4.`", "\"h\"", "hours", "\"Hours\""}, "Quantity", 
            SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"aviation gasoline\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"AviationGasoline\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"AviationGasoline\\\"]\""},
             "EntityProperty"], "\[Rule]", 
           TemplateBox[{"693000.`", 
             
             RowBox[{"\"t\"", "\[InvisibleSpace]", "\"/\"", 
               "\[InvisibleSpace]", "\"yr\""}], "metric tons per year", 
             FractionBox["\"MetricTons\"", "\"Years\""]}, "Quantity", 
            SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"bankers acceptance rate\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"BankersAcceptance\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"BankersAcceptance\\\"]\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{"6.61`", "\"%\"", "percent", "\"Percent\""}, 
            "QuantityPostfix", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"bank prime loan rate\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"BankPrimeLoanRate\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"BankPrimeLoanRate\\\"]\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{"4.75`", "\"%\"", "percent", "\"Percent\""}, 
            "QuantityPostfix", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"bank prime loan rate changes\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"BankPrimeLoanRateChanges\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"BankPrimeLoanRateChanges\\\"]\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{"4.75`", "\"%\"", "percent", "\"Percent\""}, 
            "QuantityPostfix", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"benefits cost index\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"BenefitsCostIndex\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"BenefitsCostIndex\\\"]\""}, "EntityProperty"], "\[Rule]", "146.1`"}], ",", 
         RowBox[{
           TemplateBox[{"\"birth rate fraction\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"BirthRateFraction\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"BirthRateFraction\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{"0.012577999999999999`", 
             
             RowBox[{"\"people\"", "\[InvisibleSpace]", "\"/(\"", 
               "\[InvisibleSpace]", "\"person\"", "\[ThinSpace]", "\"yr\"", 
               "\[InvisibleSpace]", "\")\""}], "people per person year", 
             FractionBox["\"People\"", 
              RowBox[{"\"People\"", " ", "\"Years\""}]]}, "Quantity", 
            SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"births attended by skilled health personnel\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", 
                 "\"BirthsAttendedBySkilledHealthPersonnel\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"BirthsAttendedBySkilledHealthPersonnel\\\"]\""}, "EntityProperty"], 
           "\[Rule]", 
           
           TemplateBox[{"100.`", "\"%\"", "percent", "\"Percent\""}, 
            "QuantityPostfix", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"births by caesarean section\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"BirthsByCaesareanSection\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"BirthsByCaesareanSection\\\"]\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{"23.`", "\"%\"", "percent", "\"Percent\""}, 
            "QuantityPostfix", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"book titles published\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"BookTitles\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"BookTitles\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           TemplateBox[{"68175", 
             RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
             "reciprocal years", 
             FractionBox["1", "\"Years\""]}, "Quantity", SyntaxForm -> Mod]}],
          ",", 
         RowBox[{
           TemplateBox[{"\"bordering countries/regions\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"BorderingCountries\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"BorderingCountries\\\"]\""}, "EntityProperty"], "\[Rule]", 
           RowBox[{"{", 
             RowBox[{
               TemplateBox[{"\"Canada\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Canada\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Canada\\\"]\"", 
                 "\"country\""}, "Entity"], ",", 
               TemplateBox[{"\"Mexico\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Mexico\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Mexico\\\"]\"", 
                 "\"country\""}, "Entity"]}], "}"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"shared border lengths\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"BordersLengths\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"BordersLengths\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 TemplateBox[{"\"Canada\"", 
                   RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Canada\""}], "]"}], 
                   "\"Entity[\\\"Country\\\", \\\"Canada\\\"]\"", 
                   "\"country\""}, "Entity"], "\[Rule]", 
                 
                 TemplateBox[{
                  "8893.`", "\"km\"", "kilometers", "\"Kilometers\""}, 
                  "Quantity", SyntaxForm -> Mod]}], ",", 
               RowBox[{
                 TemplateBox[{"\"Mexico\"", 
                   RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Mexico\""}], "]"}], 
                   "\"Entity[\\\"Country\\\", \\\"Mexico\\\"]\"", 
                   "\"country\""}, "Entity"], "\[Rule]", 
                 
                 TemplateBox[{
                  "3141.`", "\"km\"", "kilometers", "\"Kilometers\""}, 
                  "Quantity", SyntaxForm -> Mod]}]}], "}"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"full boundary length\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"BoundaryLength\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"BoundaryLength\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{"31958.`", "\"km\"", "kilometers", "\"Kilometers\""}, 
            "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"burden of customs procedure\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"BurdenOfCustomsProcedure\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"BurdenOfCustomsProcedure\\\"]\""}, "EntityProperty"], "\[Rule]", "5.6`"}],
          ",", 
         RowBox[{
           TemplateBox[{"\"number of burglaries\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"Burglary\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"Burglary\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           TemplateBox[{"1117696", 
             RowBox[{
               FrameBox[
                StyleBox[
                "\"crimes\"", ShowStringCharacters -> False, StripOnInput -> 
                 False], FrameMargins -> 1, FrameStyle -> GrayLevel[0.85], 
                BaselinePosition -> Baseline, RoundingRadius -> 3, 
                StripOnInput -> False], "\[InvisibleSpace]", "\"/\"", 
               "\[InvisibleSpace]", "\"yr\""}], "crimes per year", 
             FractionBox[
              RowBox[{"IndependentUnit", "[", "\"crimes\"", "]"}], 
              "\"Years\""]}, "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"rate of burglary\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"BurglaryRate\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"BurglaryRate\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           TemplateBox[{"0.0034050000000000005`", 
             RowBox[{
               FrameBox[
                StyleBox[
                "\"crimes\"", ShowStringCharacters -> False, StripOnInput -> 
                 False], FrameMargins -> 1, FrameStyle -> GrayLevel[0.85], 
                BaselinePosition -> Baseline, RoundingRadius -> 3, 
                StripOnInput -> False], "\[InvisibleSpace]", "\"/(\"", 
               "\[InvisibleSpace]", "\"person\"", "\[ThinSpace]", "\"yr\"", 
               "\[InvisibleSpace]", "\")\""}], "crimes per person year", 
             FractionBox[
              RowBox[{"IndependentUnit", "[", "\"crimes\"", "]"}], 
              RowBox[{"\"People\"", " ", "\"Years\""}]]}, "Quantity", 
            SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"business activity index\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"BusinessActivityIndex\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"BusinessActivityIndex\\\"]\""}, "EntityProperty"], "\[Rule]", "55.1`"}], 
         ",", 
         RowBox[{
           TemplateBox[{"\"professional arrivals\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"BusinessArrivals\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"BusinessArrivals\\\"]\""},
             "EntityProperty"], "\[Rule]", 
           TemplateBox[{"6.785`*^6", 
             
             RowBox[{"\"people\"", "\[InvisibleSpace]", "\"/\"", 
               "\[InvisibleSpace]", "\"yr\""}], "people per year", 
             FractionBox["\"People\"", "\"Years\""]}, "Quantity", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"business entry rate\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"BusinessEntryRate\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"BusinessEntryRate\\\"]\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{
            "13.127036462373901`", "\"%\"", "percent", "\"Percent\""}, 
            "QuantityPostfix", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"business extent of disclosure\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", "\"BusinessExtentOfDisclosureIndex\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"BusinessExtentOfDisclosureIndex\\\"]\""}, "EntityProperty"], "\[Rule]", 
           "7.4`"}], ",", 
         RowBox[{
           TemplateBox[{"\"calling code\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"CallingCode\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"CallingCode\\\"]\""}, 
            "EntityProperty"], "\[Rule]", "\"1\""}], ",", 
         RowBox[{
           TemplateBox[{"\"capacity utilization rate\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"CapacityUtilization\""}], "]"}],
              "\"EntityProperty[\\\"Country\\\", \\\"CapacityUtilization\\\"]\
\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{"80.8094`", "\"%\"", "percent", "\"Percent\""}, 
            "QuantityPostfix", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"capital city\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"CapitalCity\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"CapitalCity\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           TemplateBox[{"\"Washington\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"City\"", ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "\"Washington\"", ",", "\"DistrictOfColumbia\"", ",", 
                    "\"UnitedStates\""}], "}"}]}], "]"}], 
             "\"Entity[\\\"City\\\", {\\\"Washington\\\", \
\\\"DistrictOfColumbia\\\", \\\"UnitedStates\\\"}]\"", "\"city\""}, 
            "Entity"]}], ",", 
         RowBox[{
           TemplateBox[{"\"capital location\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"CapitalLocation\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"CapitalLocation\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           RowBox[{"GeoPosition", "[", 
             RowBox[{"{", 
               RowBox[{"38.9041485`", ",", 
                 RowBox[{"-", "77.0170942`"}]}], "}"}], "]"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"S&P/Case\[Hyphen]Shiller home price index\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"CaseShillerIndex\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"CaseShillerIndex\\\"]\""},
             "EntityProperty"], "\[Rule]", "311.843952790273`"}], ",", 
         RowBox[{
           TemplateBox[{"\"central bank intervention\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"CentralBankIntervention\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"CentralBankIntervention\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{"0.`", 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             RowBox[{"\"per \"", "\[InvisibleSpace]", "\"day\""}], 
             "US dollars per day", 
             FractionBox["\"USDollars\"", "\"Days\""]}, "QuantityPrefixUnit", 
            SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"certificate of deposit\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"CertificateOfDeposit\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"CertificateOfDeposit\\\"]\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{"0.22`", "\"%\"", "percent", "\"Percent\""}, 
            "QuantityPostfix", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"changes in inventories\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"ChangesInInventories\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"ChangesInInventories\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{"49100000000", 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
             "US dollars per year", 
             FractionBox["\"USDollars\"", "\"Years\""]}, "QuantityPrefixUnit",
             SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"checkable deposits\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"CheckableDeposits\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"CheckableDeposits\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{
             InterpretationBox[
             "5.0973`*^12", 5.0973*^12, Selectable -> False], 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             "US dollars", "\"USDollars\""}, "QuantityPrefix", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"chemicals fraction of manufacturing value added\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"ChemicalsFraction\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"ChemicalsFraction\\\"]\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{
            "16.4386024170096`", "\"%\"", "percent", "\"Percent\""}, 
            "QuantityPostfix", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"child employment\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"ChildEmploymentFraction\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"ChildEmploymentFraction\\\"]\""}, "EntityProperty"], "\[Rule]", 
           RowBox[{"Missing", "[", "\"NotAvailable\"", "]"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"child population\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"ChildPopulation\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"ChildPopulation\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{
            "6.0531991`*^7", "\"people\"", "people", "\"People\""}, 
            "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"vitamin A supplementation\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", 
                 "\"ChildrenAged6To59MonthsReceivedVitaminA\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"ChildrenAged6To59MonthsReceivedVitaminA\\\"]\""}, "EntityProperty"], 
           "\[Rule]", 
           RowBox[{"Missing", "[", "\"NotApplicable\"", "]"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"children not enrolled in schools\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"ChildrenOutOfSchool\""}], "]"}],
              "\"EntityProperty[\\\"Country\\\", \\\"ChildrenOutOfSchool\\\"]\
\""}, "EntityProperty"], "\[Rule]", 
           RowBox[{"Missing", "[", "\"NotAvailable\"", "]"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"overweight children\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", "\"ChildrenUnderFiveOverweight\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"ChildrenUnderFiveOverweight\\\"]\""}, "EntityProperty"], "\[Rule]", 
           RowBox[{"Missing", "[", "\"NotApplicable\"", "]"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"antimalarial treatment for fever\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", 
                 "\"ChildrenUnderFiveReceivedAntimalarialTreatment\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"ChildrenUnderFiveReceivedAntimalarialTreatment\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           RowBox[{"Missing", "[", "\"NotApplicable\"", "]"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"stunted children\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"ChildrenUnderFiveStunted\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"ChildrenUnderFiveStunted\\\"]\""}, "EntityProperty"], "\[Rule]", 
           RowBox[{"Missing", "[", "\"NotApplicable\"", "]"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"underweight children\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", "\"ChildrenUnderFiveUnderweight\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"ChildrenUnderFiveUnderweight\\\"]\""}, "EntityProperty"], "\[Rule]", 
           RowBox[{"Missing", "[", "\"NotApplicable\"", "]"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"children with ARI symptoms taken to facility\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", "\"ChildrenUnderFiveWithARISymptoms\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"ChildrenUnderFiveWithARISymptoms\\\"]\""}, "EntityProperty"], "\[Rule]", 
           RowBox[{"Missing", "[", "\"NotApplicable\"", "]"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"diarrheal treatment with ORT\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", 
                 "\"ChildrenUnderFiveWithDiarrheaReceivingORT\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"ChildrenUnderFiveWithDiarrheaReceivingORT\\\"]\""}, "EntityProperty"], 
           "\[Rule]", 
           RowBox[{"Missing", "[", "\"NotApplicable\"", "]"}]}], ",", 
         RowBox[{
           
           TemplateBox[{
            "\"children sleeping under insecticide-treated nets\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", 
                 "\"ChildrenUnderFiveWithInsecticideNets\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"ChildrenUnderFiveWithInsecticideNets\\\"]\""}, "EntityProperty"], 
           "\[Rule]", 
           RowBox[{"Missing", "[", "\"NotApplicable\"", "]"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"cinema attendance\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"CinemaAttendance\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"CinemaAttendance\\\"]\""},
             "EntityProperty"], "\[Rule]", 
           TemplateBox[{"1.465`*^9", 
             
             RowBox[{"\"visits\"", "\[InvisibleSpace]", "\"/\"", 
               "\[InvisibleSpace]", "\"yr\""}], "visits per year", 
             FractionBox["\"Visits\"", "\"Years\""]}, "Quantity", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"number of cinemas\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"Cinemas\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"Cinemas\\\"]\""}, 
            "EntityProperty"], "\[Rule]", "5827"}], ",", 
         RowBox[{
           TemplateBox[{"\"cinema seats\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"CinemaSeats\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"CinemaSeats\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           RowBox[{"Missing", "[", "\"NotAvailable\"", "]"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"civilian employment population ratio\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", "\"CivilianEmploymentPopulationRatio\""}],
                "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"CivilianEmploymentPopulationRatio\\\"]\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{"59.9`", "\"%\"", "percent", "\"Percent\""}, 
            "QuantityPostfix", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"civilian labor force\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"CivilianLaborForce\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"CivilianLaborForce\\\"]\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{"1.64023`*^8", "\"people\"", "people", "\"People\""}, 
            "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"civilian participation rate\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"CivilianParticipationRate\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"CivilianParticipationRate\\\"]\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{"62.2`", "\"%\"", "percent", "\"Percent\""}, 
            "QuantityPostfix", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"civilian unemployment rate\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"CivilianUnemploymentRate\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"CivilianUnemploymentRate\\\"]\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{
            "3.6000000000000005`", "\"%\"", "percent", "\"Percent\""}, 
            "QuantityPostfix", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"classes\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"Classes\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"Classes\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           RowBox[{"{", 
             RowBox[{
               TemplateBox[{"\"African Development Bank\"", 
                 RowBox[{"EntityClass", "[", 
                   RowBox[{"\"Country\"", ",", "\"AfricanDevelopmentBank\""}],
                    "]"}], 
                 "\"EntityClass[\\\"Country\\\", \\\"AfricanDevelopmentBank\\\
\"]\"", "\"countries\""}, "EntityClass"], ",", 
               TemplateBox[{"\"The Americas\"", 
                 RowBox[{"EntityClass", "[", 
                   RowBox[{"\"Country\"", ",", "\"Americas\""}], "]"}], 
                 "\"EntityClass[\\\"Country\\\", \\\"Americas\\\"]\"", 
                 "\"countries\""}, "EntityClass"], ",", 
               TemplateBox[{"\"Antarctic Nations\"", 
                 RowBox[{"EntityClass", "[", 
                   RowBox[{"\"Country\"", ",", "\"AntarcticNations\""}], 
                   "]"}], "\"EntityClass[\\\"Country\\\", \
\\\"AntarcticNations\\\"]\"", "\"countries\""}, "EntityClass"], ",", 
               TemplateBox[{"\"Arctic Council\"", 
                 RowBox[{"EntityClass", "[", 
                   RowBox[{"\"Country\"", ",", "\"ArcticCouncil\""}], "]"}], 
                 "\"EntityClass[\\\"Country\\\", \\\"ArcticCouncil\\\"]\"", 
                 "\"countries\""}, "EntityClass"], ",", 
               TemplateBox[{"\"Asian Development Bank\"", 
                 RowBox[{"EntityClass", "[", 
                   RowBox[{"\"Country\"", ",", "\"AsianDevelopmentBank\""}], 
                   "]"}], "\"EntityClass[\\\"Country\\\", \
\\\"AsianDevelopmentBank\\\"]\"", "\"countries\""}, "EntityClass"], ",", 
               TemplateBox[{"\"Asia Pacific Economic Cooperation\"", 
                 RowBox[{"EntityClass", "[", 
                   
                   RowBox[{
                    "\"Country\"", ",", 
                    "\"AsiaPacificEconomicCooperation\""}], "]"}], 
                 "\"EntityClass[\\\"Country\\\", \
\\\"AsiaPacificEconomicCooperation\\\"]\"", "\"countries\""}, "EntityClass"], 
               ",", 
               TemplateBox[{"\"ASEAN Regional Forum\"", 
                 RowBox[{"EntityClass", "[", 
                   
                   RowBox[{
                    "\"Country\"", ",", 
                    "\"AssociationOfSoutheastAsianNationsRegionalForum\""}], 
                   "]"}], "\"EntityClass[\\\"Country\\\", \
\\\"AssociationOfSoutheastAsianNationsRegionalForum\\\"]\"", "\"countries\""},
                 "EntityClass"], ",", 
               TemplateBox[{"\"Australia Group\"", 
                 RowBox[{"EntityClass", "[", 
                   RowBox[{"\"Country\"", ",", "\"AustraliaGroup\""}], "]"}], 
                 "\"EntityClass[\\\"Country\\\", \\\"AustraliaGroup\\\"]\"", 
                 "\"countries\""}, "EntityClass"], ",", 
               
               TemplateBox[{
                "\"Australia New Zealand United States Security Treaty\"", 
                 RowBox[{"EntityClass", "[", 
                   
                   RowBox[{
                    "\"Country\"", ",", 
                    "\"AustraliaNewZealandUnitedStatesSecurityTreaty\""}], 
                   "]"}], "\"EntityClass[\\\"Country\\\", \
\\\"AustraliaNewZealandUnitedStatesSecurityTreaty\\\"]\"", "\"countries\""}, 
                "EntityClass"], ",", 
               TemplateBox[{"\"Bank for International Settlements\"", 
                 RowBox[{"EntityClass", "[", 
                   
                   RowBox[{
                    "\"Country\"", ",", 
                    "\"BankForInternationalSettlements\""}], "]"}], 
                 "\"EntityClass[\\\"Country\\\", \
\\\"BankForInternationalSettlements\\\"]\"", "\"countries\""}, "EntityClass"],
                ",", 
               TemplateBox[{"\"Colombo Plan\"", 
                 RowBox[{"EntityClass", "[", 
                   RowBox[{"\"Country\"", ",", "\"ColomboPlan\""}], "]"}], 
                 "\"EntityClass[\\\"Country\\\", \\\"ColomboPlan\\\"]\"", 
                 "\"countries\""}, "EntityClass"], ",", 
               
               TemplateBox[{
                "\"all countries, dependencies, and territories\"", 
                 RowBox[{"EntityClass", "[", 
                   RowBox[{"\"Country\"", ",", "\"Countries\""}], "]"}], 
                 "\"EntityClass[\\\"Country\\\", \\\"Countries\\\"]\"", 
                 "\"countries\""}, "EntityClass"], ",", 
               TemplateBox[{"\"East Asia Summit\"", 
                 RowBox[{"EntityClass", "[", 
                   RowBox[{"\"Country\"", ",", "\"EastAsiaSummit\""}], "]"}], 
                 "\"EntityClass[\\\"Country\\\", \\\"EastAsiaSummit\\\"]\"", 
                 "\"countries\""}, "EntityClass"], ",", 
               TemplateBox[{"\"Eastern Hemisphere\"", 
                 RowBox[{"EntityClass", "[", 
                   RowBox[{"\"Country\"", ",", "\"EasternHemisphere\""}], 
                   "]"}], "\"EntityClass[\\\"Country\\\", \
\\\"EasternHemisphere\\\"]\"", "\"countries\""}, "EntityClass"], ",", 
               
               TemplateBox[{
                "\"Economic and Social Commission for Asia and the Pacific\"", 
                 RowBox[{"EntityClass", "[", 
                   
                   RowBox[{
                    "\"Country\"", ",", 
                    "\"EconomicAndSocialCommissionForAsiaAndThePacific\""}], 
                   "]"}], "\"EntityClass[\\\"Country\\\", \
\\\"EconomicAndSocialCommissionForAsiaAndThePacific\\\"]\"", "\"countries\""},
                 "EntityClass"], ",", 
               TemplateBox[{"\"English speaking countries\"", 
                 RowBox[{"EntityClass", "[", 
                   RowBox[{"\"Country\"", ",", "\"EnglishSpeaking\""}], "]"}],
                  "\"EntityClass[\\\"Country\\\", \\\"EnglishSpeaking\\\"]\"",
                  "\"countries\""}, "EntityClass"], ",", 
               TemplateBox[{"\"Euro Atlantic Partnership Council\"", 
                 RowBox[{"EntityClass", "[", 
                   
                   RowBox[{
                    "\"Country\"", ",", 
                    "\"EuroAtlanticPartnershipCouncil\""}], "]"}], 
                 "\"EntityClass[\\\"Country\\\", \
\\\"EuroAtlanticPartnershipCouncil\\\"]\"", "\"countries\""}, "EntityClass"], 
               ",", 
               
               TemplateBox[{
                "\"European Bank for Reconstruction and Development\"", 
                 RowBox[{"EntityClass", "[", 
                   
                   RowBox[{
                    "\"Country\"", ",", 
                    "\"EuropeanBankForReconstructionAndDevelopment\""}], 
                   "]"}], "\"EntityClass[\\\"Country\\\", \
\\\"EuropeanBankForReconstructionAndDevelopment\\\"]\"", "\"countries\""}, 
                "EntityClass"], ",", 
               TemplateBox[{"\"Financial Action Task Force\"", 
                 RowBox[{"EntityClass", "[", 
                   
                   RowBox[{
                    "\"Country\"", ",", "\"FinancialActionTaskForce\""}], 
                   "]"}], "\"EntityClass[\\\"Country\\\", \
\\\"FinancialActionTaskForce\\\"]\"", "\"countries\""}, "EntityClass"], ",", 
               TemplateBox[{"\"First World countries\"", 
                 RowBox[{"EntityClass", "[", 
                   RowBox[{"\"Country\"", ",", "\"FirstWorldCountries\""}], 
                   "]"}], "\"EntityClass[\\\"Country\\\", \
\\\"FirstWorldCountries\\\"]\"", "\"countries\""}, "EntityClass"], ",", 
               TemplateBox[{"\"Food and Agriculture Organization\"", 
                 RowBox[{"EntityClass", "[", 
                   
                   RowBox[{
                    "\"Country\"", ",", 
                    "\"FoodAndAgricultureOrganization\""}], "]"}], 
                 "\"EntityClass[\\\"Country\\\", \
\\\"FoodAndAgricultureOrganization\\\"]\"", "\"countries\""}, "EntityClass"], 
               ",", 
               TemplateBox[{"\"former British colonies\"", 
                 RowBox[{"EntityClass", "[", 
                   RowBox[{"\"Country\"", ",", "\"FormerBritishColonies\""}], 
                   "]"}], "\"EntityClass[\\\"Country\\\", \
\\\"FormerBritishColonies\\\"]\"", "\"countries\""}, "EntityClass"], ",", 
               TemplateBox[{"\"former Spanish colonies\"", 
                 RowBox[{"EntityClass", "[", 
                   RowBox[{"\"Country\"", ",", "\"FormerSpanishColonies\""}], 
                   "]"}], "\"EntityClass[\\\"Country\\\", \
\\\"FormerSpanishColonies\\\"]\"", "\"countries\""}, "EntityClass"], ",", 
               TemplateBox[{"\"Group of 10\"", 
                 RowBox[{"EntityClass", "[", 
                   RowBox[{"\"Country\"", ",", "\"GroupOf10\""}], "]"}], 
                 "\"EntityClass[\\\"Country\\\", \\\"GroupOf10\\\"]\"", 
                 "\"countries\""}, "EntityClass"], ",", 
               TemplateBox[{"\"Group of 20, total membership\"", 
                 RowBox[{"EntityClass", "[", 
                   RowBox[{"\"Country\"", ",", "\"GroupOf20\""}], "]"}], 
                 "\"EntityClass[\\\"Country\\\", \\\"GroupOf20\\\"]\"", 
                 "\"countries\""}, "EntityClass"], ",", 
               TemplateBox[{"\"Group of 20, seated countries\"", 
                 RowBox[{"EntityClass", "[", 
                   RowBox[{"\"Country\"", ",", "\"GroupOf20Seated19\""}], 
                   "]"}], "\"EntityClass[\\\"Country\\\", \
\\\"GroupOf20Seated19\\\"]\"", "\"countries\""}, "EntityClass"], ",", 
               TemplateBox[{"\"Group of 5\"", 
                 RowBox[{"EntityClass", "[", 
                   RowBox[{"\"Country\"", ",", "\"GroupOf5\""}], "]"}], 
                 "\"EntityClass[\\\"Country\\\", \\\"GroupOf5\\\"]\"", 
                 "\"countries\""}, "EntityClass"], ",", 
               TemplateBox[{"\"Group of 7\"", 
                 RowBox[{"EntityClass", "[", 
                   RowBox[{"\"Country\"", ",", "\"GroupOf7\""}], "]"}], 
                 "\"EntityClass[\\\"Country\\\", \\\"GroupOf7\\\"]\"", 
                 "\"countries\""}, "EntityClass"], ",", 
               TemplateBox[{"\"Group of 8\"", 
                 RowBox[{"EntityClass", "[", 
                   RowBox[{"\"Country\"", ",", "\"GroupOf8\""}], "]"}], 
                 "\"EntityClass[\\\"Country\\\", \\\"GroupOf8\\\"]\"", 
                 "\"countries\""}, "EntityClass"], ",", 
               TemplateBox[{"\"Inter\[Hyphen]American Development Bank\"", 
                 RowBox[{"EntityClass", "[", 
                   
                   RowBox[{
                    "\"Country\"", ",", "\"InterAmericanDevelopmentBank\""}], 
                   "]"}], "\"EntityClass[\\\"Country\\\", \
\\\"InterAmericanDevelopmentBank\\\"]\"", "\"countries\""}, "EntityClass"], 
               ",", 
               TemplateBox[{"\"International Atomic Energy Agency\"", 
                 RowBox[{"EntityClass", "[", 
                   
                   RowBox[{
                    "\"Country\"", ",", 
                    "\"InternationalAtomicEnergyAgency\""}], "]"}], 
                 "\"EntityClass[\\\"Country\\\", \
\\\"InternationalAtomicEnergyAgency\\\"]\"", "\"countries\""}, "EntityClass"],
                ",", 
               
               TemplateBox[{
                "\"International Bank for Reconstruction and Development\"", 
                 RowBox[{"EntityClass", "[", 
                   
                   RowBox[{
                    "\"Country\"", ",", 
                    "\"InternationalBankForReconstructionAndDevelopment\""}], 
                   "]"}], "\"EntityClass[\\\"Country\\\", \
\\\"InternationalBankForReconstructionAndDevelopment\\\"]\"", 
                 "\"countries\""}, "EntityClass"], ",", 
               TemplateBox[{"\"International Chamber of Commerce\"", 
                 RowBox[{"EntityClass", "[", 
                   
                   RowBox[{
                    "\"Country\"", ",", 
                    "\"InternationalChamberOfCommerce\""}], "]"}], 
                 "\"EntityClass[\\\"Country\\\", \
\\\"InternationalChamberOfCommerce\\\"]\"", "\"countries\""}, "EntityClass"], 
               ",", 
               TemplateBox[{"\"International Civil Aviation Organization\"", 
                 RowBox[{"EntityClass", "[", 
                   
                   RowBox[{
                    "\"Country\"", ",", 
                    "\"InternationalCivilAviationOrganization\""}], "]"}], 
                 "\"EntityClass[\\\"Country\\\", \
\\\"InternationalCivilAviationOrganization\\\"]\"", "\"countries\""}, 
                "EntityClass"], ",", 
               
               TemplateBox[{
                "\"International Confederation of Free Trade Unions\"", 
                 RowBox[{"EntityClass", "[", 
                   
                   RowBox[{
                    "\"Country\"", ",", 
                    "\"InternationalConfederationOfFreeTradeUnions\""}], 
                   "]"}], "\"EntityClass[\\\"Country\\\", \
\\\"InternationalConfederationOfFreeTradeUnions\\\"]\"", "\"countries\""}, 
                "EntityClass"], ",", 
               TemplateBox[{"\"International Criminal Police Organization\"", 
                 RowBox[{"EntityClass", "[", 
                   
                   RowBox[{
                    "\"Country\"", ",", 
                    "\"InternationalCriminalPoliceOrganization\""}], "]"}], 
                 "\"EntityClass[\\\"Country\\\", \
\\\"InternationalCriminalPoliceOrganization\\\"]\"", "\"countries\""}, 
                "EntityClass"], ",", 
               TemplateBox[{"\"International Development Association\"", 
                 RowBox[{"EntityClass", "[", 
                   
                   RowBox[{
                    "\"Country\"", ",", 
                    "\"InternationalDevelopmentAssociation\""}], "]"}], 
                 "\"EntityClass[\\\"Country\\\", \
\\\"InternationalDevelopmentAssociation\\\"]\"", "\"countries\""}, 
                "EntityClass"], ",", 
               TemplateBox[{"\"International Energy Agency\"", 
                 RowBox[{"EntityClass", "[", 
                   
                   RowBox[{
                    "\"Country\"", ",", "\"InternationalEnergyAgency\""}], 
                   "]"}], "\"EntityClass[\\\"Country\\\", \
\\\"InternationalEnergyAgency\\\"]\"", "\"countries\""}, "EntityClass"], ",", 
               
               TemplateBox[{
                "\"International Federation of Red Cross and Red Crescent \
Societies\"", 
                 RowBox[{"EntityClass", "[", 
                   
                   RowBox[{
                    "\"Country\"", ",", 
                    "\"InternationalFederationOfRedCrossAndRedCrescentSocietie\
s\""}], "]"}], 
                 "\"EntityClass[\\\"Country\\\", \
\\\"InternationalFederationOfRedCrossAndRedCrescentSocieties\\\"]\"", 
                 "\"countries\""}, "EntityClass"], ",", 
               TemplateBox[{"\"International Finance Corporation\"", 
                 RowBox[{"EntityClass", "[", 
                   
                   RowBox[{
                    "\"Country\"", ",", 
                    "\"InternationalFinanceCorporation\""}], "]"}], 
                 "\"EntityClass[\\\"Country\\\", \
\\\"InternationalFinanceCorporation\\\"]\"", "\"countries\""}, "EntityClass"],
                ",", 
               
               TemplateBox[{
                "\"International Fund for Agricultural Development\"", 
                 RowBox[{"EntityClass", "[", 
                   
                   RowBox[{
                    "\"Country\"", ",", 
                    "\"InternationalFundForAgriculturalDevelopment\""}], 
                   "]"}], "\"EntityClass[\\\"Country\\\", \
\\\"InternationalFundForAgriculturalDevelopment\\\"]\"", "\"countries\""}, 
                "EntityClass"], ",", 
               TemplateBox[{"\"International Hydrographic Organization\"", 
                 RowBox[{"EntityClass", "[", 
                   
                   RowBox[{
                    "\"Country\"", ",", 
                    "\"InternationalHydrographicOrganization\""}], "]"}], 
                 "\"EntityClass[\\\"Country\\\", \
\\\"InternationalHydrographicOrganization\\\"]\"", "\"countries\""}, 
                "EntityClass"], ",", 
               TemplateBox[{"\"International Labour Organization\"", 
                 RowBox[{"EntityClass", "[", 
                   
                   RowBox[{
                    "\"Country\"", ",", 
                    "\"InternationalLabourOrganization\""}], "]"}], 
                 "\"EntityClass[\\\"Country\\\", \
\\\"InternationalLabourOrganization\\\"]\"", "\"countries\""}, "EntityClass"],
                ",", 
               TemplateBox[{"\"International Maritime Organization\"", 
                 RowBox[{"EntityClass", "[", 
                   
                   RowBox[{
                    "\"Country\"", ",", 
                    "\"InternationalMaritimeOrganization\""}], "]"}], 
                 "\"EntityClass[\\\"Country\\\", \
\\\"InternationalMaritimeOrganization\\\"]\"", "\"countries\""}, 
                "EntityClass"], ",", 
               TemplateBox[{"\"International Mobile Satellite Organization\"", 
                 RowBox[{"EntityClass", "[", 
                   
                   RowBox[{
                    "\"Country\"", ",", 
                    "\"InternationalMobileSatelliteOrganization\""}], "]"}], 
                 "\"EntityClass[\\\"Country\\\", \
\\\"InternationalMobileSatelliteOrganization\\\"]\"", "\"countries\""}, 
                "EntityClass"], ",", 
               TemplateBox[{"\"International Monetary Fund\"", 
                 RowBox[{"EntityClass", "[", 
                   
                   RowBox[{
                    "\"Country\"", ",", "\"InternationalMonetaryFund\""}], 
                   "]"}], "\"EntityClass[\\\"Country\\\", \
\\\"InternationalMonetaryFund\\\"]\"", "\"countries\""}, "EntityClass"], ",", 
               TemplateBox[{"\"International Olympic Committee\"", 
                 RowBox[{"EntityClass", "[", 
                   
                   RowBox[{
                    "\"Country\"", ",", "\"InternationalOlympicCommittee\""}],
                    "]"}], 
                 "\"EntityClass[\\\"Country\\\", \
\\\"InternationalOlympicCommittee\\\"]\"", "\"countries\""}, "EntityClass"], 
               ",", 
               TemplateBox[{"\"International Organization for Migration\"", 
                 RowBox[{"EntityClass", "[", 
                   
                   RowBox[{
                    "\"Country\"", ",", 
                    "\"InternationalOrganizationForMigration\""}], "]"}], 
                 "\"EntityClass[\\\"Country\\\", \
\\\"InternationalOrganizationForMigration\\\"]\"", "\"countries\""}, 
                "EntityClass"], ",", 
               
               TemplateBox[{
                "\"International Organization for Standardization\"", 
                 RowBox[{"EntityClass", "[", 
                   
                   RowBox[{
                    "\"Country\"", ",", 
                    "\"InternationalOrganizationForStandardization\""}], 
                   "]"}], "\"EntityClass[\\\"Country\\\", \
\\\"InternationalOrganizationForStandardization\\\"]\"", "\"countries\""}, 
                "EntityClass"], ",", 
               
               TemplateBox[{
                "\"International Telecommunications Satellite Organization\"", 
                 RowBox[{"EntityClass", "[", 
                   
                   RowBox[{
                    "\"Country\"", ",", 
                    "\"InternationalTelecommunicationsSatellitesOrganization\"\
"}], "]"}], 
                 "\"EntityClass[\\\"Country\\\", \
\\\"InternationalTelecommunicationsSatellitesOrganization\\\"]\"", 
                 "\"countries\""}, "EntityClass"], ",", 
               TemplateBox[{"\"International Telecommunication Union\"", 
                 RowBox[{"EntityClass", "[", 
                   
                   RowBox[{
                    "\"Country\"", ",", 
                    "\"InternationalTelecommunicationUnion\""}], "]"}], 
                 "\"EntityClass[\\\"Country\\\", \
\\\"InternationalTelecommunicationUnion\\\"]\"", "\"countries\""}, 
                "EntityClass"], ",", 
               TemplateBox[{"\"International Trade Union Confederation\"", 
                 RowBox[{"EntityClass", "[", 
                   
                   RowBox[{
                    "\"Country\"", ",", 
                    "\"InternationalTradeUnionConfederation\""}], "]"}], 
                 "\"EntityClass[\\\"Country\\\", \
\\\"InternationalTradeUnionConfederation\\\"]\"", "\"countries\""}, 
                "EntityClass"], ",", 
               TemplateBox[{"\"ITER participants\"", 
                 RowBox[{"EntityClass", "[", 
                   RowBox[{"\"Country\"", ",", "\"ITERParticipants\""}], 
                   "]"}], "\"EntityClass[\\\"Country\\\", \
\\\"ITERParticipants\\\"]\"", "\"countries\""}, "EntityClass"], ",", 
               TemplateBox[{"\"land masses\"", 
                 RowBox[{"EntityClass", "[", 
                   RowBox[{"\"Country\"", ",", "\"LandMasses\""}], "]"}], 
                 "\"EntityClass[\\\"Country\\\", \\\"LandMasses\\\"]\"", 
                 "\"countries\""}, "EntityClass"], ",", 
               TemplateBox[{"\"Multilateral Investment Geographic Agency\"", 
                 RowBox[{"EntityClass", "[", 
                   
                   RowBox[{
                    "\"Country\"", ",", 
                    "\"MultilateralInvestmentGeographicAgency\""}], "]"}], 
                 "\"EntityClass[\\\"Country\\\", \
\\\"MultilateralInvestmentGeographicAgency\\\"]\"", "\"countries\""}, 
                "EntityClass"], ",", 
               TemplateBox[{"\"Nearctic\"", 
                 RowBox[{"EntityClass", "[", 
                   RowBox[{"\"Country\"", ",", "\"Nearctic\""}], "]"}], 
                 "\"EntityClass[\\\"Country\\\", \\\"Nearctic\\\"]\"", 
                 "\"countries\""}, "EntityClass"], ",", 
               TemplateBox[{"\"North America\"", 
                 RowBox[{"EntityClass", "[", 
                   RowBox[{"\"Country\"", ",", "\"NorthAmerica\""}], "]"}], 
                 "\"EntityClass[\\\"Country\\\", \\\"NorthAmerica\\\"]\"", 
                 "\"countries\""}, "EntityClass"], ",", 
               TemplateBox[{"\"North American Free Trade Agreement\"", 
                 RowBox[{"EntityClass", "[", 
                   
                   RowBox[{
                    "\"Country\"", ",", 
                    "\"NorthAmericanFreeTradeAgreement\""}], "]"}], 
                 "\"EntityClass[\\\"Country\\\", \
\\\"NorthAmericanFreeTradeAgreement\\\"]\"", "\"countries\""}, "EntityClass"],
                ",", 
               TemplateBox[{"\"North Atlantic Treaty Organization\"", 
                 RowBox[{"EntityClass", "[", 
                   
                   RowBox[{
                    "\"Country\"", ",", 
                    "\"NorthAtlanticTreatyOrganization\""}], "]"}], 
                 "\"EntityClass[\\\"Country\\\", \
\\\"NorthAtlanticTreatyOrganization\\\"]\"", "\"countries\""}, "EntityClass"],
                ",", 
               TemplateBox[{"\"Northern Hemisphere\"", 
                 RowBox[{"EntityClass", "[", 
                   RowBox[{"\"Country\"", ",", "\"NorthernHemisphere\""}], 
                   "]"}], "\"EntityClass[\\\"Country\\\", \
\\\"NorthernHemisphere\\\"]\"", "\"countries\""}, "EntityClass"], ",", 
               TemplateBox[{"\"Nuclear Armed States\"", 
                 RowBox[{"EntityClass", "[", 
                   RowBox[{"\"Country\"", ",", "\"NuclearArmedStates\""}], 
                   "]"}], "\"EntityClass[\\\"Country\\\", \
\\\"NuclearArmedStates\\\"]\"", "\"countries\""}, "EntityClass"], ",", 
               TemplateBox[{"\"Nuclear Energy Agency\"", 
                 RowBox[{"EntityClass", "[", 
                   RowBox[{"\"Country\"", ",", "\"NuclearEnergyAgency\""}], 
                   "]"}], "\"EntityClass[\\\"Country\\\", \
\\\"NuclearEnergyAgency\\\"]\"", "\"countries\""}, "EntityClass"], ",", 
               TemplateBox[{"\"Nuclear Suppliers Group\"", 
                 RowBox[{"EntityClass", "[", 
                   RowBox[{"\"Country\"", ",", "\"NuclearSuppliersGroup\""}], 
                   "]"}], "\"EntityClass[\\\"Country\\\", \
\\\"NuclearSuppliersGroup\\\"]\"", "\"countries\""}, "EntityClass"], ",", 
               
               TemplateBox[{
                "\"Organization for Economic Cooperation and Development\"", 
                 RowBox[{"EntityClass", "[", 
                   
                   RowBox[{
                    "\"Country\"", ",", 
                    "\"OrganizationForEconomicCooperationAndDevelopment\""}], 
                   "]"}], "\"EntityClass[\\\"Country\\\", \
\\\"OrganizationForEconomicCooperationAndDevelopment\\\"]\"", 
                 "\"countries\""}, "EntityClass"], ",", 
               
               TemplateBox[{
                "\"Organization for Security and Cooperation in Europe\"", 
                 RowBox[{"EntityClass", "[", 
                   
                   RowBox[{
                    "\"Country\"", ",", 
                    "\"OrganizationForSecurityAndCooperationInEurope\""}], 
                   "]"}], "\"EntityClass[\\\"Country\\\", \
\\\"OrganizationForSecurityAndCooperationInEurope\\\"]\"", "\"countries\""}, 
                "EntityClass"], ",", 
               
               TemplateBox[{
                "\"Organization for the Prohibition of Chemical Weapons\"", 
                 RowBox[{"EntityClass", "[", 
                   
                   RowBox[{
                    "\"Country\"", ",", 
                    "\"OrganizationForTheProhibitionOfChemicalWeapons\""}], 
                   "]"}], "\"EntityClass[\\\"Country\\\", \
\\\"OrganizationForTheProhibitionOfChemicalWeapons\\\"]\"", "\"countries\""}, 
                "EntityClass"], ",", 
               TemplateBox[{"\"Organization of American States\"", 
                 RowBox[{"EntityClass", "[", 
                   
                   RowBox[{
                    "\"Country\"", ",", "\"OrganizationOfAmericanStates\""}], 
                   "]"}], "\"EntityClass[\\\"Country\\\", \
\\\"OrganizationOfAmericanStates\\\"]\"", "\"countries\""}, "EntityClass"], 
               ",", 
               TemplateBox[{"\"Pacific rim countries\"", 
                 RowBox[{"EntityClass", "[", 
                   RowBox[{"\"Country\"", ",", "\"PacificRim\""}], "]"}], 
                 "\"EntityClass[\\\"Country\\\", \\\"PacificRim\\\"]\"", 
                 "\"countries\""}, "EntityClass"], ",", 
               TemplateBox[{"\"Paris Club\"", 
                 RowBox[{"EntityClass", "[", 
                   RowBox[{"\"Country\"", ",", "\"ParisClub\""}], "]"}], 
                 "\"EntityClass[\\\"Country\\\", \\\"ParisClub\\\"]\"", 
                 "\"countries\""}, "EntityClass"], ",", 
               TemplateBox[{"\"Permanent Court of Arbitration\"", 
                 RowBox[{"EntityClass", "[", 
                   
                   RowBox[{
                    "\"Country\"", ",", "\"PermanentCourtOfArbitration\""}], 
                   "]"}], "\"EntityClass[\\\"Country\\\", \
\\\"PermanentCourtOfArbitration\\\"]\"", "\"countries\""}, "EntityClass"], 
               ",", 
               TemplateBox[{"\"Secretariat of the Pacific Community\"", 
                 RowBox[{"EntityClass", "[", 
                   
                   RowBox[{
                    "\"Country\"", ",", 
                    "\"SecretariatOfThePacificCommunity\""}], "]"}], 
                 "\"EntityClass[\\\"Country\\\", \
\\\"SecretariatOfThePacificCommunity\\\"]\"", "\"countries\""}, 
                "EntityClass"], ",", 
               TemplateBox[{"\"all sovereign countries\"", 
                 RowBox[{"EntityClass", "[", 
                   RowBox[{"\"Country\"", ",", "\"SovereignCountries\""}], 
                   "]"}], "\"EntityClass[\\\"Country\\\", \
\\\"SovereignCountries\\\"]\"", "\"countries\""}, "EntityClass"], ",", 
               TemplateBox[{"\"Spanish speaking countries\"", 
                 RowBox[{"EntityClass", "[", 
                   RowBox[{"\"Country\"", ",", "\"SpanishSpeaking\""}], "]"}],
                  "\"EntityClass[\\\"Country\\\", \\\"SpanishSpeaking\\\"]\"",
                  "\"countries\""}, "EntityClass"], ",", 
               TemplateBox[{"\"UN Conference on Trade and Development\"", 
                 RowBox[{"EntityClass", "[", 
                   
                   RowBox[{
                    "\"Country\"", ",", 
                    "\"UNConferenceOnTradeAndDevelopment\""}], "]"}], 
                 "\"EntityClass[\\\"Country\\\", \
\\\"UNConferenceOnTradeAndDevelopment\\\"]\"", "\"countries\""}, 
                "EntityClass"], ",", 
               
               TemplateBox[{
                "\"UN Educational Scientific and Cultural Organization\"", 
                 RowBox[{"EntityClass", "[", 
                   
                   RowBox[{
                    "\"Country\"", ",", 
                    "\"UNEducationalScientificAndCulturalOrganization\""}], 
                   "]"}], "\"EntityClass[\\\"Country\\\", \
\\\"UNEducationalScientificAndCulturalOrganization\\\"]\"", "\"countries\""}, 
                "EntityClass"], ",", 
               
               TemplateBox[{
                "\"UN Framework Convention on Climate Change (Annex I)\"", 
                 RowBox[{"EntityClass", "[", 
                   
                   RowBox[{
                    "\"Country\"", ",", 
                    "\"UNFrameworkConventionOnClimateChangeAnnexI\""}], "]"}],
                  "\"EntityClass[\\\"Country\\\", \
\\\"UNFrameworkConventionOnClimateChangeAnnexI\\\"]\"", "\"countries\""}, 
                "EntityClass"], ",", 
               TemplateBox[{"\"UN High Commissioner for Refugees\"", 
                 RowBox[{"EntityClass", "[", 
                   
                   RowBox[{
                    "\"Country\"", ",", "\"UNHighCommissionerForRefugees\""}],
                    "]"}], 
                 "\"EntityClass[\\\"Country\\\", \
\\\"UNHighCommissionerForRefugees\\\"]\"", "\"countries\""}, "EntityClass"], 
               ",", 
               TemplateBox[{"\"United Nations\"", 
                 RowBox[{"EntityClass", "[", 
                   RowBox[{"\"Country\"", ",", "\"UnitedNations\""}], "]"}], 
                 "\"EntityClass[\\\"Country\\\", \\\"UnitedNations\\\"]\"", 
                 "\"countries\""}, "EntityClass"], ",", 
               TemplateBox[{"\"United States with Overseas Territories\"", 
                 RowBox[{"EntityClass", "[", 
                   RowBox[{"\"Country\"", ",", "\"UnitedStatesExtended\""}], 
                   "]"}], "\"EntityClass[\\\"Country\\\", \
\\\"UnitedStatesExtended\\\"]\"", "\"countries\""}, "EntityClass"], ",", 
               TemplateBox[{"\"Universal Postal Union\"", 
                 RowBox[{"EntityClass", "[", 
                   RowBox[{"\"Country\"", ",", "\"UniversalPostalUnion\""}], 
                   "]"}], "\"EntityClass[\\\"Country\\\", \
\\\"UniversalPostalUnion\\\"]\"", "\"countries\""}, "EntityClass"], ",", 
               
               TemplateBox[{
                "\"UN Mission in the Central African Republic and Chad\"", 
                 RowBox[{"EntityClass", "[", 
                   
                   RowBox[{
                    "\"Country\"", ",", 
                    "\"UNMissionInCentralAfricanRepublicAndChad\""}], "]"}], 
                 "\"EntityClass[\\\"Country\\\", \
\\\"UNMissionInCentralAfricanRepublicAndChad\\\"]\"", "\"countries\""}, 
                "EntityClass"], ",", 
               TemplateBox[{"\"UN Mission in Ethiopia and Eritrea\"", 
                 RowBox[{"EntityClass", "[", 
                   
                   RowBox[{
                    "\"Country\"", ",", "\"UNMissionInEthiopiaAndEritrea\""}],
                    "]"}], 
                 "\"EntityClass[\\\"Country\\\", \
\\\"UNMissionInEthiopiaAndEritrea\\\"]\"", "\"countries\""}, "EntityClass"], 
               ",", 
               TemplateBox[{"\"UN Mission in Liberia\"", 
                 RowBox[{"EntityClass", "[", 
                   RowBox[{"\"Country\"", ",", "\"UNMissionInLiberia\""}], 
                   "]"}], "\"EntityClass[\\\"Country\\\", \
\\\"UNMissionInLiberia\\\"]\"", "\"countries\""}, "EntityClass"], ",", 
               TemplateBox[{"\"UN Mission in Sierra Leone\"", 
                 RowBox[{"EntityClass", "[", 
                   RowBox[{"\"Country\"", ",", "\"UNMissionInSierraLeone\""}],
                    "]"}], 
                 "\"EntityClass[\\\"Country\\\", \\\"UNMissionInSierraLeone\\\
\"]\"", "\"countries\""}, "EntityClass"], ",", 
               TemplateBox[{"\"UN Mission in the South Sudan\"", 
                 RowBox[{"EntityClass", "[", 
                   
                   RowBox[{
                    "\"Country\"", ",", "\"UNMissionInTheSouthSudan\""}], 
                   "]"}], "\"EntityClass[\\\"Country\\\", \
\\\"UNMissionInTheSouthSudan\\\"]\"", "\"countries\""}, "EntityClass"], ",", 
               TemplateBox[{"\"UN Mission in the Sudan\"", 
                 RowBox[{"EntityClass", "[", 
                   RowBox[{"\"Country\"", ",", "\"UNMissionInTheSudan\""}], 
                   "]"}], "\"EntityClass[\\\"Country\\\", \
\\\"UNMissionInTheSudan\\\"]\"", "\"countries\""}, "EntityClass"], ",", 
               TemplateBox[{"\"UN Monitoring and Verification Commission\"", 
                 RowBox[{"EntityClass", "[", 
                   
                   RowBox[{
                    "\"Country\"", ",", 
                    "\"UNMonitoringAndVerificationCommission\""}], "]"}], 
                 "\"EntityClass[\\\"Country\\\", \
\\\"UNMonitoringAndVerificationCommission\\\"]\"", "\"countries\""}, 
                "EntityClass"], ",", 
               
               TemplateBox[{
                "\"UN Multidimensional Integrated Stabilization Mission in \
Mali\"", 
                 RowBox[{"EntityClass", "[", 
                   
                   RowBox[{
                    "\"Country\"", ",", 
                    
                    "\"UNMultidimensionalIntegratedStabilizationMissionInMali\
\""}], "]"}], 
                 "\"EntityClass[\\\"Country\\\", \
\\\"UNMultidimensionalIntegratedStabilizationMissionInMali\\\"]\"", 
                 "\"countries\""}, "EntityClass"], ",", 
               TemplateBox[{"\"UN Observer Mission in Georgia\"", 
                 RowBox[{"EntityClass", "[", 
                   
                   RowBox[{
                    "\"Country\"", ",", "\"UNObserverMissionInGeorgia\""}], 
                   "]"}], "\"EntityClass[\\\"Country\\\", \
\\\"UNObserverMissionInGeorgia\\\"]\"", "\"countries\""}, "EntityClass"], ",", 
               
               TemplateBox[{
                "\"UN Organization Mission in the Democratic Republic of the \
Congo\"", 
                 RowBox[{"EntityClass", "[", 
                   
                   RowBox[{
                    "\"Country\"", ",", 
                    "\"UNOrganizationMissionInTheDemocraticRepublicOfTheCongo\
\""}], "]"}], 
                 "\"EntityClass[\\\"Country\\\", \
\\\"UNOrganizationMissionInTheDemocraticRepublicOfTheCongo\\\"]\"", 
                 "\"countries\""}, "EntityClass"], ",", 
               TemplateBox[{"\"UN Relief and Works Agency\"", 
                 RowBox[{"EntityClass", "[", 
                   RowBox[{"\"Country\"", ",", "\"UNReliefAndWorksAgency\""}],
                    "]"}], 
                 "\"EntityClass[\\\"Country\\\", \\\"UNReliefAndWorksAgency\\\
\"]\"", "\"countries\""}, "EntityClass"], ",", 
               TemplateBox[{"\"UN Security Council\"", 
                 RowBox[{"EntityClass", "[", 
                   RowBox[{"\"Country\"", ",", "\"UNSecurityCouncil\""}], 
                   "]"}], "\"EntityClass[\\\"Country\\\", \
\\\"UNSecurityCouncil\\\"]\"", "\"countries\""}, "EntityClass"], ",", 
               
               TemplateBox[{
                "\"Permanent Members of the UN Security Council\"", 
                 RowBox[{"EntityClass", "[", 
                   
                   RowBox[{
                    "\"Country\"", ",", 
                    "\"UNSecurityCouncilPermanentMembers\""}], "]"}], 
                 "\"EntityClass[\\\"Country\\\", \
\\\"UNSecurityCouncilPermanentMembers\\\"]\"", "\"countries\""}, 
                "EntityClass"], ",", 
               TemplateBox[{"\"UN Stabilization Mission in Haiti\"", 
                 RowBox[{"EntityClass", "[", 
                   
                   RowBox[{
                    "\"Country\"", ",", "\"UNStabilizationMissionInHaiti\""}],
                    "]"}], 
                 "\"EntityClass[\\\"Country\\\", \
\\\"UNStabilizationMissionInHaiti\\\"]\"", "\"countries\""}, "EntityClass"], 
               ",", 
               TemplateBox[{"\"UN Truce Supervision Organization\"", 
                 RowBox[{"EntityClass", "[", 
                   
                   RowBox[{
                    "\"Country\"", ",", 
                    "\"UNTruceSupervisionOrganization\""}], "]"}], 
                 "\"EntityClass[\\\"Country\\\", \
\\\"UNTruceSupervisionOrganization\\\"]\"", "\"countries\""}, "EntityClass"], 
               ",", 
               TemplateBox[{"\"Western Hemisphere\"", 
                 RowBox[{"EntityClass", "[", 
                   RowBox[{"\"Country\"", ",", "\"WesternHemisphere\""}], 
                   "]"}], "\"EntityClass[\\\"Country\\\", \
\\\"WesternHemisphere\\\"]\"", "\"countries\""}, "EntityClass"], ",", 
               TemplateBox[{"\"World Customs Organization\"", 
                 RowBox[{"EntityClass", "[", 
                   
                   RowBox[{
                    "\"Country\"", ",", "\"WorldCustomsOrganization\""}], 
                   "]"}], "\"EntityClass[\\\"Country\\\", \
\\\"WorldCustomsOrganization\\\"]\"", "\"countries\""}, "EntityClass"], ",", 
               TemplateBox[{"\"World Health Organization\"", 
                 RowBox[{"EntityClass", "[", 
                   
                   RowBox[{
                    "\"Country\"", ",", "\"WorldHealthOrganization\""}], 
                   "]"}], "\"EntityClass[\\\"Country\\\", \
\\\"WorldHealthOrganization\\\"]\"", "\"countries\""}, "EntityClass"], ",", 
               TemplateBox[{"\"World Intellectual Property Organization\"", 
                 RowBox[{"EntityClass", "[", 
                   
                   RowBox[{
                    "\"Country\"", ",", 
                    "\"WorldIntellectualPropertyOrganization\""}], "]"}], 
                 "\"EntityClass[\\\"Country\\\", \
\\\"WorldIntellectualPropertyOrganization\\\"]\"", "\"countries\""}, 
                "EntityClass"], ",", 
               TemplateBox[{"\"World Meteorological Organization\"", 
                 RowBox[{"EntityClass", "[", 
                   
                   RowBox[{
                    "\"Country\"", ",", 
                    "\"WorldMeteorologicalOrganization\""}], "]"}], 
                 "\"EntityClass[\\\"Country\\\", \
\\\"WorldMeteorologicalOrganization\\\"]\"", "\"countries\""}, "EntityClass"],
                ",", 
               TemplateBox[{"\"World Trade Organization\"", 
                 RowBox[{"EntityClass", "[", 
                   RowBox[{"\"Country\"", ",", "\"WorldTradeOrganization\""}],
                    "]"}], 
                 "\"EntityClass[\\\"Country\\\", \\\"WorldTradeOrganization\\\
\"]\"", "\"countries\""}, "EntityClass"], ",", 
               TemplateBox[{"\"Zangger Committee\"", 
                 RowBox[{"EntityClass", "[", 
                   RowBox[{"\"Country\"", ",", "\"ZanggerCommittee\""}], 
                   "]"}], "\"EntityClass[\\\"Country\\\", \
\\\"ZanggerCommittee\\\"]\"", "\"countries\""}, "EntityClass"]}], "}"}]}], 
         ",", 
         RowBox[{
           TemplateBox[{"\"climate types\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"ClimateTypes\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"ClimateTypes\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           RowBox[{"{", 
             RowBox[{
               TemplateBox[{"\"tropical rainforest\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"ClimateType\"", ",", "\"TropicalRainforest\""}],
                    "]"}], 
                 "\"Entity[\\\"ClimateType\\\", \
\\\"TropicalRainforest\\\"]\"", "\"climate type\""}, "Entity"], ",", 
               TemplateBox[{"\"tropical monsoon\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"ClimateType\"", ",", "\"TropicalMonsoon\""}], 
                   "]"}], "\"Entity[\\\"ClimateType\\\", \
\\\"TropicalMonsoon\\\"]\"", "\"climate type\""}, "Entity"], ",", 
               TemplateBox[{"\"dry-winter tropical savanna\"", 
                 RowBox[{"Entity", "[", 
                   
                   RowBox[{
                    "\"ClimateType\"", ",", "\"DryWinterTropicalSavanna\""}], 
                   "]"}], "\"Entity[\\\"ClimateType\\\", \
\\\"DryWinterTropicalSavanna\\\"]\"", "\"climate type\""}, "Entity"], ",", 
               TemplateBox[{"\"hot semi-arid\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"ClimateType\"", ",", "\"HotSemiArid\""}], "]"}],
                  "\"Entity[\\\"ClimateType\\\", \\\"HotSemiArid\\\"]\"", 
                 "\"climate type\""}, "Entity"], ",", 
               TemplateBox[{"\"cold semi-arid\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"ClimateType\"", ",", "\"ColdSemiArid\""}], 
                   "]"}], "\"Entity[\\\"ClimateType\\\", \
\\\"ColdSemiArid\\\"]\"", "\"climate type\""}, "Entity"], ",", 
               TemplateBox[{"\"hot desert\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"ClimateType\"", ",", "\"HotDesert\""}], "]"}], 
                 "\"Entity[\\\"ClimateType\\\", \\\"HotDesert\\\"]\"", 
                 "\"climate type\""}, "Entity"], ",", 
               TemplateBox[{"\"cold desert\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"ClimateType\"", ",", "\"ColdDesert\""}], "]"}], 
                 "\"Entity[\\\"ClimateType\\\", \\\"ColdDesert\\\"]\"", 
                 "\"climate type\""}, "Entity"], ",", 
               TemplateBox[{"\"humid subtropical\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"ClimateType\"", ",", "\"HumidSubtropical\""}], 
                   "]"}], "\"Entity[\\\"ClimateType\\\", \\\"HumidSubtropical\
\\\"]\"", "\"climate type\""}, "Entity"], ",", 
               TemplateBox[{"\"temperate oceanic\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"ClimateType\"", ",", "\"TemperateOceanic\""}], 
                   "]"}], "\"Entity[\\\"ClimateType\\\", \\\"TemperateOceanic\
\\\"]\"", "\"climate type\""}, "Entity"], ",", 
               TemplateBox[{"\"subpolar oceanic\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"ClimateType\"", ",", "\"SubpolarOceanic\""}], 
                   "]"}], 
                 "\"Entity[\\\"ClimateType\\\", \\\"SubpolarOceanic\\\"]\"", 
                 "\"climate type\""}, "Entity"], ",", 
               TemplateBox[{"\"hot-summer Mediterranean\"", 
                 RowBox[{"Entity", "[", 
                   
                   RowBox[{
                    "\"ClimateType\"", ",", "\"HotSummerMediterranean\""}], 
                   "]"}], "\"Entity[\\\"ClimateType\\\", \
\\\"HotSummerMediterranean\\\"]\"", "\"climate type\""}, "Entity"], ",", 
               TemplateBox[{"\"warm-summer Mediterranean\"", 
                 RowBox[{"Entity", "[", 
                   
                   RowBox[{
                    "\"ClimateType\"", ",", "\"WarmSummerMediterranean\""}], 
                   "]"}], "\"Entity[\\\"ClimateType\\\", \
\\\"WarmSummerMediterranean\\\"]\"", "\"climate type\""}, "Entity"], ",", 
               TemplateBox[{"\"hot-summer humid continental\"", 
                 RowBox[{"Entity", "[", 
                   
                   RowBox[{
                    "\"ClimateType\"", ",", "\"HotSummerHumidContinental\""}],
                    "]"}], 
                 "\"Entity[\\\"ClimateType\\\", \\\"HotSummerHumidContinental\
\\\"]\"", "\"climate type\""}, "Entity"], ",", 
               TemplateBox[{"\"warm-summer humid continental\"", 
                 RowBox[{"Entity", "[", 
                   
                   RowBox[{
                    "\"ClimateType\"", ",", 
                    "\"WarmSummerHumidContinental\""}], "]"}], 
                 "\"Entity[\\\"ClimateType\\\", \
\\\"WarmSummerHumidContinental\\\"]\"", "\"climate type\""}, "Entity"], ",", 
               TemplateBox[{"\"subartic\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"ClimateType\"", ",", "\"Subartic\""}], "]"}], 
                 "\"Entity[\\\"ClimateType\\\", \\\"Subartic\\\"]\"", 
                 "\"climate type\""}, "Entity"], ",", 
               
               TemplateBox[{
                "\"Mediterranean-influenced warm-summer humid continental\"", 
                 RowBox[{"Entity", "[", 
                   
                   RowBox[{
                    "\"ClimateType\"", ",", 
                    "\"MediterraneanInfluencedWarmSummerHumidContinental\""}],
                    "]"}], 
                 "\"Entity[\\\"ClimateType\\\", \
\\\"MediterraneanInfluencedWarmSummerHumidContinental\\\"]\"", 
                 "\"climate type\""}, "Entity"], ",", 
               TemplateBox[{"\"Mediterranean-influenced subarctic\"", 
                 RowBox[{"Entity", "[", 
                   
                   RowBox[{
                    "\"ClimateType\"", ",", 
                    "\"MediterraneanInfluencedSubarctic\""}], "]"}], 
                 "\"Entity[\\\"ClimateType\\\", \
\\\"MediterraneanInfluencedSubarctic\\\"]\"", "\"climate type\""}, "Entity"], 
               ",", 
               
               TemplateBox[{
                "\"monsoon-influenced hot-summer humid continental\"", 
                 RowBox[{"Entity", "[", 
                   
                   RowBox[{
                    "\"ClimateType\"", ",", 
                    "\"MonsoonInfluencedHotSummerHumidContinental\""}], "]"}],
                  "\"Entity[\\\"ClimateType\\\", \
\\\"MonsoonInfluencedHotSummerHumidContinental\\\"]\"", "\"climate type\""}, 
                "Entity"], ",", 
               
               TemplateBox[{
                "\"monsoon-influenced warm-summer humid continental\"", 
                 RowBox[{"Entity", "[", 
                   
                   RowBox[{
                    "\"ClimateType\"", ",", 
                    "\"MonsoonInfluencedWarmSummerHumidContinental\""}], 
                   "]"}], "\"Entity[\\\"ClimateType\\\", \
\\\"MonsoonInfluencedWarmSummerHumidContinental\\\"]\"", "\"climate type\""}, 
                "Entity"], ",", 
               TemplateBox[{"\"monsoon-influenced subarctic\"", 
                 RowBox[{"Entity", "[", 
                   
                   RowBox[{
                    "\"ClimateType\"", ",", 
                    "\"MonsoonInfluencedSubarctic\""}], "]"}], 
                 "\"Entity[\\\"ClimateType\\\", \
\\\"MonsoonInfluencedSubarctic\\\"]\"", "\"climate type\""}, "Entity"], ",", 
               TemplateBox[{"\"polar tundra\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"ClimateType\"", ",", "\"PolarTundra\""}], "]"}],
                  "\"Entity[\\\"ClimateType\\\", \\\"PolarTundra\\\"]\"", 
                 "\"climate type\""}, "Entity"]}], "}"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"lignite brown coal\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"CoalLigniteBrown\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"CoalLigniteBrown\\\"]\""},
             "EntityProperty"], "\[Rule]", 
           TemplateBox[{"5.06769`*^8", 
             
             RowBox[{"\"t\"", "\[InvisibleSpace]", "\"/\"", 
               "\[InvisibleSpace]", "\"yr\""}], "metric tons per year", 
             FractionBox["\"MetricTons\"", "\"Years\""]}, "Quantity", 
            SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"coal\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"CoalTotal\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"CoalTotal\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           TemplateBox[{"2.1844498855597527`*^19", 
             
             RowBox[{"\"J\"", "\[InvisibleSpace]", "\"/\"", 
               "\[InvisibleSpace]", "\"yr\""}], "joules per year", 
             FractionBox["\"Joules\"", "\"Years\""]}, "Quantity", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"coal\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"CoalTotalShortTons\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"CoalTotalShortTons\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{"9.221155656541413`*^8", 
             
             RowBox[{"\"t\"", "\[InvisibleSpace]", "\"/\"", 
               "\[InvisibleSpace]", "\"yr\""}], "metric tons per year", 
             FractionBox["\"MetricTons\"", "\"Years\""]}, "Quantity", 
            SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"coast guard\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"CoastGuard\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"CoastGuard\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           RowBox[{"Missing", "[", "\"NotAvailable\"", "]"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"coastline length\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"CoastlineLength\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"CoastlineLength\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{"19924.`", "\"km\"", "kilometers", "\"Kilometers\""}, 
            "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"commercial banks assets\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"CommercialBanksAssets\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"CommercialBanksAssets\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{
             InterpretationBox[
             "1.69913119`*^13", 1.69913119*^13, Selectable -> False], 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             "US dollars", "\"USDollars\""}, "QuantityPrefix", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"commercial banks credit\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"CommercialBanksCredit\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"CommercialBanksCredit\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{
             InterpretationBox[
             "1.71768206`*^13", 1.71768206*^13, Selectable -> False], 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             "US dollars", "\"USDollars\""}, "QuantityPrefix", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"commercial paper\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"CommercialPaper\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"CommercialPaper\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{"2.26`", "\"%\"", "percent", "\"Percent\""}, 
            "QuantityPostfix", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"commercial paper of nonfinancial companies\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{
                "\"Country\"", ",", "\"CommercialPaperNonFinancial\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"CommercialPaperNonFinancial\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{
             InterpretationBox[
             "2.48451542`*^11", 2.48451542*^11, Selectable -> False], 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             "US dollars", "\"USDollars\""}, "QuantityPrefix", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"community and traditional health workers\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", 
                 "\"CommunityAndTraditionalHealthWorkers\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"CommunityAndTraditionalHealthWorkers\\\"]\""}, "EntityProperty"], 
           "\[Rule]", 
           RowBox[{"Missing", "[", "\"NotApplicable\"", "]"}]}], ",", 
         RowBox[{
           
           TemplateBox[{
            "\"community and traditional health workers per capita\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", 
                 "\"CommunityAndTraditionalHealthWorkersPopulationRatio\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"CommunityAndTraditionalHealthWorkersPopulationRatio\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           RowBox[{"Missing", "[", "\"NotAvailable\"", "]"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"compensation per hour index\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"CompensationPerHourIndex\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"CompensationPerHourIndex\\\"]\""}, "EntityProperty"], "\[Rule]", 
           "141.942`"}], ",", 
         RowBox[{
           TemplateBox[{"\"school completion rate\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"CompletionRate\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"CompletionRate\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           RowBox[{"Missing", "[", "\"NotAvailable\"", "]"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"prevalence of condom use by young people\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"CondomUseByYoungPeople\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"CondomUseByYoungPeople\\\"]\""}, "EntityProperty"], "\[Rule]", 
           RowBox[{"Missing", "[", "\"NotApplicable\"", "]"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"construction value added\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"ConstructionValueAdded\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"ConstructionValueAdded\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{"8.927`*^11", 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
             "US dollars per year", 
             FractionBox["\"USDollars\"", "\"Years\""]}, "QuantityPrefixUnit",
             SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"consumer credit\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"ConsumerCredit\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"ConsumerCredit\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           TemplateBox[{
             InterpretationBox[
             "4.58794283`*^12", 4.58794283*^12, Selectable -> False], 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             "US dollars", "\"USDollars\""}, "QuantityPrefix", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"consumer price index\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"ConsumerPriceIndex\""}], "]"}], 
             
             "\"EntityProperty[\\\"Country\\\", \
\\\"ConsumerPriceIndex\\\"]\""}, "EntityProperty"], "\[Rule]", "292.296`"}], 
         ",", 
         RowBox[{
           TemplateBox[{"\"consumer sentiment\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"ConsumerSentiment\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"ConsumerSentiment\\\"]\""}, "EntityProperty"], "\[Rule]", "58.4`"}], ",", 
         RowBox[{
           TemplateBox[{"\"container port traffic\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"ContainerPortTraffic\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"ContainerPortTraffic\\\"]\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{
            "55518880", "\"TEU\"", "20\[Hyphen]foot equivalent units", 
             "\"TwentyFootEquivalentUnits\""}, "Quantity", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"continent\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"Continent\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"Continent\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           TemplateBox[{"\"North America\"", 
             RowBox[{"EntityClass", "[", 
               RowBox[{"\"Country\"", ",", "\"NorthAmerica\""}], "]"}], 
             "\"EntityClass[\\\"Country\\\", \\\"NorthAmerica\\\"]\"", 
             "\"countries\""}, "EntityClass"]}], ",", 
         RowBox[{
           TemplateBox[{"\"contraceptive prevalence\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"ContraceptivePrevalence\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"ContraceptivePrevalence\\\"]\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{"72.8`", "\"%\"", "percent", "\"Percent\""}, 
            "QuantityPostfix", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"contributing family workers\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"ContributingFamilyWorkers\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"ContributingFamilyWorkers\\\"]\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{"80594", "\"people\"", "people", "\"People\""}, 
            "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"contributing family workers fraction\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", "\"ContributingFamilyWorkersFraction\""}],
                "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"ContributingFamilyWorkersFraction\\\"]\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{
            "0.05000000074505811`", "\"%\"", "percent", "\"Percent\""}, 
            "QuantityPostfix", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"conventional mortgage rate\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"ConventionalMortgageRate\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"ConventionalMortgageRate\\\"]\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{"3.42`", "\"%\"", "percent", "\"Percent\""}, 
            "QuantityPostfix", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"corporate bond yield\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"CorporateBondYield\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"CorporateBondYield\\\"]\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{"4.2`", "\"%\"", "percent", "\"Percent\""}, 
            "QuantityPostfix", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"corporate capital consumption adjustment\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", 
                 "\"CorporateCapitalConsumptionAdjustment\""}], "]"}], 
             
             "\"EntityProperty[\\\"Country\\\", \
\\\"CorporateCapitalConsumptionAdjustment\\\"]\""}, "EntityProperty"], 
           "\[Rule]", 
           TemplateBox[{
             RowBox[{"-", "7.3797`*^10"}], 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
             "US dollars per year", 
             FractionBox["\"USDollars\"", "\"Years\""]}, "QuantityPrefixUnit",
             SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"corporate cash flow\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"CorporateCashFlow\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"CorporateCashFlow\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{"3.158456`*^12", 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
             "US dollars per year", 
             FractionBox["\"USDollars\"", "\"Years\""]}, "QuantityPrefixUnit",
             SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"corporate dividends\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"CorporateDividends\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"CorporateDividends\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{"1.476512`*^12", 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
             "US dollars per year", 
             FractionBox["\"USDollars\"", "\"Years\""]}, "QuantityPrefixUnit",
             SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"corporate inventory valuation adjustment\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", 
                 "\"CorporateInventoryValuationAdjustment\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"CorporateInventoryValuationAdjustment\\\"]\""}, "EntityProperty"], 
           "\[Rule]", 
           TemplateBox[{
             RowBox[{"-", "2.5004`*^11"}], 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
             "US dollars per year", 
             FractionBox["\"USDollars\"", "\"Years\""]}, "QuantityPrefixUnit",
             SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"corporate profits\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"CorporateProfits\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"CorporateProfits\\\"]\""},
             "EntityProperty"], "\[Rule]", 
           TemplateBox[{"2.726711`*^12", 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
             "US dollars per year", 
             FractionBox["\"USDollars\"", "\"Years\""]}, "QuantityPrefixUnit",
             SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"corporate proprietors income\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"CorporateProprietorsIncome\""}],
                "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"CorporateProprietorsIncome\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{"1.878202`*^12", 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
             "US dollars per year", 
             FractionBox["\"USDollars\"", "\"Years\""]}, "QuantityPrefixUnit",
             SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"typical cost of business start up procedures\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", "\"CostOfBusinessStartUpProcedures\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"CostOfBusinessStartUpProcedures\\\"]\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{"1.`2.", "\"%\"", "percent", "\"Percent\""}, 
            "QuantityPostfix", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"typical cost to export one container\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"CostToExport\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"CostToExport\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           TemplateBox[{"1224", 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             "US dollars", "\"USDollars\""}, "QuantityPrefix", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"typical cost to import one container\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"CostToImport\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"CostToImport\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           TemplateBox[{"1289", 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             "US dollars", "\"USDollars\""}, "QuantityPrefix", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"country code\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"CountryCode\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"CountryCode\\\"]\""}, 
            "EntityProperty"], "\[Rule]", "\"US\""}], ",", 
         RowBox[{
           TemplateBox[{"\"consumer price index\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"CPI\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"CPI\\\"]\""}, 
            "EntityProperty"], "\[Rule]", "118.690501577198`"}], ",", 
         RowBox[{
           TemplateBox[{"\"CPIA rating\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"Cpia\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"Cpia\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           RowBox[{"Missing", "[", "\"NotAvailable\"", "]"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"credit depth of information\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", "\"CreditDepthOfInformationIndex\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"CreditDepthOfInformationIndex\\\"]\""}, "EntityProperty"], "\[Rule]", 
           "8"}], ",", 
         RowBox[{
           TemplateBox[{"\"total rate of crime\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"CrimeRate\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"CrimeRate\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           TemplateBox[{"0.024766`", 
             RowBox[{
               FrameBox[
                StyleBox[
                "\"crimes\"", ShowStringCharacters -> False, StripOnInput -> 
                 False], FrameMargins -> 1, FrameStyle -> GrayLevel[0.85], 
                BaselinePosition -> Baseline, RoundingRadius -> 3, 
                StripOnInput -> False], "\[InvisibleSpace]", "\"/(\"", 
               "\[InvisibleSpace]", "\"person\"", "\[ThinSpace]", "\"yr\"", 
               "\[InvisibleSpace]", "\")\""}], "crimes per person year", 
             FractionBox[
              RowBox[{"IndependentUnit", "[", "\"crimes\"", "]"}], 
              RowBox[{"\"People\"", " ", "\"Years\""}]]}, "Quantity", 
            SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"total number of crimes\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"CrimeTotal\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"CrimeTotal\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           TemplateBox[{"8129485", 
             RowBox[{
               FrameBox[
                StyleBox[
                "\"crimes\"", ShowStringCharacters -> False, StripOnInput -> 
                 False], FrameMargins -> 1, FrameStyle -> GrayLevel[0.85], 
                BaselinePosition -> Baseline, RoundingRadius -> 3, 
                StripOnInput -> False], "\[InvisibleSpace]", "\"/\"", 
               "\[InvisibleSpace]", "\"yr\""}], "crimes per year", 
             FractionBox[
              RowBox[{"IndependentUnit", "[", "\"crimes\"", "]"}], 
              "\"Years\""]}, "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"perennial-crop land area\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"CropsLandArea\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"CropsLandArea\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           TemplateBox[{"19240.`", 
             RowBox[{
               SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
             SuperscriptBox["\"Kilometers\"", "2"]}, "Quantity", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"perennial-crop land fraction\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"CropsLandFraction\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"CropsLandFraction\\\"]\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{"0.21`", "\"%\"", "percent", "\"Percent\""}, 
            "QuantityPostfix", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"currency code\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"CurrencyCode\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"CurrencyCode\\\"]\""}, 
            "EntityProperty"], "\[Rule]", "\"USD\""}], ",", 
         RowBox[{
           TemplateBox[{"\"currency in circulation\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"CurrencyInCirculation\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"CurrencyInCirculation\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{
             InterpretationBox[
             "2.283569`*^12", 2.283569*^12, Selectable -> False], 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             "US dollars", "\"USDollars\""}, "QuantityPrefix", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"currency name\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"CurrencyName\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"CurrencyName\\\"]\""}, 
            "EntityProperty"], "\[Rule]", "\"US Dollar\""}], ",", 
         RowBox[{
           TemplateBox[{"\"currency short name\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"CurrencyShortName\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"CurrencyShortName\\\"]\""}, "EntityProperty"], "\[Rule]", "\"Dollar\""}], 
         ",", 
         RowBox[{
           TemplateBox[{"\"currency unit\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"CurrencyUnit\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"CurrencyUnit\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           TemplateBox[{"1", 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             "US dollar", "\"USDollars\""}, "QuantityPrefix", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"current account\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"CurrentAccount\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"CurrentAccount\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           TemplateBox[{
             RowBox[{"-", "2.91418`*^11"}], 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             RowBox[{"\"per \"", "\[InvisibleSpace]", "\"quarter year\""}], 
             "US dollars per quarter year", 
             FractionBox["\"USDollars\"", "\"QuarterYears\""]}, 
            "QuantityPrefixUnit", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"current account balance\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"CurrentAccountBalance\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"CurrentAccountBalance\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{
             RowBox[{"-", "4.80225`*^11"}], 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
             "US dollars per year", 
             FractionBox["\"USDollars\"", "\"Years\""]}, "QuantityPrefixUnit",
             SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"current expenditure on health\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"CurrentExpenditureOnHealth\""}],
                "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"CurrentExpenditureOnHealth\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{"2098107000000", 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
             "US dollars per year", 
             FractionBox["\"USDollars\"", "\"Years\""]}, "QuantityPrefixUnit",
             SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"average daily hotel stays\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"DailyAverageHotels\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"DailyAverageHotels\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{"82157.42642026009`", 
             RowBox[{"\"per \"", "\[InvisibleSpace]", "\"day\""}], 
             "reciprocal days", 
             FractionBox["1", "\"Days\""]}, "Quantity", SyntaxForm -> Mod]}], 
         ",", 
         RowBox[{
           TemplateBox[{"\"daily newspaper circulation\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"DailyNewspapers\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"DailyNewspapers\\\"]\""}, 
            "EntityProperty"], "\[Rule]", "56566790"}], ",", 
         RowBox[{
           TemplateBox[{"\"death rate fraction\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"DeathRateFraction\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"DeathRateFraction\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{"0.008331`", 
             
             RowBox[{"\"people\"", "\[InvisibleSpace]", "\"/(\"", 
               "\[InvisibleSpace]", "\"person\"", "\[ThinSpace]", "\"yr\"", 
               "\[InvisibleSpace]", "\")\""}], "people per person year", 
             FractionBox["\"People\"", 
              RowBox[{"\"People\"", " ", "\"Years\""}]]}, "Quantity", 
            SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"debt measure\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"DebtMeasure\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"DebtMeasure\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           TemplateBox[{
             InterpretationBox[
             "1.948353`*^13", 1.948353*^13, Selectable -> False], 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             "US dollars", "\"USDollars\""}, "QuantityPrefix", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"DEC alternative conversion factor\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", "\"DecAlternativeConversionFactor\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"DecAlternativeConversionFactor\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{"1", 
             RowBox[{"\"/\"", "\[InvisibleSpace]", "\"$\""}], 
             "reciprocal US dollar", 
             FractionBox["1", "\"USDollars\""]}, "Quantity", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"demand deposits\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"DemandDeposits\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"DemandDeposits\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           TemplateBox[{
             InterpretationBox[
             "4.8895`*^12", 4.8895*^12, Selectable -> False], 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             "US dollars", "\"USDollars\""}, "QuantityPrefix", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"dentistry personnel\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"DentistryPersonnel\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"DentistryPersonnel\\\"]\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{"463663.`", "\"people\"", "people", "\"People\""}, 
            "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"dentistry personnel per capita\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", "\"DentistryPersonnelPopulationRatio\""}],
                "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"DentistryPersonnelPopulationRatio\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{"0.0016500000000000002`", 
             
             RowBox[{"\"people\"", "\[InvisibleSpace]", "\"/\"", 
               "\[InvisibleSpace]", "\"person\""}], "people per person", 
             FractionBox["\"People\"", "\"People\""]}, "Quantity", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"dependencies\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"Dependencies\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"Dependencies\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           RowBox[{"{", 
             RowBox[{
               TemplateBox[{"\"American Samoa\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"AmericanSamoa\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"AmericanSamoa\\\"]\"", 
                 "\"country\""}, "Entity"], ",", 
               TemplateBox[{"\"Guam\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"Guam\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"Guam\\\"]\"", "\"country\""}, 
                "Entity"], ",", 
               TemplateBox[{"\"Northern Mariana Islands\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"NorthernMarianaIslands\""}],
                    "]"}], 
                 "\"Entity[\\\"Country\\\", \
\\\"NorthernMarianaIslands\\\"]\"", "\"country\""}, "Entity"], ",", 
               TemplateBox[{"\"Puerto Rico\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Country\"", ",", "\"PuertoRico\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \\\"PuertoRico\\\"]\"", 
                 "\"country\""}, "Entity"], ",", 
               TemplateBox[{"\"United States Minor Outlying Islands\"", 
                 RowBox[{"Entity", "[", 
                   
                   RowBox[{
                    "\"Country\"", ",", 
                    "\"UnitedStatesMinorOutlyingIslands\""}], "]"}], 
                 "\"Entity[\\\"Country\\\", \
\\\"UnitedStatesMinorOutlyingIslands\\\"]\"", "\"country\""}, "Entity"], ",", 
               TemplateBox[{"\"United States Virgin Islands\"", 
                 RowBox[{"Entity", "[", 
                   
                   RowBox[{
                    "\"Country\"", ",", "\"UnitedStatesVirginIslands\""}], 
                   "]"}], 
                 "\"Entity[\\\"Country\\\", \
\\\"UnitedStatesVirginIslands\\\"]\"", "\"country\""}, "Entity"]}], "}"}]}], 
         ",", 
         RowBox[{
           TemplateBox[{"\"dependency parent\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"DependencyParent\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"DependencyParent\\\"]\""},
             "EntityProperty"], "\[Rule]", 
           RowBox[{"Missing", "[", "\"None\"", "]"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"deposit interest rate\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"DepositInterestRate\""}], "]"}],
              "\"EntityProperty[\\\"Country\\\", \\\"DepositInterestRate\\\"]\
\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{"0.2825`", "\"%\"", "percent", "\"Percent\""}, 
            "QuantityPostfix", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"deposits with Federal Reserve banks\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", "\"DepositsWithFederalReserveBanks\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"DepositsWithFederalReserveBanks\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{
             InterpretationBox[
             "7.00457`*^11", 7.00457*^11, Selectable -> False], 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             "US dollars", "\"USDollars\""}, "QuantityPrefix", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"destroyers\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"Destroyers\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"Destroyers\\\"]\""}, 
            "EntityProperty"], "\[Rule]", "65"}], ",", 
         RowBox[{
           TemplateBox[{"\"discount rate changes\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"DiscountRateChanges\""}], "]"}],
              "\"EntityProperty[\\\"Country\\\", \\\"DiscountRateChanges\\\"]\
\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{"0.75`", "\"%\"", "percent", "\"Percent\""}, 
            "QuantityPostfix", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"discount window borrowing\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"DiscountWindowBorrowing\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"DiscountWindowBorrowing\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{
             InterpretationBox[
             "8.3126`*^10", 8.3126*^10, Selectable -> False], 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             "US dollars", "\"USDollars\""}, "QuantityPrefix", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"discrepancy in expenditure estimate of GDP\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", 
                 "\"DiscrepancyInExpenditureEstimateOfGDP\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"DiscrepancyInExpenditureEstimateOfGDP\\\"]\""}, "EntityProperty"], 
           "\[Rule]", 
           RowBox[{"Missing", "[", "\"NotAvailable\"", "]"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"disposable personal income\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"DisposablePersonalIncome\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"DisposablePersonalIncome\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{"1.84812`*^13", 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
             "US dollars per year", 
             FractionBox["\"USDollars\"", "\"Years\""]}, "QuantityPrefixUnit",
             SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"typical documents required per export shipment\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"DocumentsToExport\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"DocumentsToExport\\\"]\""}, "EntityProperty"], "\[Rule]", "1.8`"}], ",", 
         RowBox[{
           TemplateBox[{"\"typical documents required per import shipment\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"DocumentsToImport\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"DocumentsToImport\\\"]\""}, "EntityProperty"], "\[Rule]", "3"}], ",", 
         RowBox[{
           TemplateBox[{"\"improved drinking water sources\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"DrinkingWater\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"DrinkingWater\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{"99.`", "\"%\"", "percent", "\"Percent\""}, 
            "QuantityPostfix", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"natural gas\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"DryNaturalGas\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"DryNaturalGas\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           TemplateBox[{"2.618247704978844`*^19", 
             
             RowBox[{"\"J\"", "\[InvisibleSpace]", "\"/\"", 
               "\[InvisibleSpace]", "\"yr\""}], "joules per year", 
             FractionBox["\"Joules\"", "\"Years\""]}, "Quantity", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"natural gas\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"DryNaturalGasCubicFeet\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"DryNaturalGasCubicFeet\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{"2.4282`*^13", 
             RowBox[{
               SuperscriptBox["\"ft\"", "3"], "\[NegativeMediumSpace]", 
               "\"/\"", "\[InvisibleSpace]", "\"yr\""}], 
             "feet cubed per year", 
             FractionBox[
              SuperscriptBox["\"Feet\"", "3"], "\"Years\""]}, "Quantity", 
            SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"ease of doing business\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"EaseOfDoingBusinessIndex\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"EaseOfDoingBusinessIndex\\\"]\""}, "EntityProperty"], "\[Rule]", "6"}], 
         ",", 
         RowBox[{
           TemplateBox[{"\"economic aid\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"EconomicAid\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"EconomicAid\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           TemplateBox[{
             RowBox[{"-", "2.353`*^10"}], 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
             "US dollars per year", 
             FractionBox["\"USDollars\"", "\"Years\""]}, "QuantityPrefixUnit",
             SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"economically active children\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", 
                 "\"EconomicallyActiveChildrenFraction\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"EconomicallyActiveChildrenFraction\\\"]\""}, "EntityProperty"], "\[Rule]", 
           RowBox[{"Missing", "[", "\"NotAvailable\"", "]"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"total school duration\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"EducationDuration\""}], "]"}], 
             
             "\"EntityProperty[\\\"Country\\\", \
\\\"EducationDuration\\\"]\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{"12", "\"yr\"", "years", "\"Years\""}, "Quantity", 
            SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"effective federal funds rate\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"EffectiveFederalFundsRate\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"EffectiveFederalFundsRate\\\"]\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{"1.58`", "\"%\"", "percent", "\"Percent\""}, 
            "QuantityPostfix", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"elderly population\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"ElderlyPopulation\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"ElderlyPopulation\\\"]\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{"5.479626`*^7", "\"people\"", "people", "\"People\""},
             "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"electrical grid frequency\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"ElectricalGridFrequency\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"ElectricalGridFrequency\\\"]\""}, "EntityProperty"], "\[Rule]", 
           RowBox[{"{", 
             
             TemplateBox[{"60", "\"Hz\"", "hertz", "\"Hertz\""}, "Quantity", 
              SyntaxForm -> Mod], "}"}]}], ",", 
         TemplateBox[{"379"}, "OutputSizeLimit`Skeleton"], ",", 
         RowBox[{
           
           TemplateBox[{
            "\"proportion of seats held by women in national parliaments\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", 
                 "\"ProportionOfSeatsHeldByWomenInNationalParliaments\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"ProportionOfSeatsHeldByWomenInNationalParliaments\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{
            "27.464788732394403`", "\"%\"", "percent", "\"Percent\""}, 
            "QuantityPostfix", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"public credit registry coverage\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", "\"PublicCreditRegistryCoverage\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"PublicCreditRegistryCoverage\\\"]\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{"0", "\"%\"", "percent", "\"Percent\""}, 
            "QuantityPostfix", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"public spending on education\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"PublicSpendingOnEducation\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"PublicSpendingOnEducation\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{"8.696522948889144`*^11", 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
             "US dollars per year", 
             FractionBox["\"USDollars\"", "\"Years\""]}, "QuantityPrefixUnit",
             SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"public education spending\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", "\"PublicSpendingOnEducationFraction\""}],
                "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"PublicSpendingOnEducationFraction\\\"]\""}, "EntityProperty"], "\[Rule]", 
           RowBox[{"Missing", "[", "\"NotAvailable\"", "]"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"pump price for diesel fuel\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"PumpPriceForDieselFuel\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"PumpPriceForDieselFuel\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{"0.65`", 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             RowBox[{"\"per \"", "\[InvisibleSpace]", "\"liter\""}], 
             "US dollars per liter", 
             FractionBox["\"USDollars\"", "\"Liters\""]}, 
            "QuantityPrefixUnit", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"pump price for gasoline\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"PumpPriceForGasoline\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"PumpPriceForGasoline\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{"0.71`", 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             RowBox[{"\"per \"", "\[InvisibleSpace]", "\"liter\""}], 
             "US dollars per liter", 
             FractionBox["\"USDollars\"", "\"Liters\""]}, 
            "QuantityPrefixUnit", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"students\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"Pupils\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"Pupils\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{
            "4.9829312`*^7", "\"people\"", "people", "\"People\""}, 
            "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"fraction of students\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"PupilsFraction\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"PupilsFraction\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           RowBox[{"Missing", "[", "\"NotAvailable\"", "]"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"student/teacher ratio\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"PupilTeacherRatio\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"PupilTeacherRatio\\\"]\""}, "EntityProperty"], "\[Rule]", 
           RowBox[{"Missing", "[", "\"NotAvailable\"", "]"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"quality of port infrastructure\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", "\"QualityOfPortInfrastructure\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"QualityOfPortInfrastructure\\\"]\""}, "EntityProperty"], "\[Rule]", 
           "5.8`"}], ",", 
         RowBox[{
           TemplateBox[{"\"radio receivers\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"RadioReceivers\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"RadioReceivers\\\"]\""}, 
            "EntityProperty"], "\[Rule]", "5.75`*^8"}], ",", 
         RowBox[{
           TemplateBox[{"\"radio stations\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"RadioStations\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"RadioStations\\\"]\""}, 
            "EntityProperty"], "\[Rule]", "13769"}], ",", 
         RowBox[{
           TemplateBox[{"\"arrivals by rail\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"RailArrivals\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"RailArrivals\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           RowBox[{"Missing", "[", "\"NotApplicable\"", "]"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"railway length\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"RailLines\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"RailLines\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{
            "150462.2976`", "\"km\"", "kilometers", "\"Kilometers\""}, 
            "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"railway gauge lengths\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"RailwayGaugeLengths\""}], "]"}],
              "\"EntityProperty[\\\"Country\\\", \\\"RailwayGaugeLengths\\\"]\
\""}, "EntityProperty"], "\[Rule]", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"\"TotalKilometers\"", "\[Rule]", "226427.`"}], ",", 
               
               RowBox[{
                "\"StandardGaugeKilometers\"", "\[Rule]", "226427.`"}]}], 
             "}"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"railway gauge rules\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"RailwayGaugeRules\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"RailwayGaugeRules\\\"]\""}, "EntityProperty"], "\[Rule]", 
           RowBox[{"{", 
             RowBox[{"\"StandardGauge\"", "\[Rule]", 
               
               TemplateBox[{"1.435`", "\"m\"", "meters", "\"Meters\""}, 
                "Quantity", SyntaxForm -> Mod]}], "}"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"rail transport\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"Railways\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"Railways\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           TemplateBox[{"3.1962706636735`*^10", 
             
             RowBox[{"\"person\"", "\[ThinSpace]", "\"km\"", 
               "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", "\"yr\""}], 
             "person kilometers per year", 
             FractionBox[
              RowBox[{"\"Kilometers\"", " ", "\"People\""}], "\"Years\""]}, 
            "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"ratio of female to male students\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"RatioOfFemaleToMale\""}], "]"}],
              "\"EntityProperty[\\\"Country\\\", \\\"RatioOfFemaleToMale\\\"]\
\""}, "EntityProperty"], "\[Rule]", 
           RowBox[{"Missing", "[", "\"NotAvailable\"", "]"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"ratio of young literate female to male\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", "\"RatioOfYoungLiterateFemaleToMale\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"RatioOfYoungLiterateFemaleToMale\\\"]\""}, "EntityProperty"], "\[Rule]", 
           RowBox[{"Missing", "[", "\"NotAvailable\"", "]"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"real effective exchange rate index\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", "\"RealEffectiveExchangeRateIndex\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"RealEffectiveExchangeRateIndex\\\"]\""}, "EntityProperty"], "\[Rule]", 
           "117.802132986317`"}], ",", 
         RowBox[{
           TemplateBox[{"\"real interest rate\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"RealInterestRate\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"RealInterestRate\\\"]\""},
             "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{
            "2.30495808623329`", "\"%\"", "percent", "\"Percent\""}, 
            "QuantityPostfix", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"refinery gain/loss\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"RefineryProcessingGain\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"RefineryProcessingGain\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{"1.08663288`*^6", 
             
             RowBox[{"\"bbl oil\"", "\[InvisibleSpace]", "\"/\"", 
               "\[InvisibleSpace]", "\"day\""}], "barrels of oil per day", 
             FractionBox["\"BarrelsOfOil\"", "\"Days\""]}, "Quantity", 
            SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"refinery production\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"RefineryTotal\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"RefineryTotal\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           TemplateBox[{"8.36772`*^8", 
             
             RowBox[{"\"t\"", "\[InvisibleSpace]", "\"/\"", 
               "\[InvisibleSpace]", "\"yr\""}], "metric tons per year", 
             FractionBox["\"MetricTons\"", "\"Years\""]}, "Quantity", 
            SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"refugees from other countries\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"RefugeePopulationAsylum\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"RefugeePopulationAsylum\\\"]\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{"340881", "\"people\"", "people", "\"People\""}, 
            "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"refugees in other countries\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"RefugeePopulationOrigin\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"RefugeePopulationOrigin\\\"]\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{"369", "\"people\"", "people", "\"People\""}, 
            "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"region names\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"RegionNames\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"RegionNames\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           RowBox[{"{", 
             
             RowBox[{"\"Alabama\"", ",", "\"Alaska\"", ",", "\"Arizona\"", 
               ",", "\"Arkansas\"", ",", "\"California\"", ",", 
               "\"Colorado\"", ",", "\"Connecticut\"", ",", "\"Delaware\"", 
               ",", "\"District of Columbia\"", ",", "\"Florida\"", ",", 
               "\"Georgia\"", ",", "\"Hawaii\"", ",", "\"Idaho\"", ",", 
               "\"Illinois\"", ",", "\"Indiana\"", ",", "\"Iowa\"", ",", 
               "\"Kansas\"", ",", "\"Kentucky\"", ",", "\"Louisiana\"", ",", 
               "\"Maine\"", ",", "\"Maryland\"", ",", "\"Massachusetts\"", 
               ",", "\"Michigan\"", ",", "\"Minnesota\"", ",", 
               "\"Mississippi\"", ",", "\"Missouri\"", ",", "\"Montana\"", 
               ",", "\"Nebraska\"", ",", "\"Nevada\"", ",", 
               "\"New Hampshire\"", ",", "\"New Jersey\"", ",", 
               "\"New Mexico\"", ",", "\"New York\"", ",", 
               "\"North Carolina\"", ",", "\"North Dakota\"", ",", "\"Ohio\"",
                ",", "\"Oklahoma\"", ",", "\"Oregon\"", ",", 
               "\"Pennsylvania\"", ",", "\"Rhode Island\"", ",", 
               "\"South Carolina\"", ",", "\"South Dakota\"", ",", 
               "\"Tennessee\"", ",", "\"Texas\"", ",", "\"Utah\"", ",", 
               "\"Vermont\"", ",", "\"Virginia\"", ",", "\"Washington\"", ",",
                "\"West Virginia\"", ",", "\"Wisconsin\"", ",", 
               "\"Wyoming\""}], "}"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"religions\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"ReligionsFractions\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"ReligionsFractions\\\"]\""}, "EntityProperty"], "\[Rule]", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 TemplateBox[{"\"Christianity\"", 
                   RowBox[{"Entity", "[", 
                    RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}], 
                   "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"", 
                   "\"religion\""}, "Entity"], "\[Rule]", 
                 "0.8412080951025981`"}], ",", 
               RowBox[{
                 TemplateBox[{"\"Judaism\"", 
                   RowBox[{"Entity", "[", 
                    RowBox[{"\"Religion\"", ",", "\"Jewish\""}], "]"}], 
                   "\"Entity[\\\"Religion\\\", \\\"Jewish\\\"]\"", 
                   "\"religion\""}, "Entity"], "\[Rule]", 
                 "0.019211599473189223`"}], ",", 
               RowBox[{
                 TemplateBox[{"\"Islam\"", 
                   RowBox[{"Entity", "[", 
                    RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}], 
                   "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"", 
                   "\"religion\""}, "Entity"], "\[Rule]", 
                 "0.015521389027710239`"}], ",", 
               RowBox[{
                 TemplateBox[{"\"Buddhism\"", 
                   RowBox[{"Entity", "[", 
                    RowBox[{"\"Religion\"", ",", "\"Buddhist\""}], "]"}], 
                   "\"Entity[\\\"Religion\\\", \\\"Buddhist\\\"]\"", 
                   "\"religion\""}, "Entity"], "\[Rule]", 
                 "0.009069970766560019`"}], ",", 
               RowBox[{
                 TemplateBox[{"\"ethnic religions\"", 
                   RowBox[{"Entity", "[", 
                    RowBox[{"\"Religion\"", ",", "\"Ethnoreligionist\""}], 
                    "]"}], "\"Entity[\\\"Religion\\\", \\\"Ethnoreligionist\\\
\"]\"", "\"religion\""}, "Entity"], "\[Rule]", "0.0038588591384031206`"}], 
               ",", 
               RowBox[{
                 TemplateBox[{"\"Hinduism\"", 
                   RowBox[{"Entity", "[", 
                    RowBox[{"\"Religion\"", ",", "\"Hindu\""}], "]"}], 
                   "\"Entity[\\\"Religion\\\", \\\"Hindu\\\"]\"", 
                   "\"religion\""}, "Entity"], "\[Rule]", 
                 "0.0038123983415935233`"}], ",", 
               RowBox[{
                 TemplateBox[{"\"Bah\[AAcute]'\[IAcute] Faith\"", 
                   RowBox[{"Entity", "[", 
                    RowBox[{"\"Religion\"", ",", "\"Bahai\""}], "]"}], 
                   "\"Entity[\\\"Religion\\\", \\\"Bahai\\\"]\"", 
                   "\"religion\""}, "Entity"], "\[Rule]", 
                 "0.002763850815088022`"}], ",", 
               RowBox[{
                 TemplateBox[{"\"Sikhism\"", 
                   RowBox[{"Entity", "[", 
                    RowBox[{"\"Religion\"", ",", "\"Sikh\""}], "]"}], 
                   "\"Entity[\\\"Religion\\\", \\\"Sikh\\\"]\"", 
                   "\"religion\""}, "Entity"], "\[Rule]", 
                 "0.0008999996273804101`"}], ",", 
               RowBox[{
                 TemplateBox[{"\"Spiritism\"", 
                   RowBox[{"Entity", "[", 
                    RowBox[{"\"Religion\"", ",", "\"Spiritist\""}], "]"}], 
                   "\"Entity[\\\"Religion\\\", \\\"Spiritist\\\"]\"", 
                   "\"religion\""}, "Entity"], "\[Rule]", 
                 "0.0004972471777915578`"}], ",", 
               RowBox[{
                 TemplateBox[{"\"Chinese Universism\"", 
                   RowBox[{"Entity", "[", 
                    RowBox[{"\"Religion\"", ",", "\"ChineseUniversist\""}], 
                    "]"}], "\"Entity[\\\"Religion\\\", \
\\\"ChineseUniversist\\\"]\"", "\"religion\""}, "Entity"], "\[Rule]", 
                 "0.0002890001543871614`"}], ",", 
               RowBox[{
                 TemplateBox[{"\"Shinto\"", 
                   RowBox[{"Entity", "[", 
                    RowBox[{"\"Religion\"", ",", "\"Shinto\""}], "]"}], 
                   "\"Entity[\\\"Religion\\\", \\\"Shinto\\\"]\"", 
                   "\"religion\""}, "Entity"], "\[Rule]", 
                 "0.0002019711496316222`"}], ",", 
               RowBox[{
                 TemplateBox[{"\"Zoroastrianism\"", 
                   RowBox[{"Entity", "[", 
                    RowBox[{"\"Religion\"", ",", "\"Zoroastrian\""}], "]"}], 
                   "\"Entity[\\\"Religion\\\", \\\"Zoroastrian\\\"]\"", 
                   "\"religion\""}, "Entity"], "\[Rule]", 
                 "0.0001893994046125546`"}], ",", 
               RowBox[{
                 TemplateBox[{"\"Taoism\"", 
                   RowBox[{"Entity", "[", 
                    RowBox[{"\"Religion\"", ",", "\"Taoist\""}], "]"}], 
                   "\"Entity[\\\"Religion\\\", \\\"Taoist\\\"]\"", 
                   "\"religion\""}, "Entity"], "\[Rule]", 
                 "0.00004000161286289757`"}], ",", 
               RowBox[{
                 TemplateBox[{"\"Jainism\"", 
                   RowBox[{"Entity", "[", 
                    RowBox[{"\"Religion\"", ",", "\"Jain\""}], "]"}], 
                   "\"Entity[\\\"Religion\\\", \\\"Jain\\\"]\"", 
                   "\"religion\""}, "Entity"], "\[Rule]", 
                 "0.00002550011164922757`"}]}], "}"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"renewable internal freshwater resources\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{
                "\"Country\"", ",", 
                 "\"RenewableInternalFreshwaterResources\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"RenewableInternalFreshwaterResources\\\"]\""}, "EntityProperty"], 
           "\[Rule]", 
           TemplateBox[{"2818", 
             RowBox[{"\"billion\"", "\[ThinSpace]", 
               SuperscriptBox["\"m\"", "3"], "\[NegativeMediumSpace]", 
               "\"/\"", "\[InvisibleSpace]", "\"yr\""}], 
             "billion meters cubed per year", 
             FractionBox[
              RowBox[{"\"Billion\"", " ", 
                SuperscriptBox["\"Meters\"", "3"]}], "\"Years\""]}, 
            "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"rental income of persons\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"RentalIncomeOfPersons\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"RentalIncomeOfPersons\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{"7.48367`*^11", 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
             "US dollars per year", 
             FractionBox["\"USDollars\"", "\"Years\""]}, "QuantityPrefixUnit",
             SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"students repeating a grade\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"Repeaters\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"Repeaters\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           RowBox[{"Missing", "[", "\"NotAvailable\"", "]"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"required reserves\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"RequiredReserves\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"RequiredReserves\\\"]\""},
             "EntityProperty"], "\[Rule]", 
           TemplateBox[{
             InterpretationBox["\"0.00\"", 0., Selectable -> False], 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             "US dollars", "\"USDollars\""}, "QuantityPrefix", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"research and development researchers\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", "\"ResearchDevelopmentScientists\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"ResearchDevelopmentScientists\\\"]\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{"1334628", "\"people\"", "people", "\"People\""}, 
            "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"reserve adjustment magnitude\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"ReserveAdjustmentMagnitude\""}],
                "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"ReserveAdjustmentMagnitude\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{
             InterpretationBox[
             "1.4615`*^10", 1.4615*^10, Selectable -> False], 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             "US dollars", "\"USDollars\""}, "QuantityPrefix", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"reserve air force\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"ReserveAirForce\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"ReserveAirForce\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{"193000", "\"people\"", "people", "\"People\""}, 
            "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"reserve army\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"ReserveArmy\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"ReserveArmy\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{"205000", "\"people\"", "people", "\"People\""}, 
            "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"reserve balances\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"ReserveBalances\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"ReserveBalances\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           TemplateBox[{
             InterpretationBox[
             "3.190627`*^12", 3.190627*^12, Selectable -> False], 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             "US dollars", "\"USDollars\""}, "QuantityPrefix", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"reserve bank credit\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"ReserveBankCredit\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"ReserveBankCredit\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{
             InterpretationBox[
             "8.888579`*^12", 8.888579*^12, Selectable -> False], 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             "US dollars", "\"USDollars\""}, "QuantityPrefix", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"reserve marine corps\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"ReserveMarineCorps\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"ReserveMarineCorps\\\"]\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{"40000", "\"people\"", "people", "\"People\""}, 
            "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"reserve navy\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"ReserveNavy\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"ReserveNavy\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{"128000", "\"people\"", "people", "\"People\""}, 
            "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"reserves\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"Reserves\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"Reserves\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           TemplateBox[{
             InterpretationBox[
             "3.3179`*^12", 3.3179*^12, Selectable -> False], 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             "US dollars", "\"USDollars\""}, "QuantityPrefix", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"retail money funds\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"RetailMoneyFunds\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"RetailMoneyFunds\\\"]\""},
             "EntityProperty"], "\[Rule]", 
           TemplateBox[{
             InterpretationBox[
             "1.0417`*^12", 1.0417*^12, Selectable -> False], 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             "US dollars", "\"USDollars\""}, "QuantityPrefix", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"retail sales\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"RetailSales\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"RetailSales\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           TemplateBox[{"6.97715`*^11", 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             RowBox[{"\"per \"", "\[InvisibleSpace]", "\"month\""}], 
             "US dollars per month", 
             FractionBox["\"USDollars\"", "\"Months\""]}, 
            "QuantityPrefixUnit", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"risk premium on lending\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"RiskPremiumOnLending\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"RiskPremiumOnLending\\\"]\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{"3.1625`", "\"%\"", "percent", "\"Percent\""}, 
            "QuantityPostfix", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"road accidents causing injury\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", "\"RoadAccidentsInjuryAccidents\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"RoadAccidentsInjuryAccidents\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{"1.854444`*^6", 
             RowBox[{
               FrameBox[
                StyleBox[
                "\"accidents\"", ShowStringCharacters -> False, StripOnInput -> 
                 False], FrameMargins -> 1, FrameStyle -> GrayLevel[0.85], 
                BaselinePosition -> Baseline, RoundingRadius -> 3, 
                StripOnInput -> False], "\[InvisibleSpace]", "\"/\"", 
               "\[InvisibleSpace]", "\"yr\""}], "accidents per year", 
             FractionBox[
              RowBox[{"IndependentUnit", "[", "\"accidents\"", "]"}], 
              "\"Years\""]}, "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           
           TemplateBox[{
            "\"road accidents causing injury per amount of traffic\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", 
                 "\"RoadAccidentsInjuryAccidentsPerHundredMillionVehicleKilome\
ters\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"RoadAccidentsInjuryAccidentsPerHundredMillionVehicleKilometers\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           TemplateBox[{"3.868000030517578`*^-7", 
             RowBox[{
               FrameBox[
                StyleBox[
                "\"accidents\"", ShowStringCharacters -> False, StripOnInput -> 
                 False], FrameMargins -> 1, FrameStyle -> GrayLevel[0.85], 
                BaselinePosition -> Baseline, RoundingRadius -> 3, 
                StripOnInput -> False], "\[InvisibleSpace]", "\"/(\"", 
               "\[InvisibleSpace]", "\"km\"", "\[ThinSpace]", "\"yr\"", 
               "\[ThinSpace]", 
               FrameBox[
                StyleBox[
                "\"vehicles\"", ShowStringCharacters -> False, StripOnInput -> 
                 False], FrameMargins -> 1, FrameStyle -> GrayLevel[0.85], 
                BaselinePosition -> Baseline, RoundingRadius -> 3, 
                StripOnInput -> False], "\[InvisibleSpace]", "\")\""}], 
             "accidents per kilometer year vehicles", 
             FractionBox[
              RowBox[{"IndependentUnit", "[", "\"accidents\"", "]"}], 
              RowBox[{"\"Kilometers\"", " ", "\"Years\"", " ", 
                RowBox[{"IndependentUnit", "[", "\"vehicles\"", "]"}]}]]}, 
            "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"road accidents causing injury per population\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", 
                 "\"RoadAccidentsInjuryAccidentsPerHundredThousandPeople\""}],
                "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"RoadAccidentsInjuryAccidentsPerHundredThousandPeople\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           TemplateBox[{"0.006256300048828126`", 
             RowBox[{
               FrameBox[
                StyleBox[
                "\"accidents\"", ShowStringCharacters -> False, StripOnInput -> 
                 False], FrameMargins -> 1, FrameStyle -> GrayLevel[0.85], 
                BaselinePosition -> Baseline, RoundingRadius -> 3, 
                StripOnInput -> False], "\[InvisibleSpace]", "\"/(\"", 
               "\[InvisibleSpace]", "\"person\"", "\[ThinSpace]", "\"yr\"", 
               "\[InvisibleSpace]", "\")\""}], "accidents per person year", 
             FractionBox[
              RowBox[{"IndependentUnit", "[", "\"accidents\"", "]"}], 
              RowBox[{"\"People\"", " ", "\"Years\""}]]}, "Quantity", 
            SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"people injured in road accidents\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"RoadAccidentsPeopleInjured\""}],
                "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"RoadAccidentsPeopleInjured\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{"2.699`*^6", 
             RowBox[{
               FrameBox[
                StyleBox[
                "\"injuries\"", ShowStringCharacters -> False, StripOnInput -> 
                 False], FrameMargins -> 1, FrameStyle -> GrayLevel[0.85], 
                BaselinePosition -> Baseline, RoundingRadius -> 3, 
                StripOnInput -> False], "\[InvisibleSpace]", "\"/\"", 
               "\[InvisibleSpace]", "\"yr\""}], "injuries per year", 
             FractionBox[
              RowBox[{"IndependentUnit", "[", "\"injuries\"", "]"}], 
              "\"Years\""]}, "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           
           TemplateBox[{
            "\"people injured in road accidents per amount of traffic\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", 
                 "\"RoadAccidentsPeopleInjuredPerHundredMillionVehicleKilomete\
rs\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"RoadAccidentsPeopleInjuredPerHundredMillionVehicleKilometers\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           TemplateBox[{"5.629607689973187`*^-7", 
             RowBox[{
               FrameBox[
                StyleBox[
                "\"injuries\"", ShowStringCharacters -> False, StripOnInput -> 
                 False], FrameMargins -> 1, FrameStyle -> GrayLevel[0.85], 
                BaselinePosition -> Baseline, RoundingRadius -> 3, 
                StripOnInput -> False], "\[InvisibleSpace]", "\"/(\"", 
               "\[InvisibleSpace]", "\"km\"", "\[ThinSpace]", "\"yr\"", 
               "\[ThinSpace]", 
               FrameBox[
                StyleBox[
                "\"vehicles\"", ShowStringCharacters -> False, StripOnInput -> 
                 False], FrameMargins -> 1, FrameStyle -> GrayLevel[0.85], 
                BaselinePosition -> Baseline, RoundingRadius -> 3, 
                StripOnInput -> False], "\[InvisibleSpace]", "\")\""}], 
             "injuries per kilometer year vehicles", 
             FractionBox[
              RowBox[{"IndependentUnit", "[", "\"injuries\"", "]"}], 
              RowBox[{"\"Kilometers\"", " ", "\"Years\"", " ", 
                RowBox[{"IndependentUnit", "[", "\"vehicles\"", "]"}]}]]}, 
            "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"people injured in road accidents per population\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", 
                 "\"RoadAccidentsPeopleInjuredPerHundredThousandPeople\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"RoadAccidentsPeopleInjuredPerHundredThousandPeople\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           TemplateBox[{"0.008915222837134404`", 
             RowBox[{
               FrameBox[
                StyleBox[
                "\"injuries\"", ShowStringCharacters -> False, StripOnInput -> 
                 False], FrameMargins -> 1, FrameStyle -> GrayLevel[0.85], 
                BaselinePosition -> Baseline, RoundingRadius -> 3, 
                StripOnInput -> False], "\[InvisibleSpace]", "\"/(\"", 
               "\[InvisibleSpace]", "\"person\"", "\[ThinSpace]", "\"yr\"", 
               "\[InvisibleSpace]", "\")\""}], "injuries per person year", 
             FractionBox[
              RowBox[{"IndependentUnit", "[", "\"injuries\"", "]"}], 
              RowBox[{"\"People\"", " ", "\"Years\""}]]}, "Quantity", 
            SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"people killed in road accidents\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"RoadAccidentsPeopleKilled\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"RoadAccidentsPeopleKilled\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{"43443.`", 
             RowBox[{
               FrameBox[
                StyleBox[
                "\"deaths\"", ShowStringCharacters -> False, StripOnInput -> 
                 False], FrameMargins -> 1, FrameStyle -> GrayLevel[0.85], 
                BaselinePosition -> Baseline, RoundingRadius -> 3, 
                StripOnInput -> False], "\[InvisibleSpace]", "\"/\"", 
               "\[InvisibleSpace]", "\"yr\""}], "deaths per year", 
             FractionBox[
              RowBox[{"IndependentUnit", "[", "\"deaths\"", "]"}], 
              "\"Years\""]}, "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           
           TemplateBox[{
            "\"people killed in road accidents per amount of traffic\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", 
                 "\"RoadAccidentsPeopleKilledPerHundredMillionVehicleKilometer\
s\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"RoadAccidentsPeopleKilledPerHundredMillionVehicleKilometers\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           TemplateBox[{"9.061394845331795`*^-9", 
             RowBox[{
               FrameBox[
                StyleBox[
                "\"deaths\"", ShowStringCharacters -> False, StripOnInput -> 
                 False], FrameMargins -> 1, FrameStyle -> GrayLevel[0.85], 
                BaselinePosition -> Baseline, RoundingRadius -> 3, 
                StripOnInput -> False], "\[InvisibleSpace]", "\"/(\"", 
               "\[InvisibleSpace]", "\"km\"", "\[ThinSpace]", "\"yr\"", 
               "\[ThinSpace]", 
               FrameBox[
                StyleBox[
                "\"vehicles\"", ShowStringCharacters -> False, StripOnInput -> 
                 False], FrameMargins -> 1, FrameStyle -> GrayLevel[0.85], 
                BaselinePosition -> Baseline, RoundingRadius -> 3, 
                StripOnInput -> False], "\[InvisibleSpace]", "\")\""}], 
             "deaths per kilometer year vehicles", 
             FractionBox[
              RowBox[{"IndependentUnit", "[", "\"deaths\"", "]"}], 
              RowBox[{"\"Kilometers\"", " ", "\"Years\"", " ", 
                RowBox[{"IndependentUnit", "[", "\"vehicles\"", "]"}]}]]}, 
            "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"people killed in road accidents per population\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", 
                 "\"RoadAccidentsPeopleKilledPerHundredThousandPeople\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"RoadAccidentsPeopleKilledPerHundredThousandPeople\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           TemplateBox[{"0.00014659999847412112`", 
             RowBox[{
               FrameBox[
                StyleBox[
                "\"deaths\"", ShowStringCharacters -> False, StripOnInput -> 
                 False], FrameMargins -> 1, FrameStyle -> GrayLevel[0.85], 
                BaselinePosition -> Baseline, RoundingRadius -> 3, 
                StripOnInput -> False], "\[InvisibleSpace]", "\"/(\"", 
               "\[InvisibleSpace]", "\"person\"", "\[ThinSpace]", "\"yr\"", 
               "\[InvisibleSpace]", "\")\""}], "deaths per person year", 
             FractionBox[
              RowBox[{"IndependentUnit", "[", "\"deaths\"", "]"}], 
              RowBox[{"\"People\"", " ", "\"Years\""}]]}, "Quantity", 
            SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"arrivals by road\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"RoadArrivals\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"RoadArrivals\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           TemplateBox[{"2.5143`*^7", 
             
             RowBox[{"\"people\"", "\[InvisibleSpace]", "\"/\"", 
               "\[InvisibleSpace]", "\"yr\""}], "people per year", 
             FractionBox["\"People\"", "\"Years\""]}, "Quantity", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"highways density\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"RoadNetworkHighwaysDensity\""}],
                "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"RoadNetworkHighwaysDensity\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{"0.02967896276622277`", 
             
             RowBox[{"\"km\"", "\[InvisibleSpace]", "\"/\"", 
               "\[InvisibleSpace]", 
               SuperscriptBox["\"km\"", "2"]}], 
             "kilometers per kilometer squared", 
             FractionBox["\"Kilometers\"", 
              SuperscriptBox["\"Kilometers\"", "2"]]}, "Quantity", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"length of highways\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"RoadNetworkHighwaysLength\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"RoadNetworkHighwaysLength\\\"]\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{
            "271916.371584`", "\"km\"", "kilometers", "\"Kilometers\""}, 
            "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"motorways density\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", "\"RoadNetworkMotorwaysDensity\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"RoadNetworkMotorwaysDensity\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{"0.008198202841041122`", 
             
             RowBox[{"\"km\"", "\[InvisibleSpace]", "\"/\"", 
               "\[InvisibleSpace]", 
               SuperscriptBox["\"km\"", "2"]}], 
             "kilometers per kilometer squared", 
             FractionBox["\"Kilometers\"", 
              SuperscriptBox["\"Kilometers\"", "2"]]}, "Quantity", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"length of motorways\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"RoadNetworkMotorwaysLength\""}],
                "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"RoadNetworkMotorwaysLength\\\"]\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{
            "75111.303168`", "\"km\"", "kilometers", "\"Kilometers\""}, 
            "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"other roads density\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"RoadNetworkOthersDensity\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"RoadNetworkOthersDensity\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{"0.4892490791411367`", 
             
             RowBox[{"\"km\"", "\[InvisibleSpace]", "\"/\"", 
               "\[InvisibleSpace]", 
               SuperscriptBox["\"km\"", "2"]}], 
             "kilometers per kilometer squared", 
             FractionBox["\"Kilometers\"", 
              SuperscriptBox["\"Kilometers\"", "2"]]}, "Quantity", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"length of other road types\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"RoadNetworkOthersLength\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"RoadNetworkOthersLength\\\"]\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{
            "4.482462390912`*^6", "\"km\"", "kilometers", "\"Kilometers\""}, 
            "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"total road density\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"RoadNetworkRoadDensity\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"RoadNetworkRoadDensity\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{"0.7082659159375166`", 
             
             RowBox[{"\"km\"", "\[InvisibleSpace]", "\"/\"", 
               "\[InvisibleSpace]", 
               SuperscriptBox["\"km\"", "2"]}], 
             "kilometers per kilometer squared", 
             FractionBox["\"Kilometers\"", 
              SuperscriptBox["\"Kilometers\"", "2"]]}, "Quantity", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"secondary roads density\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", "\"RoadNetworkSecondaryRoadsDensity\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"RoadNetworkSecondaryRoadsDensity\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{"0.1811396711891161`", 
             
             RowBox[{"\"km\"", "\[InvisibleSpace]", "\"/\"", 
               "\[InvisibleSpace]", 
               SuperscriptBox["\"km\"", "2"]}], 
             "kilometers per kilometer squared", 
             FractionBox["\"Kilometers\"", 
              SuperscriptBox["\"Kilometers\"", "2"]]}, "Quantity", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"length of secondary roads\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", "\"RoadNetworkSecondaryRoadsLength\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"RoadNetworkSecondaryRoadsLength\\\"]\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{
            "1.65958771968`*^6", "\"km\"", "kilometers", "\"Kilometers\""}, 
            "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"total road length\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"RoadNetworkTotalLength\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"RoadNetworkTotalLength\\\"]\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{
            "6.489077785344`*^6", "\"km\"", "kilometers", "\"Kilometers\""}, 
            "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"road transport\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"Roads\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"Roads\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           TemplateBox[{"6.798346`*^12", 
             
             RowBox[{"\"person\"", "\[ThinSpace]", "\"km\"", 
               "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", "\"yr\""}], 
             "person kilometers per year", 
             FractionBox[
              RowBox[{"\"Kilometers\"", " ", "\"People\""}], "\"Years\""]}, 
            "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"road sector diesel fuel consumption\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", "\"RoadSectorDieselFuelConsumption\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"RoadSectorDieselFuelConsumption\\\"]\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{
            "125807.`", "\"metric kilotons of oil equivalent\"", 
             "metric kilotons of oil equivalent", 
             "\"MetricKilotonsOfOilEquivalent\""}, "Quantity", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"road sector energy consumption\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", "\"RoadSectorEnergyConsumption\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"RoadSectorEnergyConsumption\\\"]\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{
            "507091.403`", "\"metric kilotons of oil equivalent\"", 
             "metric kilotons of oil equivalent", 
             "\"MetricKilotonsOfOilEquivalent\""}, "Quantity", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"road sector energy consumption fraction\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", 
                 "\"RoadSectorEnergyConsumptionFraction\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"RoadSectorEnergyConsumptionFraction\\\"]\""}, "EntityProperty"], 
           "\[Rule]", 
           
           TemplateBox[{
            "23.1422478030163`", "\"%\"", "percent", "\"Percent\""}, 
            "QuantityPostfix", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"road sector gasoline fuel consumption\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", "\"RoadSectorGasolineFuelConsumption\""}],
                "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"RoadSectorGasolineFuelConsumption\\\"]\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{
            "344479.`", "\"metric kilotons of oil equivalent\"", 
             "metric kilotons of oil equivalent", 
             "\"MetricKilotonsOfOilEquivalent\""}, "Quantity", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"bus traffic\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"RoadTrafficBuses\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"RoadTrafficBuses\\\"]\""},
             "EntityProperty"], "\[Rule]", 
           TemplateBox[{"1.1226783744`*^10", 
             RowBox[{"\"km\"", "\[ThinSpace]", 
               FrameBox[
                StyleBox[
                "\"vehicles\"", ShowStringCharacters -> False, StripOnInput -> 
                 False], FrameMargins -> 1, FrameStyle -> GrayLevel[0.85], 
                BaselinePosition -> Baseline, RoundingRadius -> 3, 
                StripOnInput -> False], "\[InvisibleSpace]", "\"/\"", 
               "\[InvisibleSpace]", "\"yr\""}], "kilometer vehicles per year", 
             FractionBox[
              RowBox[{"\"Kilometers\"", " ", 
                RowBox[{"IndependentUnit", "[", "\"vehicles\"", "]"}]}], 
              "\"Years\""]}, "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"motorcycle traffic\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"RoadTrafficMotorcycles\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"RoadTrafficMotorcycles\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{"2.1906390528`*^10", 
             RowBox[{"\"km\"", "\[ThinSpace]", 
               FrameBox[
                StyleBox[
                "\"vehicles\"", ShowStringCharacters -> False, StripOnInput -> 
                 False], FrameMargins -> 1, FrameStyle -> GrayLevel[0.85], 
                BaselinePosition -> Baseline, RoundingRadius -> 3, 
                StripOnInput -> False], "\[InvisibleSpace]", "\"/\"", 
               "\[InvisibleSpace]", "\"yr\""}], "kilometer vehicles per year", 
             FractionBox[
              RowBox[{"\"Kilometers\"", " ", 
                RowBox[{"IndependentUnit", "[", "\"vehicles\"", "]"}]}], 
              "\"Years\""]}, "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"passenger car traffic\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"RoadTrafficPassengerCars\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"RoadTrafficPassengerCars\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{"2.689204167936`*^12", 
             RowBox[{"\"km\"", "\[ThinSpace]", 
               FrameBox[
                StyleBox[
                "\"vehicles\"", ShowStringCharacters -> False, StripOnInput -> 
                 False], FrameMargins -> 1, FrameStyle -> GrayLevel[0.85], 
                BaselinePosition -> Baseline, RoundingRadius -> 3, 
                StripOnInput -> False], "\[InvisibleSpace]", "\"/\"", 
               "\[InvisibleSpace]", "\"yr\""}], "kilometer vehicles per year", 
             FractionBox[
              RowBox[{"\"Kilometers\"", " ", 
                RowBox[{"IndependentUnit", "[", "\"vehicles\"", "]"}]}], 
              "\"Years\""]}, "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"total road traffic\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"RoadTrafficTotal\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"RoadTrafficTotal\\\"]\""},
             "EntityProperty"], "\[Rule]", 
           TemplateBox[{"4.876024247424`*^12", 
             RowBox[{"\"km\"", "\[ThinSpace]", 
               FrameBox[
                StyleBox[
                "\"vehicles\"", ShowStringCharacters -> False, StripOnInput -> 
                 False], FrameMargins -> 1, FrameStyle -> GrayLevel[0.85], 
                BaselinePosition -> Baseline, RoundingRadius -> 3, 
                StripOnInput -> False], "\[InvisibleSpace]", "\"/\"", 
               "\[InvisibleSpace]", "\"yr\""}], "kilometer vehicles per year", 
             FractionBox[
              RowBox[{"\"Kilometers\"", " ", 
                RowBox[{"IndependentUnit", "[", "\"vehicles\"", "]"}]}], 
              "\"Years\""]}, "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"truck and van traffic\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"RoadTrafficTrucksAndVans\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"RoadTrafficTrucksAndVans\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{"2.1536869052160002`*^12", 
             RowBox[{"\"km\"", "\[ThinSpace]", 
               FrameBox[
                StyleBox[
                "\"vehicles\"", ShowStringCharacters -> False, StripOnInput -> 
                 False], FrameMargins -> 1, FrameStyle -> GrayLevel[0.85], 
                BaselinePosition -> Baseline, RoundingRadius -> 3, 
                StripOnInput -> False], "\[InvisibleSpace]", "\"/\"", 
               "\[InvisibleSpace]", "\"yr\""}], "kilometer vehicles per year", 
             FractionBox[
              RowBox[{"\"Kilometers\"", " ", 
                RowBox[{"IndependentUnit", "[", "\"vehicles\"", "]"}]}], 
              "\"Years\""]}, "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"number of robberies\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"Robbery\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"Robbery\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           TemplateBox[{"267988", 
             RowBox[{
               FrameBox[
                StyleBox[
                "\"crimes\"", ShowStringCharacters -> False, StripOnInput -> 
                 False], FrameMargins -> 1, FrameStyle -> GrayLevel[0.85], 
                BaselinePosition -> Baseline, RoundingRadius -> 3, 
                StripOnInput -> False], "\[InvisibleSpace]", "\"/\"", 
               "\[InvisibleSpace]", "\"yr\""}], "crimes per year", 
             FractionBox[
              RowBox[{"IndependentUnit", "[", "\"crimes\"", "]"}], 
              "\"Years\""]}, "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"rate of robbery\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"RobberyRate\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"RobberyRate\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           TemplateBox[{"0.000816`", 
             RowBox[{
               FrameBox[
                StyleBox[
                "\"crimes\"", ShowStringCharacters -> False, StripOnInput -> 
                 False], FrameMargins -> 1, FrameStyle -> GrayLevel[0.85], 
                BaselinePosition -> Baseline, RoundingRadius -> 3, 
                StripOnInput -> False], "\[InvisibleSpace]", "\"/(\"", 
               "\[InvisibleSpace]", "\"person\"", "\[ThinSpace]", "\"yr\"", 
               "\[InvisibleSpace]", "\")\""}], "crimes per person year", 
             FractionBox[
              RowBox[{"IndependentUnit", "[", "\"crimes\"", "]"}], 
              RowBox[{"\"People\"", " ", "\"Years\""}]]}, "Quantity", 
            SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"roundwood production\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"RoundwoodProduction\""}], "]"}],
              "\"EntityProperty[\\\"Country\\\", \\\"RoundwoodProduction\\\"]\
\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{"4.726`*^8", 
             RowBox[{
               SuperscriptBox["\"m\"", "3"], "\[NegativeMediumSpace]", 
               "\"/\"", "\[InvisibleSpace]", "\"yr\""}], 
             "meters cubed per year", 
             FractionBox[
              SuperscriptBox["\"Meters\"", "3"], "\"Years\""]}, "Quantity", 
            SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"saving\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"Saving\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"Saving\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           TemplateBox[{"5.263297`*^12", 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
             "US dollars per year", 
             FractionBox["\"USDollars\"", "\"Years\""]}, "QuantityPrefixUnit",
             SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"savings deposits\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"SavingsDeposits\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"SavingsDeposits\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           TemplateBox[{
             InterpretationBox[
             "1.06127`*^13", 1.06127*^13, Selectable -> False], 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             "US dollars", "\"USDollars\""}, "QuantityPrefix", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"savings and small time deposits\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"SavingsSmallTimeDeposits\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"SavingsSmallTimeDeposits\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{
             InterpretationBox[
             "1.1565`*^13", 1.1565*^13, Selectable -> False], 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             "US dollars", "\"USDollars\""}, "QuantityPrefix", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"sawnwood production\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"SawnwoodProduction\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"SawnwoodProduction\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{"9.30156`*^7", 
             RowBox[{
               SuperscriptBox["\"m\"", "3"], "\[NegativeMediumSpace]", 
               "\"/\"", "\[InvisibleSpace]", "\"yr\""}], 
             "meters cubed per year", 
             FractionBox[
              SuperscriptBox["\"Meters\"", "3"], "\"Years\""]}, "Quantity", 
            SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"schematic polygon\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"SchematicPolygon\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"SchematicPolygon\\\"]\""},
             "EntityProperty"], "\[Rule]", 
           RowBox[{"Polygon", "[", 
             InterpretationBox[
              RowBox[{
                TagBox["GeoPosition", "SummaryHead"], "[", 
                
                DynamicModuleBox[{
                 Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                 TemplateBox[{
                   PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{
                    RGBColor[0, 0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]], 
                    PointSize[0.012422599874998832`], 
                    PointBox[CompressedData["
1:eJxllnlMVFcUxlkKzIBIqQ001lZFgwhqgSGUsPkAWSwgMziAbAMMoLFWRQMu
hSJEliGoIURooYoWS6WhlH2pRH0UKBpCtEbEskeoYFMsmkqlUmmbN9+5yeOP
yeSX75xzz733nHPfevXh0GQ9HR2du//9/v+/ocloT7mu4j/Kz7f3LAvgBmz2
tsSNRxCvHS4xri6M4L3faSzz9w3gmre/aHaZCuddvx3RUzzz5wK+Vsbddg8n
vWOtj1RWruTfnc27euwrP+I3LhtOFlf5ckcOrmr+bVbJ/9kZ3VL1zw7SweXO
9yQrLu3mF+0dgi4ofDl5TmVT1/Pd5A/dxGzkZMGCLzc1o6tSBjI+GZwg+fVK
KK0fkTRndKNaQVxpsS7WMEzBO7oafRJ10Z/7/VZI4y7d5bwhJsbz4As/zjn9
lNHntXLyB6/KbHgzK5jFx/pg5A/G/pDf1GR9fnsY49HU4blOXcb9pfZd9yN9
uG1fOjRd+Ivp4AEDw6i+WqaL7a+355ZMN3gT92yK3jJm4EPnBX8w/MFi/9ad
9a/nYhl/PzS072+pN9mDoX9zwOBn/VYv0isWP3A1VXvR/ZWejbpisdKLM7h3
VJXup+RPcUNjjm9xxGPdKnXhfU/iO4+bnCq2ML4c1FTzwMmd6iO7KFa+OOVK
HDof0+s060L2Yj7S2Ghl5uFK9Vd0SJL55IwbMeKD621Vv3SNuFP9Ip9NHZOq
Sq8w/qZEatSQ48GNSpqlUSVhpBeH5zSbP1nO2N/rZxuNs4vCSUc/gaEjPnQx
Iz/0J/T9Z3vi5j6MWMaIj36HDka8wmPO8ZayPXQeYOhct6HJnbw9dH7Qcb7z
5oMteUOM1bXHTeazI2k9y1f+rbUDyxnxT5fOmLz3WRT/tFJadCJjOxfVv7nt
VV80cXpreZtVbwyfX1eXtnkvx00r3EyLD8Uu43Pv565Yd43jQmeH1boWKqpH
zD/Uu8TtO9Mf9jOGjv6BDk59EJRoYx5H/QnG/IA/GLpdn8NA4k5/YswfMOYp
/DFvwbBHPtCFek3iNUuO089dArmJl0OyiJQk7f0Eaus/if9idPTtiYlAzq7G
uODSmuUs3HeQtl8TtffBWLivYC4t1nVs+lYi31YmS7lmzxg64oGxPuzBYl2o
z13EvcfHLl59GEz7AWO/sIcOhj4YVtB3Povp4FK/mrGV3UnafmT2j2VOC9k2
IcRCvYWQP3QwdOx33nzc+vBdxsJ8kxPrv9xhu81dTvGhB51PL/jJMllbv0wX
6ldO65nsW925sYjpYMQH4/zEjHiwF8cHC/MuSTuvFXReYl7t2/PU3EVB/mCs
Z9Vcnis5o6D6sd2QsmZpXMHdNPtYZp+WqH0vFJz0xzLNifWMlam3R/l+NfkL
7yNj4X1N0PYzY9y/8N4z7v2jLd/WLoHqTXjvE6iehPc9nuozWmnp2HE6nvqh
ytA/X98+nvola2tdzHhkPPUbGPbwhz3iV3dovPs1QcToL/PK6ZGjg2x9MPID
i/MXM/wzPDSOjzLZ/nAeYOg4H9NGvjFtkfHMQxuNwlpN3LVUFLtVrqb+qbBe
cJR+yhj3I9bhD8b6sBcz7IXvCTXtD/UAe+hixvqwF+eHfke9YT3he4XNL+ji
eYf7BYvnJ+Yt+gH1gfvD/YNx/1gfOhg68oEOho79g1Ff4npEfmDkB3voYOwP
9YX4YOSDfha+L2XEwveuE+1HrAvvqYzmH+ap8H3FWO9RoFPmgWSar5g/uD8w
6gHzCzrOG+fxLy/cJFk=
                    "]]}, ImageSize -> 
                    Dynamic[{{2}, 1} ((5. CurrentValue["FontCapHeight"])/
                    AbsoluteCurrentValue[Magnification])]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["405", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Number of lists: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["11", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{
                    RGBColor[0, 0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]], 
                    PointSize[0.012422599874998832`], 
                    PointBox[CompressedData["
1:eJxllnlMVFcUxlkKzIBIqQ001lZFgwhqgSGUsPkAWSwgMziAbAMMoLFWRQMu
hSJEliGoIURooYoWS6WhlH2pRH0UKBpCtEbEskeoYFMsmkqlUmmbN9+5yeOP
yeSX75xzz733nHPfevXh0GQ9HR2du//9/v+/ocloT7mu4j/Kz7f3LAvgBmz2
tsSNRxCvHS4xri6M4L3faSzz9w3gmre/aHaZCuddvx3RUzzz5wK+Vsbddg8n
vWOtj1RWruTfnc27euwrP+I3LhtOFlf5ckcOrmr+bVbJ/9kZ3VL1zw7SweXO
9yQrLu3mF+0dgi4ofDl5TmVT1/Pd5A/dxGzkZMGCLzc1o6tSBjI+GZwg+fVK
KK0fkTRndKNaQVxpsS7WMEzBO7oafRJ10Z/7/VZI4y7d5bwhJsbz4As/zjn9
lNHntXLyB6/KbHgzK5jFx/pg5A/G/pDf1GR9fnsY49HU4blOXcb9pfZd9yN9
uG1fOjRd+Ivp4AEDw6i+WqaL7a+355ZMN3gT92yK3jJm4EPnBX8w/MFi/9ad
9a/nYhl/PzS072+pN9mDoX9zwOBn/VYv0isWP3A1VXvR/ZWejbpisdKLM7h3
VJXup+RPcUNjjm9xxGPdKnXhfU/iO4+bnCq2ML4c1FTzwMmd6iO7KFa+OOVK
HDof0+s060L2Yj7S2Ghl5uFK9Vd0SJL55IwbMeKD621Vv3SNuFP9Ip9NHZOq
Sq8w/qZEatSQ48GNSpqlUSVhpBeH5zSbP1nO2N/rZxuNs4vCSUc/gaEjPnQx
Iz/0J/T9Z3vi5j6MWMaIj36HDka8wmPO8ZayPXQeYOhct6HJnbw9dH7Qcb7z
5oMteUOM1bXHTeazI2k9y1f+rbUDyxnxT5fOmLz3WRT/tFJadCJjOxfVv7nt
VV80cXpreZtVbwyfX1eXtnkvx00r3EyLD8Uu43Pv565Yd43jQmeH1boWKqpH
zD/Uu8TtO9Mf9jOGjv6BDk59EJRoYx5H/QnG/IA/GLpdn8NA4k5/YswfMOYp
/DFvwbBHPtCFek3iNUuO089dArmJl0OyiJQk7f0Eaus/if9idPTtiYlAzq7G
uODSmuUs3HeQtl8TtffBWLivYC4t1nVs+lYi31YmS7lmzxg64oGxPuzBYl2o
z13EvcfHLl59GEz7AWO/sIcOhj4YVtB3Povp4FK/mrGV3UnafmT2j2VOC9k2
IcRCvYWQP3QwdOx33nzc+vBdxsJ8kxPrv9xhu81dTvGhB51PL/jJMllbv0wX
6ldO65nsW925sYjpYMQH4/zEjHiwF8cHC/MuSTuvFXReYl7t2/PU3EVB/mCs
Z9Vcnis5o6D6sd2QsmZpXMHdNPtYZp+WqH0vFJz0xzLNifWMlam3R/l+NfkL
7yNj4X1N0PYzY9y/8N4z7v2jLd/WLoHqTXjvE6iehPc9nuozWmnp2HE6nvqh
ytA/X98+nvola2tdzHhkPPUbGPbwhz3iV3dovPs1QcToL/PK6ZGjg2x9MPID
i/MXM/wzPDSOjzLZ/nAeYOg4H9NGvjFtkfHMQxuNwlpN3LVUFLtVrqb+qbBe
cJR+yhj3I9bhD8b6sBcz7IXvCTXtD/UAe+hixvqwF+eHfke9YT3he4XNL+ji
eYf7BYvnJ+Yt+gH1gfvD/YNx/1gfOhg68oEOho79g1Ff4npEfmDkB3voYOwP
9YX4YOSDfha+L2XEwveuE+1HrAvvqYzmH+ap8H3FWO9RoFPmgWSar5g/uD8w
6gHzCzrOG+fxLy/cJFk=
                    "]]}, ImageSize -> 
                    Dynamic[{{2}, 1} ((5. CurrentValue["FontCapHeight"])/
                    AbsoluteCurrentValue[Magnification])]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["405", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Number of lists: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["11", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Lat bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"18.9106197`", ",", "71.3876441`"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Lon bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "171.8381999`"}], ",", 
                    RowBox[{"-", "67.1913872`"}]}], "}"}], "SummaryItem"]}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                  "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
              GeoPosition[{CompressedData["
1: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
qfupe/u52FPU+v8HjPQeqw==
                "], CompressedData["
1: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

                "], CompressedData["
1:eJxTTMoPSmViYGAQBWIQfbIj9OxePl8HC3PGh/dOJhz4WvzzaLSIr4N2DtuO
BUcTDpzb1umZd8rHwfmjpH3zzoQD/lqlKp+4fR0ESrasUj2VcEDudGHs83U+
Dt1Z26bP3J1w4LjpF9bHjT4OE5InJJy/nHDgxkSTkzcP+jh8VdPWLgLyNzg1
HOrf5ePguobfVPpCwoFQxzBGjsM+Dt8+TWOTvJhw4PPxLWa9R30cOF7sm3Pz
XMIBa65j5RJHfBz63ixt+X0+4YDU5/sackD1kz69Uw4C6n/Ck5XyByivI5tU
FAlU7xoYdujkfh8HgXPL+0SB6k+e0m82BPLfpDZs+HEGKO/z5O6bAz4OWX5x
KU1A9bVqYQvvAM37wW/seupswgGJKZkmO4H27w1I3bv3dMKBzU+m/e487uNw
9E7U6ZNA/65v5Dgz7wRQv25h5wkg3zr8/ekvxr4OJSWMV3beSzgAAFs6rlg=

                "], {{57.0455496, -154.1019395}, {57.3473333, -154.7984491}, {
                57.6634156, -154.0348596}, {57.5253393, -154.1047117}, {
                57.5336895, -153.9259814}, {57.321156, -153.7795994}, {
                57.3056764, -153.7570383}, {57.2997947, -153.7119844}, {
                57.2750954, -153.6391909}, {57.2741379, -153.6259403}, {
                57.2749295, -153.6212272}, {57.803722, -153.9348077}, {
                57.999745, -153.2817515}, {57.6184469, -152.1543087}}, {{
                56.2612387, -133.6412861}, {56.3284806, -133.1744877}, {
                55.8148538, -132.4984995}, {55.4571369, -132.1431691}, {
                55.6249162, -132.5563447}, {55.361296, -132.7419378}, {
                55.2672153, -131.9985297}, {54.6901564, -132.0162108}, {
                55.2854617, -133.2374998}, {55.6236404, -132.9326223}}, {{
                57.48993, -135.11942}, {57.7703771, -135.8338101}, {
                57.4795732, -135.5479376}, {57.3901197, -135.844598}, {
                58.1202161, -136.4477133}, {58.0406229, -134.9533504}, {
                57.9960344, -135.8920828}}, {{19.4782371, -155.9352399}, {
                19.7280359, -156.0617289}, {20.268438, -155.853313}, {
                19.517971, -154.8069638}, {18.9106197, -155.6784643}}, {{
                63.15293, -169.3773199}, {62.9379035, -169.6455596}, {
                63.55468, -171.8381999}, {63.29589, -168.68751}}, {{
                60.3371606, -165.9082329}, {59.9265341, -165.5650754}, {
                59.7473906, -166.1523423}, {60.2115357, -167.45865}}, {{
                57.0000106, -135.2196092}, {57.5090014, -135.5509941}, {
                57.4174167, -134.8322048}, {56.1604569, -134.671613}}, {{
                49.0020577597792, -123.090809781418}, {
                49.0020808612467, -123.035015199978}, {
                49.0019064, -123.0350151}, {49.0012106, -123.0904184}}}], 
              Selectable -> False, Editable -> False, SelectWithContents -> 
              True], "]"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"school enrollment fraction\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"SchoolEnrollmentFraction\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"SchoolEnrollmentFraction\\\"]\""}, "EntityProperty"], "\[Rule]", 
           RowBox[{"Missing", "[", "\"NotAvailable\"", "]"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"seasonal bank borrowings from Fed\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"SeasonalBorrowings\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"SeasonalBorrowings\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{
             InterpretationBox["3.8`*^7", 3.8*^7, Selectable -> False], 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             "US dollars", "\"USDollars\""}, "QuantityPrefix", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"sector labor fractions\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"SectorLaborFractions\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"SectorLaborFractions\\\"]\""}, "EntityProperty"], "\[Rule]", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"\"Agriculture\"", "\[Rule]", "0.006`"}], ",", 
               RowBox[{"\"Industry\"", "\[Rule]", "0.226`"}], ",", 
               RowBox[{"\"Services\"", "\[Rule]", "0.768`"}]}], "}"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"secure internet servers\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"SecureInternetServers\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"SecureInternetServers\\\"]\""}, "EntityProperty"], "\[Rule]", 
           "46678110"}], ",", 
         RowBox[{
           TemplateBox[{"\"securities lent to dealers\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"SecuritiesLentToDealers\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"SecuritiesLentToDealers\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{
             InterpretationBox["\"0.00\"", 0., Selectable -> False], 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             "US dollars", "\"USDollars\""}, "QuantityPrefix", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"self employed\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"SelfEmployed\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"SelfEmployed\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{"9816355", "\"people\"", "people", "\"People\""}, 
            "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"self employed fraction\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"SelfEmployedFraction\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"SelfEmployedFraction\\\"]\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{
            "6.09000015258789`", "\"%\"", "percent", "\"Percent\""}, 
            "QuantityPostfix", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"service related deposits\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"ServiceRelatedDeposits\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"ServiceRelatedDeposits\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{
             InterpretationBox["1.892`*^9", 1.892*^9, Selectable -> False], 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             "US dollars", "\"USDollars\""}, "QuantityPrefix", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"shape\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"Shape\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"Shape\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           GraphicsBox[{
             RGBColor[0.896, 0.8878, 0.8548], 
             EdgeForm[
              GrayLevel[0]], 
             PolygonBox[{CompressedData["
1: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
91a4yJqyh62VQMLF7HucMGd479fSa8H9QU4j/Bzef2tpe9VnzCPNAUeKMfew
jEYdxZxmzUB569kKR6c2V0Zgfj30R5HfuxV2vhRpftCO+1Vwp2mXfyucmgkK
WMAsHP5HsxSzsHsyNyvuV72X9jyaNm6FEgeXH75fcTx8WyAksRUcaU+sjPH9
VpzpfHI3txUEuqq6fmP7tlTmfOMqaAWjfZeoljQCdUk7VabHtoK+dcCiYhuW
a3e/1UprBYp6qVEXiUAbT1UNxz+2QsrE8m/vWgI1SsnHRYW1guKjLK5mwPdL
8XCxd0UrxG+L8x3/gvM5lNp9D5+/cTD2XnUkjk9z5EBQKc6/kn/B41wCURrj
xyo7WuGYqf/dPzh/B63+HbJnagNJva5vJFwfmeHHOfOPt0HvwffqJ4sJ1Jqe
tZleuA1WksOcQ7DcMIDpmM9iKzz1Usg6js/j99Huj/iB45m/+UYZvi9Hj3/+
Ta5phVChLwa133C/MV0+V9LQCl7MF1NG+7G/spHvc7F/DLNxjl++E+hUXi+N
N7MVWGI2eTOMEujJciUzKbUVFplmh66NE6ijR93VMrkVVg0TU6wnCJQUQz0U
kdQKf2q8BY2nCHTI4P4qI+YbI0yOCxoUFGAym9J3ox0O97cnPFigoE1O0/Jo
MxnE7kMl+34q7ndsn0+dJsPmomd67lyYJcS3br5FBkPx9mIWUSq6uPZ6ZiGe
DFZCIdqX71KRl/2S0CkGAjzfRgSvVVPRbVKWDFsYAYP7i1zPBFORcY9zkNFV
AuZua+4cpVJRudN3IZ0iAlpc6dO2LlMR0WokRfwiYHWFnLhjioqSVYLvW08R
0MFS7s7A0IEiXL8q/3xOgQu63652/qKiKr4Tob8qKSBFsRDQYexAk8sROr+q
KODKdDC7eGsHSqmVUWNZokCXvG9QwyQVbRVob+1yp0JNteGR28NUZJXwTZDk
QYW494mbcvB7iveayIExzHZlcadpvVTkRCtg3fGYCru7D7Eb9VCRfdo5xzuY
R89oppWsUNG+tkMo/hUV9k1Kt4uNU9EnNzPGpQoqFKy1vdRPoiJDT/3G4kkq
HNFlKzDyoaJneYu7s0ap8KVhvezUPSp6riCBjFao0BxvENaB31enFX5ZVDN2
AFFS2CskREUt0p6txnNU2Jb1K6REmIoq8qqNCslUyB4ynykwoyJSSezG0ggV
Ks5c0YqypCKJVLbfxVjfIcsdrwYscDw7b9y43k+F97t+SrrY43xc2mdbT6WC
M7E3WdKZivYXyXbe+EoFgmStnYt5qeXy568dVLhw0OZ4yg2sj9n+10o7Ffr1
maxjzHG+33SO/KmjAomImNt2k4q2OTs2EKVU/P0/ExKkjN+jz//K7MH+X/RS
vlKF35+mmS9SJROokFFrpv6Uh4osBJZqtnymQtr1c2y7Nano+9SjywejqaBL
bpPO1qWi+L6/UY/eUCHzRrXtmWNU5BallLv0gQpMxlHywkeoSOj37NilECqE
SnrGOqpg+9PfHEwNpgIlb5tzBn5/mtwKTe0NooLgR/fdvzFr6UxfLgikwthr
0q39OL4v6D8RpZg7z0qwBmM2XFFcUcf87Ybaajlm6a1RfnSYE+bS0xoxN41e
s2oIoMLmj3nHSLxU5D5gpSrqSwVWozcVTIsUJKR6hY9Vmwov+Z4OiPRRkKCi
/19tzGd7/87K91LQYzudd9cuUaEqg+R9eoCCjg9zHGjQwvm8VZxZh3nsQQvd
qiYVzE4W5v3EbJ9sFbTlPBVcyzlkdw5RkF6siHI8lis7K4gjzCdUzx0zxHye
NUEnBPMPjpeD1pgPpD54iIYpSM7/60M+zH31U0kJmEXOMGana1Dh5l6L9//z
/nKqmiBmn9dxKz8wa+4ssj2IuUju3usVzNr3me7vxny3cJ78F7PCa0XBPnUq
BMnfmZH7TkHbb30SWsSc84XJq2gE+1cy9zzkHBWmWg7ve455eKue/RnMvdGp
D0mYyU6kMUvMi9ZKySqjFHSweZZBDTOTClnjCGap5H2Bq2dxfY7/fSg0RkEb
+9+nmGAOrpeNP4yZuFQtufd/VuRadcJ8Pkfi3IAarnfbabsvmAOrI/adxvw6
NXPwWQ8FDd6Q+PoV25+lnUJ530VBbW5jz/boUCFQ0Jst7CMFfVMfVtxygQr3
bRStBd9if0u4mjzP4Hy7Lsl3Yh6JuJh4BPPEAd0HJMwFyvLH4zF3J6VUHHlH
QU9De4JeYM7QOCc0heVbVvLD76hQgdfJzWchjIIiU5bLPZWpwK6rUXc7nIKo
7++d3aeE47M6YieOeTZD5dk2RSp4hPAmTOL1HK7Sy3XHqODdcPyBFmah7zzJ
LFhOpZ3rEcSsKhrHKorl9RPmlVR8/ovUYEZGzK56/5rMMReGMOaxYhYU7qHY
Yw6Z3cqRfZQKjLyhCkqYed99zZTFPP14IVwW2+ulzx7TcYQK996vtQTbUZDJ
xwCS9EnMhbftZfH34Es+7c2vHxQ4nV/9WkmTgtydjrrIY944+tivAcsN+nfH
sU1SYM+wIz3feQq6HlU4IzhFgd1rp/duvUBBvabztKA5CqwlbR/aokVBVoIZ
gY6Ym0+dSxbFcuFCUzoK5q5jbLbsWM40tk/eHzOta3DTOSwv3xHuxTdPAXHb
xwxiWH4x5PZqB5b3nYAaDyw3tfvw6x6WuxqKTspieTRHSL3eIgVsX11K/YdZ
7HHZRA5m0u+iZ1pGFOT07O7SIraf7ZW2g9EmCqrkoFcXSMH+7aO1PFkhEPts
eIqLIQV0R0S/vcLfT+WhxhV/DQp86+3cf36DQFO1h+MvnaAAH3NCkvA/AuWZ
yglISVEg6rLVKxs8z3BwdA2wnKXAp918H7PxvPVlhO5FlgIFHItqtoji90lL
1XeO+1iuetZH5lgDfl96u4Y4GVEgN/PN5lD83rkjbrUUgc9ndZPv+/+9tZXb
3LdeC59X8NM/Ec9DbpMfmJjVKXBwuD+Tu4dA6Q98zr3A+8/k2LFH9BLobpWv
qYwFBW7FvSLfwvZILk8aG2EmNY8IXBwk0KvDm4+eukcBYQUbz1eYJTn3cLDa
UUD/4vkqtkoCud7ZfK7WmgKN6+pql/G8IWp80OENtv/MZM7+WQMClRr8sIzr
IKDAV8/cRYVAwfdaJVbJBBxgOeRGOYb9KzAtd2kmoNhtaVPYQwLpL9HzLmUT
UKGu4TJ5Ac9j26U3GEsIcOKdy31vSCDWBintz0kEvBxqP2NwnkDfw90HRzMJ
/F68MBqpRqBVPjq4k0xA3SEheTU7Al1I0/OfcCMguSyeNGGG7ZGq4dv2iICz
26dvrN3A+rjoH2s7ExAxOPFnxplA1Z2BvHPXCFDQaWRWvkWgJifuC6ZnCSgt
STMRw/o2Rs35PY4Q4He7t/OxPp7neDXy7p4hINW0nnbGlEC/QvRdp00IaAs1
m02/RCD76dTEAcyjkso6B0/j9/R8lobdaQLMhpseimpg/x/1nbmiTIBYQ0t2
zjkCzYGoEqciAdy9aerB/ASqeRGUzixNQJbZ2vXde/C8J9Rbe+MCAWnnLDiu
43iqtqyxGukS4N3Z9Wv1EIG0WF7KbAkhoOxflIbWXzIyWFceZrIggO9q6g6f
rQR6HiWoGa5KAHUbZ4ThBhlN8fJW5rESENbOtObCSKCXF3qclLcToJMndU2F
gUBPha7fluEgoOvFp63xWN5y4sGeESw3Ur5QsW8zgS5a2zqd5iJgmO78d5Yt
BGLTSLGiw8w7eS39NTOB3p1OM4jDXM8xU76CufeykmUfZp1vh5lD8PoXe27Y
ZmNOmkr2E8T60tOKjk9j/cn5L0uitmFm6cxPZSOA/e+VhQ9sBHKY+NxduRX7
991ZpnoHgUTKF7fKY/v18vqCNzgIhCqmWzmZCBgnsz/+h/XZPNnBWYT1OamV
fOXC/vb6D5cFbiFg27HzJ1O4cD57BALfl5Kh0rP34ii2r0bFWGTrYzKcTMlT
iMTxLvJooHtjRQb6sD/+ajgeR7ROXbh9jwxHTZ/R2eB4DE7+K/U8Qgb2RxyP
5PvJyFji1XWaPBkOO9x74DBKRjvYjVsipchQY64RcmOSjI7eLUiMkCRD59yF
prOY587UvAIJMlCjZBW+TZHRfsuHZ5ixfESF0bxgmowifPMFlLCc9/towA0y
GdWbuTwdYiFDSNdUHD1BRhSPmxaDfSQQvB9vRA4io+aRA7J+ayRYycy+yuBH
Rg5c/UKyQAJe8oLsTgcyOql23Gl3MwnKhhr3a5iSkdTnZyL+j0jw9vOib54o
GTn/cqjdp0uCSbG9957sIyPPQLmXLDtIIM1JV3pCkoyWi+szNrOQIFjlPiOv
FBmxX73DY8dMgshdnOW/JPD6ER42PkYSmH5hu1mM17M+yiLp0JPAjScoaS9e
v2F6VYPuXzscUBG+uXuFhKp3+GUNrLSDntBmibFEEnrVezvl8dt20F16YyFL
R0Lzezj62jTaQXMzd+D5B+3IZy57UcG8HX4/a/NqVG1HrT9YzvK+bweRgoJO
mzPtqL3n+8hUTjt0HUw4YKrVjozvf9WdTWgHyX8yLkf12hEvS4NDaH47jIS9
8TO/3o5eyY8ndma3A8+O32mrxu2I3Gy6/0pxO7hHeQp8EGtHdts57QKK2kHo
FpOrs1k7iovkq/pb1w6dd7uCCzGfih6583m4HZrqbu0NEm9H7M7pFpbd7XD8
NiGmWN6GuOtKd7/lJcE1R+ErvDVtaEO0PfLbThKkCZ8TicC8eqmWvMBJglmG
vHZ2zFomHBMpHCT4uLlgPze0oaBH6KQK5kNviquKK9pQyqOrrNU4HzlbSTsV
K9uQy8A/udvsJPg+vks8t7YN5Z/6Jl7HRgLxcwnRL1rb0IQyPd0DHG+b3quu
us1tKLP3+HfH3zgeO64armB5444+r02YLZIsymRJmK9kW1xYbQfYW6CqTrQh
RovzpFMz2L9ileYkShvqmlug9GOmLzOMtKK2Ifnz3UUG0+2wGLJmfoTWhq5+
2GKtjeUDd09YfPzWhtLHvwyGT7bDIW+ei4NdbYj1lVR92lQ75PYnK33vaUMe
z31/PJxth55L7jr8/W1I8MOpW2fx/vJW3eS1gTZUe0P0UyqWj5Z4jMkMtaH5
KDXNEMziDZEmx4dxfO/euPIUr8+w0WAgYV40N9+UgHkjg9euDq+vNMiW88fr
CyB6sQ+zaVdxsc5cO3zb8avn4/c2dI5ItzXEfFGjnl4O7w/7lKwkttAOOSJM
DxUwx8yydb1dbAedI3mbMzF3xQfuZllqB5lkD+ZlvP8EW/RFGczD4yuMDJN4
f9sHmdb5drBmZIS9U23ImaXfchu2R+HX397neL28gEjwT6wvgG3ATwfr443u
2H8dc51djnM9lvM4CO+wxvbUqX9cbsPyLc7+QXr/xyPItLwKx3NRfU+9PY5n
WKQkqwCOd1ReQ8gmLGc6PCxnhvOR6ap9VBbnQ+VtVRAXzl+MQNduASxnuGKn
Y4rrh/X1i7wqXD/snAaey5jZb8zo9eL6unRhyY0Z1x/nQmMUGdfj82UTC4/q
NkQJ3qmqjuv1mrpW0EppG1KT4POw3UMC/a0874k6XH8w9eGRCAmEnvVHnLTE
9XfZ22/CmQTLg1+HTvq3Ik/NVWnTMhIU95VZLHm2orS7qhT2QhKYB6wd9HZr
Rb/66HddyiJBy6mIgHqrVrQqlsku/JYEUurc+gbXW5GLgLn8+j0ShO+iPJox
bEVRoWLgoUeC0ss05OrViq7u3Sz57AsJLg/5+Fi+aUW87HbyitYkuPGSEvNP
qxX5TLNmUQVxvxtE6w+UW5CWWci9PyntwJIQP7ji0YzOj9ct7vduB333a6yb
3zeh7j+DMfrv2sFEmqMlo7wBqQ3VLpw6TIIiFjrvH6kNiDvDrLvkBL5va7Gm
40cb0AvtnBfhl0jAk1HH/Ka4AZ0qITfI85GgY033z9VbDei67uj+Zz34/iz7
cLldaUBRp/nz7uvjevbZPzW2D+vvbi1M0mwHpV5lW0+mBiSx4VktnNoOHfF0
F5/9rkdvf6b+Wktsh6/5r/Z6/ahHcf7zfXXJ7bCjJXzAiL4B/ZLLvsmZjuvr
T23w2Hw9ypdhOHJqLwnCLG0b6QPqkYASj5nH33bw4v8cK32lHsUcViYZKJLg
qsQBkj1bPeqozhht3keCfunPxbtpdSgy6VHO//6Z3dU/ce9tHWLsvk93H/cX
0ytpU95H6tBbI69L5/D6r1li5cFv6lBjru0MnxgJNo9smftSX4tYFton5HH+
xQ2UHodV1yKBVeme6xa4nnqeFo3SatEBybiwU7dIwHpy7/FFSi0yFHmQqWdC
AoaiPu6b32pRHO1rm6spCRR3XL3D0VWLZsUMo0mGJPBYtVf/mlqLouL49ybh
eEszyDK5eWI+zNt9G3/fQq83V9O0atF2JbuZqkoS2JSlFLptqkXumWJcNTvJ
kHTkdkpVaQ369jJkQXMfGbLe61l8kq1Fk75sf5+rkoHrezvTI4datCWSYUjv
Hwk8FdwEZkNqER8R3P+JiQyDqg6Antaip5oW5z13kaE0gV+ar7YWneVjSJpV
IMO4UqlD1Mda5BGWXJKsTgYR/7LHUYO1SONtiVWqBhlsx3n5VcdqUT4bd0qx
DhmEf+hYzCbUIpFtXXVVhmQIt1jPe/OhFr0cyLwtokWG/WI2Sq/talEfTWEg
XwW/L1QTYqXu1iL71dhL+y6R4WfCUt5O81pU+bqyMgmfpzBxh9H1Vi3ayb3y
iR/Lv07JNCZhudDehdAHF7F9f7fsK7lRi64Jt2UbYHnHgx/LgtdrEeHx0fo8
lmvI1IzlGtUiry9/9R7j89eD/PICsHxt6XCMLGa6j46nKddqkXfmQm4gXi8x
lxptrV2Lbv6J0rfHcpNqRYWNy7UoePjyMS/MHUZ0IWewXHng5c4SzFZVrMbn
sX0DGZ8Oh14mQ+G/Za/fOL7JYaROowtkSFWVd292xP6O3jDx0SPDS5aij6zY
X5uW12cktcng3Nuda21Zi54kKJXexPzBRM5xH9aXfsP9mROOZ0y6Bz9KqkU5
FjODUdZkiD182vWTYC2SW3b/4XeDDGxFE4mz7LWo/8L5bc+x/bGp6IA3Xy1y
1dxdIIzfdz7xdBGuUzWIRfaKmpkdGXLMon+4Y+Yf+qHxA+/X69itHoHrR3n4
ycet7mR4b8LjuNZWg4Ta+01ZH5FhWI3bTK69BhlT2MvK8PtxW9kbgV2kGjT3
sjbbxJMMRdQPpkutNaiJl0ep8QEZ0hndbHV6a1CVYIvHOj6PYcGN/ic+z5nP
+NSUw//5tXUsxvKc4VdLJzEXC0c/l/lag3IPbegK4v03ONx1+wZqkOw2rZwt
TmQoyxM4lTZdgwy5jbceeEoG3e7THY6LeH3Ka3kdb1wf9ikiN1lxPdB5Pu7x
IcP92zo+tZifg5FIyTMytFQOH3izXIPC1xO2fvXD/vrvK/fsqUE7bLRLVT2w
fqeykncLNahn2wcbSSwP4vHZbjVWg7IbJONt8P7Hdx6zL2L/t3EfuaWH/d04
+iGKiv3/kHiCdtaLDIGPiuXD8f05f3FyRSGbDFMp+2rf4HzzyPmGxtTg+l4n
h+7bUocK/Y+7t9aToVZML112rhaFK8w6CPbh8z6q6clz1iHryP2mLXNkeD4r
PViNuSSCLfAAlQx/pM2ufJfBcl6BYt06XP/lTKdbr9Yh1qC7rsu9ZNAMZ57Z
ca4OMSdG694eIgP/bKemuGYdekM3bPZ0lAw9GgYFpcp1SMKbNa90jAwp5UV/
kzEHBQi8+/SDDG5H9zmX6dYhNpt3LrXDeH0tc+bxa3Xol1rbQ2m8XkbmtOyu
G3UoqtLE/tEIvu/P/h4JwnwkuWpAGcv1WUjc7/fUIf3QumeWP3F+7hsvFYvV
ocWmcPHIv2T4rHT99+rzOqR2mctkF15PMmtIaAuvQ8saDzjGF3C/cknZuckM
yz+7BV1bJcPkLbdSvZA6dNfOdOT8Ohnsir4rXPesQ0MyakKcO/B8tvQjVsqu
DsUu3g3/RE+ALE/bhezjdehqFd9Z8U14Pg0zuHlMpw6hHPvqIDxPbbE0qtc2
qUOd5s4/DBgI0Dxtc83xdh16vmp1NAvPU3zzGcdb7tahKo2G50N4vca/CHtl
HN9kauXfIGECvrHM9p7A+eJz3KTEgOMrsjdl+cH//e5QddA0zl+IgRNTNe6H
E9HTBnSTZKhwjIu0aapFBuL6QlzYP81vrhs7B2pRkr9/6Fm83+9m4I+tDbXo
7oLF2CRBhiigy9HA9z3/47eP6iQyxF/y1/a5VIsOJk3x02pxfXCO5U3o1yKj
242fTYEMW+yeGEpg+ebGE9MH8HzHuHNctLqjBmUxHyyaCCeDoIL3JQ2OWvSv
tzHmXDoZsne7W3vW16D2b05G3EXY/i8V+9UaatC1ValiwWgyGEpIGvQ8q0Gd
DaaFTbj+NxOvSx1u1qDq6uAduqFk6LZz3/fxRA2yb74VZI3vm9uFzySSdg3a
Mn5RqAH3h0Yuvzv/pGqQTnXXrVf4fm7lyFn0EqlBXeYyEoEvyIBI5+zvK9Qg
avPwlXqsT0t42+d7J2sQ/djg5YFIMlhqSL1WPIZ5nHuJJx73q1zjMwUMNaiv
4UizdBqeJ43GTDNkalBcoJzA/lxcf+WTqgfFapDUmUUfaMb3pXKxP1arBpFH
LuhcbcXzrU5kf/fhGsRs6qr6qpoMCzwKNuZqNUiN690faxyvnLu5p1Xca5BC
/KPzx/D+u+vdMgsPatBD8Y39Gz1kyO1JtRcQwv4YyBVZYH0a85fZg1RrUIRW
efmubjIszSjMNOyrQd2egpXf8P2K0b2SH4vtTxm658+D6098Ye3Ss/Vq9HPa
s7gA3y+Hvy85I/lqEBoNCn6N749Lq+KNrP5qBM3CXq8oZLinqm29MVyNumqM
hvlxfrvfvPd7U1iNKoSP75zvJMPB3u1ZQp7VKKpZXqWzjQz5Wv/Kxa9VI+Vj
5WnpG2R49pNZQsSmGjH1Blr5bSdgR7BCoit7Ndq1N6nxNL7PfH5+ZU4C1Ujo
jHqU8zYCTHvz9uX+q0L3Qrdez+IiwNplpn3XlmqEVt8pWeH74HDmg3k7lpcc
+Kb8Ht/fbaWc+eHjVci7uJlulIMAJbe30NhShWT1CuQa8Hkv3qmw7ButQh/d
7/de20xAYdOOZNnmKuTC3nQ+nZmAX+v+PlvJVej2ZdZ7Ljg+Tz+OHa+mViFu
iYMjdHQEbFtdkyPRqtDcppJrt/6Qwb1TwLi6rwpJ3WSS2Y/9M+I0Vy4eqEIB
5FrtAdwPTF891viAme5W9T8fzGFMw1FPW6sQF3f41fB/uP6KJ3udqqtQoMtu
bsPfZLg5Fju0haMaXdA6HNSH87t8uXjC8kYVurlPb7861l/f5S7jT1SiT/wj
1hdxPfyU4ZUXeFmJSiSiPwZ24Pq4rbYS4lOJ3qyxHTDNJ0PV+LM9jFcrEeVj
nMh0IRkGqNa1jLcrUd8pg17Jt2TYPaH+0le6Erm9a1vdgutbvLLt5tI8oKVT
dFsn8P24EBshbk0HaHo3/e2X+L7dYXt7OeF4BdLR0Q9QxfVfyDEZyzJQgehv
F0l54+/JP45Q0lBvBTrUupFXhuvx5pWF43vFAZVevds9WUXG/c/vx8ezgESe
/sz0xd+XoIX60l0cFchesTmmFdebuG3ywUMCpejgq1c7/7//R/j57p5kKkEa
ZmfDAzDnTt7+Hm1dgmi7wgQU8P383TPSoL65BAkZMFora5LhnXtczvxKMdLy
afmwH/vn/OO24PKHYiQyoBXvFYX719QBCRMsPxcZZa6aTIajDX6K/vQlaIH9
eO061h9332s0SqcQnfZz+b2B+6VBw9ePvaEFaEeqyj7RnQRoiZo45WcUoKqH
744jXD/uIeXZFw0KkDjD2okx3N9NRW1dDKLy0dbHKVc0cL0u7T8p/tgxH5mw
HvQ6h+uxkWQlc6UtHzU8ozpXzpPhLd3iNrX0fFT03ubfSAMZAqKZtKXn8lCF
yuLbK7gfSzqNqPcO5CEu2+qUcZzffMr+Dd3aPLQrHmIi8H1uH7hBPIjOQ178
X2K4u3A9ptLPP3uah2Z6tpqrsxPA/T40knUlD7U/K6uQFCBAfnKBNSM3D9UL
LQYT+wlQvy3TfyA/D7XNDYWySxHAuvHpcr95PvrnK3je7DQB5f6n7Yq48xGL
my3X6ZMEKFyz+l25LR+p/NhkeVYff58CuL5s18pDSxY/9vN44P0zORZTh/MQ
z+cDlYIPCOjlKe4I+5qLejIV9fMd8X08Z2Bzlz0PqZQZe4y9IiA/4+SFlZxc
9Jin4+lkHgFXLrrriMnloZt9eoaxHwkIPvzZbeZELpJcaDaO6cTxvmqnvSGQ
jTiTiu1F2SjQsjou8pcrG8U9WVtOOkiB0pRbyUVqGUgzvjwy7iYFrqYc3jEz
moUE6g+YsvJS4Lrl0CG9c5noRd50/TYZCvSQbwh3kDPQSSHF3r+CFNA9Rv84
VzET3ZlRsPfaTgFJHxNypVomMqQJjxr9JcDiyH12ISIdcXJY/+nC543qDqwq
vElHFroCzoiFAubP340h0XRkGeNwNhavn5XT2AQZ6UiQEh1TJkaBt0lh7i8Y
09Fuc9WzfUcowMVjdNup5TPKauXnUz9OAZY3eRG/UTqS3f7Y3gDb94FDSKKJ
IR2liadm7uanwOrVw4FaPZ+Rxm6bJl9pClwqrq7yv5OGbobx6hhje1cyE2Lu
xKch7xxaIzfWFyl2qP+Xwmck8qqvyRCft8JrRznY/xm93WOGWjQooOlb/DpE
4zNaLNrhX3WJAkfPLl9f5P+MlKItLYuuUcD43kX7t/i8nIj7RryaFNhuLlW1
71M6UuqY+eFwnQKtvxz/itqloWbFTrLREwo4mlsWsuLzv5UIVIl6UCCF6582
+Kah3oC8jUrMGt7TOtTHaWhc8tidi5gjbW9bxT9KQ6IzW3/9fIT9TytVfPoy
DaneP8l4DctXuyqHzgSnofnhDnDF8vhE5Zg90WnozesakzzMxuo2pokpaehF
6++Bc5hP/bMabMb84Da/YbU7BSxai6326aSiKMm4w3v0cb4r5IPcclLRylfx
4+53KLD1wwMUP5eCcls2ZwtaUSDtcd+FDY9UxCD82ijdhQKfOb4nb3uVisws
de7visA8o17SrJiCOOSUs1EpBYYJS1FN3xR0tl/py/cECki4zd+JNU1Bey8F
Hf0eSgHRgN+HJjlTkGJXSR1vMQWO7Rx9afY5GTXFbWPnyKcAu8F48/HeZJTW
sUdeMpEC9xp/0ugzktHvcj92QazvZ+r2N5zriUiViNu0q5kC8xoSU1PFSajO
gV9BuJMC/ILRpfYeSYj0/o6P8ATO72+jZfJIEmpc0nl6oZ0Cr2tft8k8TEZe
GULfzpRTIHc3Y4ZVeTKi7PY5O1BJAVq2mOi6YxIqYmjL+8dBBb0Aj/bnfYno
aGyC1yV6KpgXVmW5dMajJ7ZefUObqXC/dqlLajEBwdtwr6YdVAhO33oiuTYe
sReq+4Vup4LRN6qv5/YktGwZnrNdkQqBT9roH7cmIMGGd84jMVR46JfyrIA5
AX2Kd99/J4sK2SF/k2TW41Fohl97eAYVeG6qWZLxed7zg08cMqmQrsutJFAS
j/gLD+TGpVPh4Ayj5EXXBLTj1mVWFE2FT1vf3BO7koCc73+w2/OICmymrPtu
YnsyKLEXM72o4MTYT7aDeDToE2ET70SFD6GSJTUd8Sh/kFFo3oEK1bc/XeLq
ikfBOyuME6yo0GzdV3ylOh7lyWf17LakgqebS8aRynh0JUBwd/YtKuizmgxf
L4tHtAM8Vqcxx+twZy28i0c++TsWRYJwfJRUTJXVExCb4cE4SjAVUqzvDIgF
x6PEpT8y4fGYDx8c4GOMR/LaAzV0H6iwNst664ljPLrg30zcSaTCkOWcwaVj
2N/YOyJL2F9htbuPIkLjUJDyd98WrC8/O3zTx4ZYVP/pKb/UcyqoNye+C+qK
Q9SirOOLyThfL/qTVTXjEL2h2Y+buVSQEz9jTL8tDgkbSpxKxPE93vjVPaQu
FsmZKpMicHxN76fV8uXFok2MXqKdOB/P966r1hTEojbhIwcWcqiAxkPe3aiL
R+Qbafa5NThePNPssYUJiDG6wlQW6896dCLpNncC6vEtiFv+ToWZT08kmnQT
0Kjqa/vjf6hQ6MmplPw8HrWf2mm6QNcBe9VCpp65xyPL4Z41J7EO6PK1pD63
S0CB2kp0XiodcLheX0A2OwF5JBWKtz7ogIyuTWE1zQnolkhv5ftHHaC+6hS1
3pWA6j4eaTV52AEbYSwl/BMJ6ICT3SiTeweIpHQ/2fIjAXVUvhwSxJzWsuCh
O52ALo/myOVidku/UXdhMgFxFt3p4HjaAc8fhvmvjCQguX03BH9hfdFSpzZz
tiegOO5tREdwB/CuuGYNQALauWWfLi/m6d/DLHrYPjuGEIvoF/i876ioMygB
XZ+37JbA8tTQ1AsuPglI1YFPShHzt8a0ObtHCUhH8CB/dUgH/BPeI2PknoAC
wjadyMVyHUmG/D+GCehEtOe6RmAHjB2KKvisl4DInK5sIUEdoGyVVCXwNgFV
zn1rTcfn7VYOVGUuSkDRmzhKyJg/P/0DySUJSIw8VBSC9eu9m/m3ozsBXfC6
ftfneQe0sOXnTmTi+yYQ6BOW0AGcdKaiOgcTUcfLFomOmA4YMd3sTZ3C8eK0
HfHP6YA3hUo7L8cloi0Pm8X80zvA+tgKtSQ4EZF58smaLR0wmT4z0rWK5Vdd
Pz5s7YDryXfyeJIS0c9KcFqldoCDMGtrVEgiEvt2IDl9oAPue3c9T69JRJ3X
+sLO0jrghcWAYDnuL29jY08JLXeA551+l5UjSej8UHjzj40OKL1VLNJfmISs
5l7cevAX58eq0s2rLgmJGD0Y3vyvAxaNHdrPNyUhCcaf2YmYOwJnk++JJqKu
/S5vSUI02FVh+CxnOAlpnijf47uZBodEbvHXfUlCx4R+enLtoMEeO4lrageT
EcsmHpNyLhpYXnqYtTybhB5IOohcZqKBdj23sMLOZBQhr1SvQ0+Do72sSheU
ktHF4/E9nJh1e+c1FU4lo/op02RlQRoIaCVc/J+HZjVT/+c+1bXuq3uT0LUi
rfszmGezI1RXZJLQyBenl9miNLh0KX2m5lYiUpGXfrYoS4MvXjWKbvcSEd0X
GfuTZ2hQckaRyXZTInos9XHOHbNbgMuxkPIEdFCydNudYzRQCM5dUM6NR8Vb
0NdYCRqk2HDd1CbHo1vVwyk7RGjAfOCV6ebN8ehLeZOsCxsNdkYe0i1UjEOH
cjxlkzhokOThvcPYMhaZQV9VFfZXSPNpzSXWGFRI9atLZaYBVzYpQONyNOJ7
Ehcdxk4Dxda5GCPraPTJrn/tPCsNTI+M/Ww6Go1ubHx3rcfxXbL9MLXr9idk
Ty5xfojlu1z/gvS3j6ieU67MHucv23KwLv1IJDrbdXaqe60Dlr9UXKkO/Yju
PSSLbcf5i53MFCFzfEQnrtVdeTbTAbJVbrbLRyOQ5EXDZwVzHXBMRcSA+eIH
tOcIZ/THPnzfPhtIxqe8R9Er/jVSIx1wc0Hj8LWfYSgzo0susqMDFNfPluRG
vkPbrx+5MtHdAe0Ch63+3HyDuqdfPbrxBdd79uEB88lQdOy71q2xkg6wUFnZ
ymgTik5qHXPSz+qAgSNH+A1FQ9FLjx39Dnh9sNBBr7eJrxDn75virzKw/QIl
7al5zxG38pXcxkzcf1YEHzyje44WhZ2alkI74Folv0301yDUfmt001G/Dsh8
o9fEG+2Pnt/Rdw+U64Cdv10+TvZ7I7K41Q6nf1RQTWHzY/3ljbRXHFr+VFBB
ZkvWvtmcxyjUXFBBDvd/G3NjIqvTC0k/2FX+B38foqrq2G0LnqDGO41VNp5U
mL2YsFfnnCf6StSlj7tRIeOPkITuIS80fKaS6Rv+PiW8kqD96nuIRoe4POiv
UEH6RAPzPXdHNC8TvGX0AhWURhfcz/64g0y/37Q9J0mFnAK4fdH/Bsq5Lp39
UpgKVSls3y5YX0HJnmY3W+YpIJA8zMvpth9Vg+bWn9MUeOXIbpLmqQ9ajo0x
jtUUaDY9PTX95C6YNxq89S6ggH6C+27mYEc46CAsc/sTBY6vuvFlmLvCVqPS
BcVbFGgXC1Clk3sADEcHdjGaUvB8eDurPcENqvmTHwfh92dGsqpy0tmHkPaJ
tzr2LH6/WG6ZUi/wgr1f8yJrZPH7iqLv4jX/BGRC7p2QYKaAShqHfLOyL/yx
y50SmCDgzU+fS53nn0HepgfHT+L5IsmL4VOAYQBsxPSXD0YTcDboWtCl6EAg
/6numvclQJVxSN+26iU8vNCWnWBJQKZc+oObSa8g1EfHZFiLgFi3qyvdOW8g
vXH3cNUJAkjPubiXPrwB98tbra/vJYCilG+68PAttOvOMatKEPDAUc4l2vot
cFeNZxTh+dFa67q0j/47iPjHwfUB88CtikrbxXdQ7bInhG+JDHziqiKamWHA
4jV1vHiVDDtiBg7N9ISBp9VT3dgZMjh2bU9qZnkPgqfaPtD/IsNXqZYEdYn3
cOyisezaGBlsd0tU7a34ALnLfwy/YbmxzWYxhCKBg2U7Z9IsGfZGxN67Zx8J
Nsralwvx/CiWOCs0HxAJ4tW/hp5Pk+Hka7ergYeiIOOE8/Vr+DwnHm7Jtz+i
YJcJc9uH72TomjvLIqkYA1RvBgvLKTJsfrjRZrYnDmbCJNtvkMjwV7+pwtEj
DjSTWO7143lURY2DRTMzDkonK8Ke4HnXOOZqjvyDeJg68G49ZYIM938LB4kt
xMPpKfFk3mUyCO4ABdbdCfBi3u2XEbZn1prk9XImAb4KrdRL4fg0Fw+v39+S
BMc4N7lMHCLghnRV8SmeJOgn/vKG6BIwfpXL9Up6Epyc3ZLcdRPz1Ol3Z/qT
oHDllGuwOwF/1uiOK75OgimPbb8EnhFw2e5p79nwZNg3/J0vFc+jt1jCOKN+
JMMc+1aXJ0kEfGvT3UHvlAKl427td3MIGBpLzh96nwL3AnMiq+sJ+OnNvz43
nwpW/sHfFjEL+v6zVlVLAwkrrYW9+QTUibXax39Jg0j0fDGjmIBn9zw3rE0/
g22503WudAIufmf+dfXPZ/ibQL1qGUpAi/QfkyT1DNDdyHZSCCSATmHsiEFJ
BnhV2yToPSbganymSFxNBqiL9Wi8diBghZ1F7H15FjTvbTO8aIrn+RKBgFWT
bDgvE1fxVJ2AxyxRm9J9s+GSofGyogy2tzFH3IEhBzqZ94eO4vk/3lqgJzgl
BwY/2f3s+UcGevnzsns1cqEynUs9LJUMhr2z0yOXciH2RahJqg4Z+oMqD7zv
zwV727pJb2EyvDzWbS08mAvjro8XezaTQaMwhy6WIw9ikpKqldtJUFzLd7hJ
NQ/686OfqjWR4Ax7qAKLWR68Kj0aJPqJBOEL0s6JYXmQ2Wa6PesjCSL53u0V
Es0H46ATany6JPi+x3x7d3c+2JVTHl9UIMHp5+ZBY135EELX0ykkQIKDnw8E
e9gWwOsLuQbXBtvh7nVUxRBWAPJKvmZeqe0w/6PZ2PLoF0h5L2C55twOxZ6B
J6O6v8DfXeSsiL9tkHZr0Uy5tRCuC49UQWkb6G491id1rgj4C1Xm6w+3wY3E
svOXE4pAONzX24YFy2MGX9xxLAO1qyL3E3tbwfHsZhM7XYAUZ4Xvsl9aga+q
jPeIJ4DK6wuG5wraAGXElLOkVIFiim4e+WkbbK33aDj5qgbYffaRk7XaoFLt
hdvDo3XQ3PHDXI2nDcyKa1jeLdbDF8+d1+PlWiE58Xn2vbRGkA9808J+rgV2
bJ0RnjBpBsVDnuXh+s1g5ip9OGiiBU40szKrPWiCPW5DuWs9LaAzndSiLd0E
h4IT19+mtMB03LvXIX8bgdGLxbc1oA3O3/5J/U1thOjrd5lirUiQtvfkrqL4
RuBMuK09v4sMni5Gn468aITMMNL6COaTESGrxPNG4BITlbHeTYZfxHBWw4VG
oIg3VVqIkqE7++iepaONIOFgs3Aa8y6Oy192iTfCg03DH8t4yGD+fOgFn0wj
cEfH5PtxkCHNxyrQ724j/PYTnx9kw3XnGqairNIIoRuXjDwF8T03ZusmOBrh
ttaHD3HSuK5Kg++DcCNE3NTYclCADKzkhCFxukaYILhO/lehlYZT2XVhFUWG
KBWiDCWSMvb2Rm1JoVFCkkIiypiUSiFjkalXkSFJmZ3Dc87h4GsZS6HOQIYU
FUVlSIQGvtXP+1p7r/Heaz3ruh5vlMcYJiuYvnkKm4xPyqcocKAi8W3t6K6n
0CGm8qHUDPXFKVPuD5/A6t1a31ac5cDvPQvShvY8gfrxsWyRqxxw1Jg8Z7H8
CSh23P9wKYkDH+10N0v2NwDbVnzPtWgONHe6pZhzG0CTWd6zJI0DJk9H8mP7
GuD6dEpPUhUHfPZT+asDGsDA+nFWfR8HxpNYV0+5NIBYpS4vB/tsmNxZ58PR
DbDnvc5qJSEuFNISf9w41QBKl/iBb35yIOrLlHu6dgNQYUfkr0lwwcoiVNiz
sh6cHkyc226JOK/53/eF9UDPmXA9e5sLGTv/O7PyUD2EPlPdLVnEhbk9oVEz
g3VwWvvMvfFPXDB6+0Wy1K8O5MSZd/RKecD58fCR+pw6OJKvWm3RxoNua8sV
vTm1cDxGQFET5bUjk3a6LjWwKZk1Kv6WByd+OYq4ra0ByzbDDTf7eNDnYdQz
Mr8GVP4MG4nj/RmF/U7SzdXQdD/v+o1OHrj9CmEc/lIN10skGqdf8OCS2yNl
fm81XGpSTLz9igfHJYQELz+ohsqdh27OKvLBPnei6fEgwPXGh3nzDPjQHJou
FLv9Meg4KYoewL2ds+/7o4PRVXD544Sf3xU+RMk5WcqbVkKhmOv8y7Z8MGI8
cFdXqoShEu+ogJ18iEl/02ZpXAE/PlbdplvinqwFyrqP2DDZoHTxLOrTej5f
biyMDYLvLkx3PuJDa//02PPkctB/NNHpgXtuLitetT+HBdbiG7fbZ/BBcF2v
Wt11Jkj4e1jnhPPBUODFWcMQJqxMaFwpjXs+/cf3szoRLLjycVio9zgfAup8
Ow/KlcGt7++WV57gQ7cIH/tSGcixu2dK9PE7bGOg2oLoMjjxvqu07gjGp2g+
q72mDE7X7TGbRFyVMyngdowFx7f0SDqexvg6XjmcG2eCX+/ntELUH6jXYeWO
mDObpL31Ah+qNYIex91lwkNjma2if89rTQ7xtzLhSh9nXht+FzL0Cje2cRnQ
YvCmVsqCD2rqXx6J3WaAe86HGs9tGF+entrLVgYITywKrXjDA/osK3veASYM
7R8LCsB6+jxwMm+QY4JhVV6z/TAPyg/V3pcUZMKA3uMBt3YeMGj33jV2M0Dn
pXPrCUE+mLFF2r8OMyC8MlsiZBUfgt+PqQV4MuDqakmvchU+6K2QdLnjxQA/
dtCpNWv5UC89k7kpmgEsScvaL7p8iA96xnqWzYDxpvvGr3X40KdrZM/PY8Bw
Yc7xc5v54HM74c6BagZkNvlE527BfMfvjSqoY8B5R04q5wwf5LvXBvKFGBA4
8mOtxDU+rH+X6rBTkQGr1hu/Uwjhw9f0rvkqLAaUzcw59TGZD3tbBers6hlw
qK/kVUwEH4Q90p/d02DCP4LeTUdRzrBRLogXYsK67TtlZBIQR1zMtLJhQrZH
an4j8mP8Zto9T0cmaB5TfSrTz4cBt6vP6ZIMeP5qainVzQdFn3rHLHkGiJzS
bojoQj546hvvkmJA+uSJO1Lv+LC6I41+sImC+oEvJjtGkd9mCV9/6DBgse25
s/CbD+VCX0s4KxnQWrQ2uL2XD1OdiTpxQRRsq3EsvtyH9tYI/WhZgvd96+uq
Ub/YbSfLhuMUbNwglp7xig+jxRXp9g8p6DBNtyxuQ37HZQ/PyaHAMujD0cFW
Pgg4CtVcK6VATdz1dgsP61PHfqMFFNy0Fvx4rAXz/2a02/sbBRpfaLunmvhQ
GBmWoz5NQYPJj5Tfz/F+SuAS8z4KJK4WWix+j3xW5xQMt5aC/pI9IePDWI/M
acWu/5UCy9LOLeYb6lM5XDcgXAqxhpYpD/a1guJFw7ZjbcWwAnzinhq0gozu
h/Gf1UVQrvjtZuj2VhCOSaWr9ufDu09yYQzlVhiYs9Pe+WQe6NffmC+i1AoC
SW46AzmP4LDVMfHj7q0g2TDwXnnkPqQljoTvsGuF+O6216997oGHifE8FzXc
Qy3GPrSkpMJzX4MsotMKnAPSrMcZaTCaN5XZr9EKWicG70aOpgHJKOLPrGsF
o105EiI66RCdcyFaD/Fo6LznAYbpMPj0wZVg9VbozbHZd8wgHRaE3rpbhtjH
8ODXIJN0aN3vdFEbsYCEUvB583SY3M1KPSHbCpmu3WqSRqlgMeE/b85cjH+T
5edVS1Nh1n1Nepw42i/st0s1vAuLyjPjZxTwvurb8MGAVPix0eHkgdXor+iN
St/GVPAbjTiWvAbld+LFPJmpYD0jHrdcFe0vKry2NjcVtij+b7n4WpSndJlQ
0Rjvlx7ne8gngSPSvYe2JUOIXtf+3z/5ILl/957Y20nwaqH8QlWst5Zhb3Ln
nXiQNvsdxH+K71fZZFrwawQsXApSip3IZ/pus+mdYfA6aEPblRrsPw9GzM99
vgKHPw3odyIOPtabHRwaBH/WStq9r0B5ipdLjH4wKC12FXjDRftaG6aFJA9B
mn/kit10lIfE/PKU8id53+/rxwIfer2cWL0LQklqPS3TPY0PjjtiVZ60RZJf
1X+kmWdRLp1TYGObQO60ttvvwL02XinPaKF3AjnDUpP/4Ibnm3uUz0/GE9Fb
XulZ7hhPbERRiks8GZfPbDF1Rf9NBZ4rHIknr+Rt04/tx36SkR5yzT2RcPbt
524wwft5eboPdBPIkvaYIb4p9tOskudua2+RxSnt/Jm9eD5N+FxxWCKZEty6
MNca4z3yRKX/UiL5n52xh50zHzI9rjjkPUogppKt1w3RXvXa+zM+KQlEMy+s
RvoUnr8Xmy2WmUC23Cl3i0N/R3t4QWdKE0ia/v5AA3msR+qFA+FWKaTfXunb
Ityj4+MUw37pPiC3F9qIKlXyoDrcefeC+mwyo3r5+oMoHgQ42CYlM3LIyczX
OkPBPBiIzkh3scwjJXMMlxp68sDs1uTddRV55N+ptLFB3LMzQ/YIP9QrIMsW
Wj/d5sKDRu+kXZpx+WQ8pGq+ji3Ob7/cg5N++aTQuCRgGcp95jcl7dhaQCys
OsLVdvNgc4hwocCmQjKT/cgo2+KvPee3VtaFpDrogojvYR7YJux5cGSygORZ
PxP3RH0WKvpaa8YKyF7ze3PHcI93GzKalUFsEeRNk0Z5rsgxpcnxQrIv9uer
HNQvs0dT+HtUManfHnI5Qp8HWt4fV9+aKCbg6aCvb4R4JsuddYtODIu+qKxT
wvOzWWNFynQiXlG5c3g1D9KyOTV6K+mEHTF+l7OKB4VOV56vXEQntWzeL8s1
PFB757N8wxCNBP25eHsSceOmkYWyXBqp2aseM6qM8fSoy+2Ip5HQtgTr4uV4
/pbeM54Uncw8Fvu1eQUPjOrYusr1NKI3/Y1hLYP2T382999NIyasIG9fKR4k
ayhI9HTQiMaz0ateeD845aNMzyiNbOZMf21aiueb8rumUJ+va1d4Auoze3Tj
4FU5OvHIFmvfsxLPhzedjNOhk8WRvmvaF/DA5Or6h3Z6dLKp6eiAsigPpiLX
ben4TSP6/d+djRdi/i4s3fdtkkZkHmd/chHB/G6iO5citnB76TuIWLFDbv3U
AI3ktizrogkjXzTpXvR+GmEYPP9XqocLwc/gv/QmGinMzQw7NcAF+5tTbw/P
oROtqmEFi24u9E1G2aWhfz95/baqfC64zZxvLxGikzi75n6351wwu3M9+l9N
GmkJ/d6n+YwLvfXnnUs300je8SyTqQYu9tXN3G0/ismvTytfHazjQnwqv27x
h2JS7fdw5aNaLgyERB3c31dMeoQzF3QiluEZWjj3FpPIgaobfTX4/RrvO1zR
VUxeXbW64vWUC1Mflyyeo0QjH5e94Azlc4EzZnrt2KNiIhTxIe1yOuIOz09/
ZGmk85myhB3u+TK5l6nCRcVkzUTRhTjcqwdu5wwmSdDI2qU2511DuVBtPHte
uqyY/Nj2peQa4sYkVReHtmLCH6hv8I3AeJuPr83iFhOVdKFZk5tof8PSqsk5
NGIre/ZW+F2M91+x03EaNLJy7677g7jnZ2Zk+ZwVoRHDB+9avTE/gvYJGwQ1
6cTY1nbac5wLX/tiKNubdPIyaf4HL6x/tozcGzkvOmmhq6w2WI/1DF/hmNJJ
J8+eOIgWIN9PFnQ2/WLTybnvR20XyfOg3mdW/u2xUnI3acQqWp0Hwu6Q5apZ
Qox32kVWKSJ/3AXGZIVKiEJHRttO5E/3hN+H5HslZN6VbZp3kQ9TkhLHl/5T
SmyvOqZPfOaC5NbuTrZ7KQkLb+iSQz4PMBoVsmtLySa61Iv2ZTyQ/5S16F4s
Rf7LlbFWFORBr+yuT0SBIowqOaVK1Nftaer70pwin9lp+ccxPkd7ZbajGUUi
aqzMNCa4YBhap68bQBH2yr5/KpFvVf8okUw/ikRSSi6BzVwIU15osCKSIrta
wjVGMF8n31q1Mz0oMm9cJr8X+VO4vUJs6WmKHFaf+67/Cea/eVnloCNFrM4s
iwtD+bmhAJt5hykiK7hxiX0VF9YbZtFvHaVI1I3AuZdR7tMzb6bNliJ5brX7
9iG2iuUPJ56hyPDR0JS0Ji7UV/HCSBRFjhR9WaGD/nooNL8ZrqPIUP8xWtN3
5IOW97J0OQbRFzgrYoDvzVDzQE/ZUgbRbX/vMIHxC25Yw/ZPo4hq4+qpjbI8
sDpGcrflU0Rr93zTWcwXJ1LBbayXQe7p2se4iSMeMK4vfMAk2mIGbswZfF++
l9Y5O5YRtfLVoW3YLwSCV3k/Ti4nkWZDalaS2H9iVQYUrrKJg+a3NHPMr/Ci
XiXWygqyPuTQmajfXNA607zdxaOCGE592q5+HfPhp2nkwC0nW3dUHlq0DN93
ZKXzr3nlZJbmtFt+AcYXcEOdM1lGplwjXGljHGgUXdw2olROkn4vesX6xgEj
u6O5Airl5JnfJmcdxOUjfgWzyuUkdfblw7IhDtDP+O4eVCwn9h97hdW+ILYV
rTqF5zu1//e5bQD36ZPT2gWIGSblN+l/9XtrjkeLl5PpFW+MMhAHsm5E3kN7
UhunZWN/cUAvucYrQrScqASeFHzxiQPVlOC4fGsZud4pEBOF+3Kwq37iE7sy
8ubCRl7+Rw64MTNlprPKSICWz43CFxzQanzw36bkMiLJjJ325XHg3B6FD3tX
lRFt4Qs6b2o5IHz83Pone8pIu8vVo5sbOZB2z+ZfWloZWdK7O+x4EQc4DmeP
LykoIyqCUf8wKlD/pbCmE/5lxGfFnzizYtzvWY70z+0sIvDp0feXLMxPj5W9
/n0W2atb5Oaai/KdZV7CPizS7hV78x82BxQvnU9P9GARneo8ZmMHB0ZFkm9s
K2cS+dPQIPIO9/sNZiOejUyi+WzZwRL0P3m9voz2WRbJlW8q0ezkgOSC9/bB
mizyPWJ+5uU3HLDabuIbu4FFJIvDYrgoT9bLPzC+l0VudlAaf//7KzetOuHv
yCIjfwoyfmC96uNrtVQeMgmEShYekuaCtN7Pjis2TCK86uk5lX/x/VW0OS24
yyA9I2ARpoT9+KRR6qeLDFITru5vjvUQWz334v9yGGSlXL5G5gbs34trwv3Y
DDJ4Wuf80rnYD8nQANuLSVzyj/wOaeXAlHMFuyuVSTwM5Gxu53PAAioCQ/ex
yNstGYtOPMT6z3m+z1GBRe4XntaORtza/HPR8XwWqbcZXjH3DsZDdm2uu8gi
RkcOt5Tc5YBhMl2VsJnE3ld/4iHmN96xtnRZH5MU8QdeNjKQD7/mX8lOYBKa
qZhfSyXWO6raSfYNk1y7mNG8Fet9zv5dWYYEk4QqFSbef4b8cHv3fPoik/z4
puy5hIv2rBxcL1kjrv6j8bYe62Fbv2PHYiaxtp08u/4V+ledIfr2O4NwhLds
KsR6f/Xqv+64gkm8xweyt5ZyoCP3oqg4i0FeN6h2bkC+dSRGO0UtZJDaW/kR
5i850LwqZntRLUVOBQn53BrE/Njc8xLqo4h7qfgWtTYOVHkHSd/azCDqTWHs
AMyfsJNUXpY1gxxmfhRYwEf7IZXPO+wZRKryiX0p6i80GFr39z+sAu2cBi5i
+/bjcvkuDJJ1MiDyM76/DkdLYSFdBpEHZv2QAM4fOzHL7ecpElLkf5v8QHsH
ft82vs4gxQvYhUfksT9IHz2gWE+R0vLSAzF6XBjXNAefTxS5Xjfo8l6DC8n6
hea6nymyRlgnRnAtF5pDiGKoNIPwtX62+CN/5NVf33RDeciVWosDCthf3n7e
0ltFkcSwFrHdq5EvwNWOyqKIq5L8siX6XAjQEl16O5siFl5pRV+34nyuDZal
3aHI/ZGc0yMbudBqadDFuEuR3yFnn/7QQT4WHlAODqSI6beNFrQt6K9UWpRU
CEWYxk6HHxOcB48vNkjiPPnclLWmw4gLjMOBBlFeFDmZ9KiGgXJHIbJomTdF
/GRdNuejXEszZe89dwpnzibKGnGUS7/qUleKXPKvs29agfN77+WbJJ0i42a/
Q0Q34Tz85h/x24Qip88v6i7D/Jicmm28JU2R1//ROx1WYb40thzYFUwRFsl+
/gPjtQ37Mk4TpUiK8y6BJjnMj+AfptFFnCc6gzYnJHAeVd5xr0b/Tdt6VcOW
or8rPqgfs6FI1b5LM1ulcP55DRp12VPEId0xN+/vf4HWzvX6OhSR3Fk+hyGJ
/v/r6aSiSRGTR1GPX4vi/NvVPTN5mSLvheYe3CKM51f6Z1pFU8T2dAf76AzW
O4jZ5KVMEX3tVZG35+D3k8e6y0sWUKTwY9X5AsRho12D5nMp4nZE9+Av5Eua
hXLUttlSEljh5184i/1x+HKxyJ9SclKvaX0Tylvrn3jm/iolxrUPfn3F+5sb
orWnxkvJUyVTT3nsB62e4Rknv5eSwlfLaVKIZURlZaXG8PvkLl1dA7FHt0PC
p2+lRKhlo+s/iDcbnOnwRVz8u/+nImLpeqn/2kZLyZjM90ijv/K5Z+8UId47
8eaXOWKxjl7fw4gfdz713fr3fKqwxOxwKYkwP2e45q9+e/6zDYgT1a5PbMR+
aKsR/CfAiSL7T905Oa8J83GIp8WtoUhcwjf2FcQDIv7J375Q5G7RuhW7sP/X
UxWuR8ORn3tbWgKxf8ecEt6p30gRM3P5pf+7h/3na7Mr+y3i91zTLYjVAgIX
vxpmEFGj9GWlN/F9vzJ7qT3FILt5RkaiqRwIM0oTXXyQSW4JUD+tPTgg81By
MAv7+6chwW2cfRwYVwoSWf2EReBqrJKSG/Zvdz/ZK1vLyMcboyrhzuiPkqoN
O76MCI219+gdxvf/2ybtc1wZEbfcLPfCHvuRga+1SXoZ6cjIbffA81VbZoc7
bpWRxInULpOTqE/05QvazTIS+TC9owCxmKTYN7v/ysja1fF/RlFfGAmteIXz
XENcz0zWmwPyyjXrPriUk6E9OUnvj2L+xpxfJoqzycUPEvnrXBEXVwSInmKT
Ere1Fil70B//xd8dbNkk+lyXmq0N9uO3l45sYLOJiqGIwbA5B9ZndJTxpStI
ZXGhp68d2hvita4/WEFiYhKq3npyoNtunem21RXkscXTjTwXDjje7Fku4VlB
GLIX/YTP4/eAxuJNs8MV5Muaq+fDTuM8NWq20pKqJHJefc3CF9CebZWd2PpK
Mp2vuSUE71vYPJ3W21hJ3LOSdsahv2lfpujhjpXk/+nyZXM=
               "], CompressedData["
1:eJwVkX1Qy3Ecx39MOnTloZUQap7XVa6lrgffdhxSO87ZYacuOc5TN7QR6ez3
K1vpslqbyUweTh6KGFor9glTsYeM+/08ndMkxclTmdWQrz++973XvT/3eb8/
n09YtnjNlpEEQSzE7/+/fcHyN6lGBnV2Zgkck2WQwlq8YrCRQWf69AJbayEs
azfIdhgYRHwdGG+7Q8HCF9wkRT2DZJf+xHi9FGQGGcj9Vxk085nMlIv15Vvr
V2djzhLx2VwLBfHSs+cG6rAu0eemNlCgmb+o2fCfG5+heU0URNa4LiVUYBY/
KlD3K8AnQWX3XMB+Qz/OxjoUsEm0139KM4NSfo/96/NaDnPK/GGaFefzPFgZ
cFIGcd4T+s1OrBvzs6g2EuYGF9+S23G+8KkcfgMJYkK1hN+BecI5Xk0fCSQr
MJljw2w8aPu+joLNOTHsQFxPfNS/N+RR4N7VfVLai/sN5hVqKgsgv0CXHOHF
urtq0nQR9uMQUTTnOSLm84raXfugz9WRM/cu3t/BD8oAVgkkCoLWJrfh+Sf/
jLRUKeDKKmtvUSueL+5VkjddAdpTfsH8UuxPjShONJdCQg5/62kprhfMusAe
VQ41YYeCC6MYtDpVaK01VoD2V9Lb0Gs0mmnJyBQNa6EqNq2jxEaj8eEryZ+C
4yCJ2LPW10mj6Lr35CBXAyGsodfVrZgpTfmn+OPwyyfwwJfrNGpx3zR12zVQ
pD7CI2/hfmPufjTGaoEOtW0srMR618BD3Twt6GezW0dUYzY7breoK2HxbV13
6D0aEWJ2tF9mJXDpgM8WoFFWD2NZlF0B4yTOOM9TGj1Rm12SdBUc7RijzbBj
/7Sc2oK8clDp8xok/TSSJVbcCCbL4bzN+TKkh0adwg0Z0olKMH23qg5gJoRr
2DvDj8Goy0vjhEM4X9fjYnW9Epx+w009oxnUUiMWPu8/Br2+w+wgD41SzIfT
L04vgygdzz8kAt9LPvv+Nn4ZnPKNHv00Et/rprLU/rkE3q3/KjQrMTftlh+W
H4HGGe4Yhwnvv/eb909YPnxK2fhqwhPMzfHS+5r98A+xwZsQ
               "], {{0.38160326344937373`, 0.00617088372716651}, {
               0.38178024887927564`, 0.005965105147203165}, {
               0.3825622121039932, 0.006838860451122142}, {0.3822152032861879,
                0.007610123830834814}, {0.3820635279150915, 
               0.006805263709287357}, {0.3817878738672881, 
               0.006263479036543784}, {0.3816188594498993, 
               0.006256384634424572}, {0.3815346935909089, 
               0.008061635104623932}, {0.3820888037271052, 
               0.0077504238795289004`}, {0.3833822259007702, 
               0.006388711850603412}, {0.381855710245206, 
               0.005290768316602856}, {0.3809984556520721, 
               0.0052374175003241374`}, {0.38010823297991203`, 
               0.005347983532186296}, {0.3800156267289455, 
               0.005369089417590567}, {0.3799620418450103, 
               0.005389577324953709}, {0.3799523783554484, 
               0.00540330335977568}}, {{0.3740754965913841, 
               0.006588385673123809}, {0.376730704531188, 
               0.005388870867748918}, {0.37579857023064694`, 
               0.005019168075745428}, {0.37588659037461203`, 
               0.005273191179749226}, {0.37576823902967155`, 
               0.005153706377300338}, {0.37575599141483956`, 
               0.005380918853052696}, {0.37566885958410445`, 
               0.005212058506438133}, {0.3754927095857048, 
               0.005485926543165098}, {0.37541468579677023`, 
               0.00548442161141105}, {0.3733417989783999, 
               0.003160429507966467}, {0.3723242185218543, 
               0.003620529075798684}}, {{0.3656150512485093, 
               0.0038237897122916364`}, {0.36544176655037475`, 
               0.0061987769657676495`}, {0.36589218605289614`, 
               0.007044281092854321}, {0.3667030760066618, 
               0.00396207342130922}, {0.3654651286066138, 
               0.0029802980898386844`}}, {{
               0.36483960592263626`, -0.002668260760414931}, {
               0.3640609418988583, -0.003099522106947583}, {
               0.364023235591358, -0.0016375813900498803`}, {
               0.3643889826272393, -0.001807619224123147}}}]}, 
            ImageSize -> {{410.4252397392752}, {218.21399119209647`}}]}], ",", 
         RowBox[{
           TemplateBox[{"\"share of women employed\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"ShareOfWomenEmployed\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"ShareOfWomenEmployed\\\"]\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{"47.7`", "\"%\"", "percent", "\"Percent\""}, 
            "QuantityPostfix", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"short wave radio stations\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"ShortWaveRadioStations\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"ShortWaveRadioStations\\\"]\""}, "EntityProperty"], "\[Rule]", "19"}], 
         ",", 
         RowBox[{
           TemplateBox[{"\"signed environmental agreements\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", "\"SignedEnvironmentalAgreements\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"SignedEnvironmentalAgreements\\\"]\""}, "EntityProperty"], "\[Rule]", 
           RowBox[{"{", 
             
             RowBox[{"\"AirPollution\"", ",", 
               "\"AirPollutionNitrogenOxides\"", ",", 
               "\"AirPollutionPersistentOrganicPollutants\"", ",", 
               "\"AirPollutionVolatileOrganicCompounds\"", ",", 
               "\"AntarcticEnvironmentalProtocol\"", ",", 
               "\"AntarcticMarineLivingResources\"", ",", 
               "\"AntarcticSeals\"", ",", "\"AntarcticTreaty\"", ",", 
               "\"Biodiversity\"", ",", "\"ClimateChange\"", ",", 
               "\"Desertification\"", ",", "\"EndangeredSpecies\"", ",", 
               "\"EnvironmentalModification\"", ",", "\"HazardousWastes\"", 
               ",", "\"KyotoProtocol\"", ",", "\"MarineDumping\"", ",", 
               "\"MarineLifeConservation\"", ",", "\"OzoneLayerProtection\"", 
               ",", "\"ShipPollution\"", ",", "\"TropicalTimber\"", ",", 
               "\"Wetlands\"", ",", "\"Whaling\""}], "}"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"spot oil price\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"SpotOilPrice\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"SpotOilPrice\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           TemplateBox[{"114.84`", 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             
             RowBox[{"\"per \"", "\[InvisibleSpace]", 
               "\"barrel of oil equivalent\""}], 
             "US dollars per barrel of oil equivalent", 
             FractionBox["\"USDollars\"", "\"BarrelsOfOilEquivalent\""]}, 
            "QuantityPrefixUnit", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"school starting age\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"StartingAge\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"StartingAge\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           RowBox[{"Missing", "[", "\"NotAvailable\"", "]"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"start up procedures to register a business\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", 
                 "\"StartUpProceduresToRegisterABusiness\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"StartUpProceduresToRegisterABusiness\\\"]\""}, "EntityProperty"], 
           "\[Rule]", "6"}], ",", 
         RowBox[{
           TemplateBox[{"\"statistical discrepancy\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"StatisticalDiscrepancy\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"StatisticalDiscrepancy\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{"1.5972`*^10", 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             RowBox[{"\"per \"", "\[InvisibleSpace]", "\"quarter year\""}], 
             "US dollars per quarter year", 
             FractionBox["\"USDollars\"", "\"QuarterYears\""]}, 
            "QuantityPrefixUnit", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"strength of legal rights\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"StrengthOfLegalRightsIndex\""}],
                "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"StrengthOfLegalRightsIndex\\\"]\""}, "EntityProperty"], "\[Rule]", "11"}],
          ",", 
         RowBox[{
           TemplateBox[{"\"submarines\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"Submarines\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"Submarines\\\"]\""}, 
            "EntityProperty"], "\[Rule]", "70"}], ",", 
         RowBox[{
           TemplateBox[{"\"suffrage type\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"SuffrageType\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"SuffrageType\\\"]\""}, 
            "EntityProperty"], "\[Rule]", "\"18 years of age; universal\""}], 
         ",", 
         RowBox[{
           TemplateBox[{"\"target federal funds rate\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"TargetFederalFundsRate\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"TargetFederalFundsRate\\\"]\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{
            "1.7500000000000002`", "\"%\"", "percent", "\"Percent\""}, 
            "QuantityPostfix", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"number of business taxes\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"TaxPayments\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"TaxPayments\\\"]\""}, 
            "EntityProperty"], "\[Rule]", "10.6`"}], ",", 
         RowBox[{
           TemplateBox[{"\"telephone lines\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"TelephoneLines\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"TelephoneLines\\\"]\""}, 
            "EntityProperty"], "\[Rule]", "103052000"}], ",", 
         RowBox[{
           TemplateBox[{"\"television receivers\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"TelevisionReceivers\""}], "]"}],
              "\"EntityProperty[\\\"Country\\\", \\\"TelevisionReceivers\\\"]\
\""}, "EntityProperty"], "\[Rule]", "2.19`*^8"}], ",", 
         RowBox[{
           TemplateBox[{"\"television stations\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"TelevisionStations\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"TelevisionStations\\\"]\""}, "EntityProperty"], "\[Rule]", "2218"}], ",", 
         RowBox[{
           TemplateBox[{"\"terms of trade adjustment\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"TermsOfTradeAdjustment\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"TermsOfTradeAdjustment\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{"6.78621695858909`*^10", 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
             "US dollars per year", 
             FractionBox["\"USDollars\"", "\"Years\""]}, "QuantityPrefixUnit",
             SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"terrain types\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"TerrainTypes\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"TerrainTypes\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           RowBox[{"{", 
             RowBox[{
               TemplateBox[{"\"beaches\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"TerrainType\"", ",", "\"Beaches\""}], "]"}], 
                 "\"Entity[\\\"TerrainType\\\", \\\"Beaches\\\"]\"", 
                 "\"terrain type\""}, "Entity"], ",", 
               TemplateBox[{"\"deserts\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"TerrainType\"", ",", "\"Deserts\""}], "]"}], 
                 "\"Entity[\\\"TerrainType\\\", \\\"Deserts\\\"]\"", 
                 "\"terrain type\""}, "Entity"], ",", 
               TemplateBox[{"\"forests\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"TerrainType\"", ",", "\"Forests\""}], "]"}], 
                 "\"Entity[\\\"TerrainType\\\", \\\"Forests\\\"]\"", 
                 "\"terrain type\""}, "Entity"], ",", 
               TemplateBox[{"\"hills\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"TerrainType\"", ",", "\"Hills\""}], "]"}], 
                 "\"Entity[\\\"TerrainType\\\", \\\"Hills\\\"]\"", 
                 "\"terrain type\""}, "Entity"], ",", 
               TemplateBox[{"\"marshes\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"TerrainType\"", ",", "\"Marshes\""}], "]"}], 
                 "\"Entity[\\\"TerrainType\\\", \\\"Marshes\\\"]\"", 
                 "\"terrain type\""}, "Entity"], ",", 
               TemplateBox[{"\"mountains\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"TerrainType\"", ",", "\"Mountains\""}], "]"}], 
                 "\"Entity[\\\"TerrainType\\\", \\\"Mountains\\\"]\"", 
                 "\"terrain type\""}, "Entity"], ",", 
               TemplateBox[{"\"plains\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"TerrainType\"", ",", "\"Plains\""}], "]"}], 
                 "\"Entity[\\\"TerrainType\\\", \\\"Plains\\\"]\"", 
                 "\"terrain type\""}, "Entity"], ",", 
               TemplateBox[{"\"plateaus\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"TerrainType\"", ",", "\"Plateaus\""}], "]"}], 
                 "\"Entity[\\\"TerrainType\\\", \\\"Plateaus\\\"]\"", 
                 "\"terrain type\""}, "Entity"], ",", 
               TemplateBox[{"\"reefs\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"TerrainType\"", ",", "\"Reefs\""}], "]"}], 
                 "\"Entity[\\\"TerrainType\\\", \\\"Reefs\\\"]\"", 
                 "\"terrain type\""}, "Entity"], ",", 
               TemplateBox[{"\"valleys\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"TerrainType\"", ",", "\"Valleys\""}], "]"}], 
                 "\"Entity[\\\"TerrainType\\\", \\\"Valleys\\\"]\"", 
                 "\"terrain type\""}, "Entity"], ",", 
               TemplateBox[{"\"volcanoes\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"TerrainType\"", ",", "\"Volcanoes\""}], "]"}], 
                 "\"Entity[\\\"TerrainType\\\", \\\"Volcanoes\\\"]\"", 
                 "\"terrain type\""}, "Entity"]}], "}"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"terrestrial protected areas\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"TerrestrialProtectedAreas\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"TerrestrialProtectedAreas\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{"1.2774938272770578`*^6", 
             RowBox[{
               SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
             SuperscriptBox["\"Kilometers\"", "2"]}, "Quantity", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           
           TemplateBox[{
            "\"textiles and clothing fraction of manufacturing value added\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", "\"TextilesAndClothingFraction\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"TextilesAndClothingFraction\\\"]\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{
            "1.20800294285985`", "\"%\"", "percent", "\"Percent\""}, 
            "QuantityPostfix", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"time deposits\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"TimeDeposits\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"TimeDeposits\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           TemplateBox[{
             InterpretationBox["2.461`*^11", 2.461*^11, Selectable -> False], 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             "US dollars", "\"USDollars\""}, "QuantityPrefix", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"typical time required to build a warehouse\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", "\"TimeRequiredToBuildAWarehouse\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"TimeRequiredToBuildAWarehouse\\\"]\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{"80.6`", "\"days\"", "days", "\"Days\""}, "Quantity", 
            SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"typical time required to enforce a contract\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", "\"TimeRequiredToEnforceAContract\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"TimeRequiredToEnforceAContract\\\"]\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{"444", "\"days\"", "days", "\"Days\""}, "Quantity", 
            SyntaxForm -> Mod]}], ",", 
         RowBox[{
           
           TemplateBox[{
            "\"typical time required to obtain an operating license\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", 
                 "\"TimeRequiredToObtainAnOperatingLicense\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"TimeRequiredToObtainAnOperatingLicense\\\"]\""}, "EntityProperty"], 
           "\[Rule]", 
           RowBox[{"Missing", "[", "\"NotAvailable\"", "]"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"typical time required to register property\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", "\"TimeRequiredToRegisterProperty\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"TimeRequiredToRegisterProperty\\\"]\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{"15.2`", "\"days\"", "days", "\"Days\""}, "Quantity", 
            SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"typical time required to start a business\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", "\"TimeRequiredToStartABusiness\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"TimeRequiredToStartABusiness\\\"]\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{"4.2`", "\"days\"", "days", "\"Days\""}, "Quantity", 
            SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"total time and savings deposits\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"TimeSavingsDeposits\""}], "]"}],
              "\"EntityProperty[\\\"Country\\\", \\\"TimeSavingsDeposits\\\"]\
\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{
             InterpretationBox[
             "6.1477`*^12", 6.1477*^12, Selectable -> False], 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             "US dollars", "\"USDollars\""}, "QuantityPrefix", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"time to prepare and pay taxes\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"TimeToPrepareAndPayTaxes\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"TimeToPrepareAndPayTaxes\\\"]\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{"175", "\"h\"", "hours", "\"Hours\""}, "Quantity", 
            SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"time to resolve insolvency\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"TimeToResolveInsolvency\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"TimeToResolveInsolvency\\\"]\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{"1", "\"yr\"", "year", "\"Years\""}, "Quantity", 
            SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"time zones\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"TimeZones\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"TimeZones\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           RowBox[{"{", 
             RowBox[{
               TemplateBox[{"\"America/Adak\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"TimeZone\"", ",", "\"America/Adak\""}], "]"}], 
                 "\"Entity[\\\"TimeZone\\\", \\\"America/Adak\\\"]\"", 
                 "\"time zone\""}, "Entity"], ",", 
               TemplateBox[{"\"America/Anchorage\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"TimeZone\"", ",", "\"America/Anchorage\""}], 
                   "]"}], "\"Entity[\\\"TimeZone\\\", \\\"America/Anchorage\\\
\"]\"", "\"time zone\""}, "Entity"], ",", 
               TemplateBox[{"\"America/Boise\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"TimeZone\"", ",", "\"America/Boise\""}], "]"}], 
                 "\"Entity[\\\"TimeZone\\\", \\\"America/Boise\\\"]\"", 
                 "\"time zone\""}, "Entity"], ",", 
               TemplateBox[{"\"America/Chicago\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"TimeZone\"", ",", "\"America/Chicago\""}], 
                   "]"}], "\"Entity[\\\"TimeZone\\\", \
\\\"America/Chicago\\\"]\"", "\"time zone\""}, "Entity"], ",", 
               TemplateBox[{"\"America/Denver\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"TimeZone\"", ",", "\"America/Denver\""}], "]"}],
                  "\"Entity[\\\"TimeZone\\\", \\\"America/Denver\\\"]\"", 
                 "\"time zone\""}, "Entity"], ",", 
               TemplateBox[{"\"America/Detroit\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"TimeZone\"", ",", "\"America/Detroit\""}], 
                   "]"}], "\"Entity[\\\"TimeZone\\\", \
\\\"America/Detroit\\\"]\"", "\"time zone\""}, "Entity"], ",", 
               TemplateBox[{"\"America/Indiana/Indianapolis\"", 
                 RowBox[{"Entity", "[", 
                   
                   RowBox[{
                    "\"TimeZone\"", ",", "\"America/Indiana/Indianapolis\""}],
                    "]"}], 
                 "\"Entity[\\\"TimeZone\\\", \\\"America/Indiana/Indianapolis\
\\\"]\"", "\"time zone\""}, "Entity"], ",", 
               TemplateBox[{"\"America/Indiana/Knox\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"TimeZone\"", ",", "\"America/Indiana/Knox\""}], 
                   "]"}], "\"Entity[\\\"TimeZone\\\", \
\\\"America/Indiana/Knox\\\"]\"", "\"time zone\""}, "Entity"], ",", 
               TemplateBox[{"\"America/Indiana/Marengo\"", 
                 RowBox[{"Entity", "[", 
                   
                   RowBox[{
                    "\"TimeZone\"", ",", "\"America/Indiana/Marengo\""}], 
                   "]"}], "\"Entity[\\\"TimeZone\\\", \
\\\"America/Indiana/Marengo\\\"]\"", "\"time zone\""}, "Entity"], ",", 
               TemplateBox[{"\"America/Indiana/Petersburg\"", 
                 RowBox[{"Entity", "[", 
                   
                   RowBox[{
                    "\"TimeZone\"", ",", "\"America/Indiana/Petersburg\""}], 
                   "]"}], "\"Entity[\\\"TimeZone\\\", \
\\\"America/Indiana/Petersburg\\\"]\"", "\"time zone\""}, "Entity"], ",", 
               TemplateBox[{"\"America/Indiana/Tell_City\"", 
                 RowBox[{"Entity", "[", 
                   
                   RowBox[{
                    "\"TimeZone\"", ",", "\"America/Indiana/Tell_City\""}], 
                   "]"}], "\"Entity[\\\"TimeZone\\\", \
\\\"America/Indiana/Tell_City\\\"]\"", "\"time zone\""}, "Entity"], ",", 
               TemplateBox[{"\"America/Indiana/Vevay\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"TimeZone\"", ",", "\"America/Indiana/Vevay\""}],
                    "]"}], 
                 "\"Entity[\\\"TimeZone\\\", \
\\\"America/Indiana/Vevay\\\"]\"", "\"time zone\""}, "Entity"], ",", 
               TemplateBox[{"\"America/Indiana/Vincennes\"", 
                 RowBox[{"Entity", "[", 
                   
                   RowBox[{
                    "\"TimeZone\"", ",", "\"America/Indiana/Vincennes\""}], 
                   "]"}], "\"Entity[\\\"TimeZone\\\", \
\\\"America/Indiana/Vincennes\\\"]\"", "\"time zone\""}, "Entity"], ",", 
               TemplateBox[{"\"America/Indiana/Winamac\"", 
                 RowBox[{"Entity", "[", 
                   
                   RowBox[{
                    "\"TimeZone\"", ",", "\"America/Indiana/Winamac\""}], 
                   "]"}], "\"Entity[\\\"TimeZone\\\", \
\\\"America/Indiana/Winamac\\\"]\"", "\"time zone\""}, "Entity"], ",", 
               TemplateBox[{"\"America/Juneau\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"TimeZone\"", ",", "\"America/Juneau\""}], "]"}],
                  "\"Entity[\\\"TimeZone\\\", \\\"America/Juneau\\\"]\"", 
                 "\"time zone\""}, "Entity"], ",", 
               TemplateBox[{"\"America/Kentucky/Louisville\"", 
                 RowBox[{"Entity", "[", 
                   
                   RowBox[{
                    "\"TimeZone\"", ",", "\"America/Kentucky/Louisville\""}], 
                   "]"}], "\"Entity[\\\"TimeZone\\\", \
\\\"America/Kentucky/Louisville\\\"]\"", "\"time zone\""}, "Entity"], ",", 
               TemplateBox[{"\"America/Kentucky/Monticello\"", 
                 RowBox[{"Entity", "[", 
                   
                   RowBox[{
                    "\"TimeZone\"", ",", "\"America/Kentucky/Monticello\""}], 
                   "]"}], "\"Entity[\\\"TimeZone\\\", \
\\\"America/Kentucky/Monticello\\\"]\"", "\"time zone\""}, "Entity"], ",", 
               TemplateBox[{"\"America/Los_Angeles\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"TimeZone\"", ",", "\"America/Los_Angeles\""}], 
                   "]"}], "\"Entity[\\\"TimeZone\\\", \\\"America/Los_Angeles\
\\\"]\"", "\"time zone\""}, "Entity"], ",", 
               TemplateBox[{"\"America/Menominee\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"TimeZone\"", ",", "\"America/Menominee\""}], 
                   "]"}], "\"Entity[\\\"TimeZone\\\", \\\"America/Menominee\\\
\"]\"", "\"time zone\""}, "Entity"], ",", 
               TemplateBox[{"\"America/Metlakatla\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"TimeZone\"", ",", "\"America/Metlakatla\""}], 
                   "]"}], "\"Entity[\\\"TimeZone\\\", \
\\\"America/Metlakatla\\\"]\"", "\"time zone\""}, "Entity"], ",", 
               TemplateBox[{"\"America/New_York\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"TimeZone\"", ",", "\"America/New_York\""}], 
                   "]"}], "\"Entity[\\\"TimeZone\\\", \
\\\"America/New_York\\\"]\"", "\"time zone\""}, "Entity"], ",", 
               TemplateBox[{"\"America/Nome\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"TimeZone\"", ",", "\"America/Nome\""}], "]"}], 
                 "\"Entity[\\\"TimeZone\\\", \\\"America/Nome\\\"]\"", 
                 "\"time zone\""}, "Entity"], ",", 
               TemplateBox[{"\"America/North_Dakota/Beulah\"", 
                 RowBox[{"Entity", "[", 
                   
                   RowBox[{
                    "\"TimeZone\"", ",", "\"America/North_Dakota/Beulah\""}], 
                   "]"}], "\"Entity[\\\"TimeZone\\\", \
\\\"America/North_Dakota/Beulah\\\"]\"", "\"time zone\""}, "Entity"], ",", 
               TemplateBox[{"\"America/North_Dakota/Center\"", 
                 RowBox[{"Entity", "[", 
                   
                   RowBox[{
                    "\"TimeZone\"", ",", "\"America/North_Dakota/Center\""}], 
                   "]"}], "\"Entity[\\\"TimeZone\\\", \
\\\"America/North_Dakota/Center\\\"]\"", "\"time zone\""}, "Entity"], ",", 
               TemplateBox[{"\"America/North_Dakota/New_Salem\"", 
                 RowBox[{"Entity", "[", 
                   
                   RowBox[{
                    "\"TimeZone\"", ",", 
                    "\"America/North_Dakota/New_Salem\""}], "]"}], 
                 "\"Entity[\\\"TimeZone\\\", \
\\\"America/North_Dakota/New_Salem\\\"]\"", "\"time zone\""}, "Entity"], ",", 
               TemplateBox[{"\"America/Phoenix\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"TimeZone\"", ",", "\"America/Phoenix\""}], 
                   "]"}], "\"Entity[\\\"TimeZone\\\", \
\\\"America/Phoenix\\\"]\"", "\"time zone\""}, "Entity"], ",", 
               TemplateBox[{"\"America/Sitka\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"TimeZone\"", ",", "\"America/Sitka\""}], "]"}], 
                 "\"Entity[\\\"TimeZone\\\", \\\"America/Sitka\\\"]\"", 
                 "\"time zone\""}, "Entity"], ",", 
               TemplateBox[{"\"America/Yakutat\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"TimeZone\"", ",", "\"America/Yakutat\""}], 
                   "]"}], "\"Entity[\\\"TimeZone\\\", \
\\\"America/Yakutat\\\"]\"", "\"time zone\""}, "Entity"], ",", 
               TemplateBox[{"\"Pacific/Honolulu\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"TimeZone\"", ",", "\"Pacific/Honolulu\""}], 
                   "]"}], "\"Entity[\\\"TimeZone\\\", \
\\\"Pacific/Honolulu\\\"]\"", "\"time zone\""}, "Entity"]}], "}"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"current tobacco use among adolescents\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"TobaccoUseAdolescents\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"TobaccoUseAdolescents\\\"]\""}, "EntityProperty"], "\[Rule]", 
           RowBox[{"Missing", "[", "\"NotApplicable\"", "]"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"current tobacco use among adults\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"TobaccoUseAdults\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"TobaccoUseAdults\\\"]\""},
             "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{"23.9`", "\"%\"", "percent", "\"Percent\""}, 
            "QuantityPostfix", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"total annual visitors\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"TotalArrivals\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"TotalArrivals\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           TemplateBox[{"2.3892`*^7", 
             
             RowBox[{"\"people\"", "\[InvisibleSpace]", "\"/\"", 
               "\[InvisibleSpace]", "\"yr\""}], "people per year", 
             FractionBox["\"People\"", "\"Years\""]}, "Quantity", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"total borrowings\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"TotalBorrowings\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"TotalBorrowings\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           TemplateBox[{
             InterpretationBox["1.959`*^9", 1.959*^9, Selectable -> False], 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             "US dollars", "\"USDollars\""}, "QuantityPrefix", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"total registered businesses\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"TotalBusinessesRegistered\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"TotalBusinessesRegistered\\\"]\""}, "EntityProperty"], "\[Rule]", 
           "5.156`*^6"}], ",", 
         RowBox[{
           TemplateBox[{"\"total business inventory\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"TotalBusinessInventory\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"TotalBusinessInventory\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{
             InterpretationBox[
             "2.34507`*^12", 2.34507*^12, Selectable -> False], 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             "US dollars", "\"USDollars\""}, "QuantityPrefix", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"total business tax rate\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"TotalBusinessTaxRate\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"TotalBusinessTaxRate\\\"]\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{"36.6`", "\"%\"", "percent", "\"Percent\""}, 
            "QuantityPostfix", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"total fertility rate\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"TotalFertilityRate\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"TotalFertilityRate\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{"1.705`", 
             RowBox[{
               FrameBox[
                StyleBox[
                "\"children\"", ShowStringCharacters -> False, StripOnInput -> 
                 False], FrameMargins -> 1, FrameStyle -> GrayLevel[0.85], 
                BaselinePosition -> Baseline, RoundingRadius -> 3, 
                StripOnInput -> False], "\[InvisibleSpace]", "\"/\"", 
               "\[InvisibleSpace]", 
               FrameBox[
                StyleBox[
                "\"females\"", ShowStringCharacters -> False, StripOnInput -> 
                 False], FrameMargins -> 1, FrameStyle -> GrayLevel[0.85], 
                BaselinePosition -> Baseline, RoundingRadius -> 3, 
                StripOnInput -> False]}], "children per females", 
             FractionBox[
              RowBox[{"IndependentUnit", "[", "\"children\"", "]"}], 
              RowBox[{"IndependentUnit", "[", "\"females\"", "]"}]]}, 
            "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"trade value\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"Trade\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"Trade\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           TemplateBox[{"5.639971999999993`*^12", 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
             "US dollars per year", 
             FractionBox["\"USDollars\"", "\"Years\""]}, "QuantityPrefixUnit",
             SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"trade balance\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"TradeBalance\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"TradeBalance\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           TemplateBox[{
             RowBox[{"-", "8.5546`*^10"}], 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             RowBox[{"\"per \"", "\[InvisibleSpace]", "\"month\""}], 
             "US dollars per month", 
             FractionBox["\"USDollars\"", "\"Months\""]}, 
            "QuantityPrefixUnit", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"trade deficit\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"TradeDeficit\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"TradeDeficit\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           TemplateBox[{"8.5546`*^10", 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             RowBox[{"\"per \"", "\[InvisibleSpace]", "\"month\""}], 
             "US dollars per month", 
             FractionBox["\"USDollars\"", "\"Months\""]}, 
            "QuantityPrefixUnit", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"trade value added\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"TradeValueAdded\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"TradeValueAdded\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           TemplateBox[{"3.0931`*^12", 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
             "US dollars per year", 
             FractionBox["\"USDollars\"", "\"Years\""]}, "QuantityPrefixUnit",
             SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"trade-weighted exchange index\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"TradeWeightedExchangeIndex\""}],
                "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"TradeWeightedExchangeIndex\\\"]\""}, "EntityProperty"], "\[Rule]", 
           "90.8221`"}], ",", 
         RowBox[{
           TemplateBox[{"\"transportation value added\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"TransportationValueAdded\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"TransportationValueAdded\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{"2.2634`*^12", 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
             "US dollars per year", 
             FractionBox["\"USDollars\"", "\"Years\""]}, "QuantityPrefixUnit",
             SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"traveler's checks outstanding\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"TravelersChecksOutstanding\""}],
                "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"TravelersChecksOutstanding\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{
             InterpretationBox["1.7`*^9", 1.7*^9, Selectable -> False], 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             "US dollars", "\"USDollars\""}, "QuantityPrefix", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"treasury security\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"Treasury\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"Treasury\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{"3.01`", "\"%\"", "percent", "\"Percent\""}, 
            "QuantityPostfix", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"treasury average yield\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"TreasuryAverageYield\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"TreasuryAverageYield\\\"]\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{"5.4`", "\"%\"", "percent", "\"Percent\""}, 
            "QuantityPostfix", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"treasury deposits\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"TreasuryDeposits\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"TreasuryDeposits\\\"]\""},
             "EntityProperty"], "\[Rule]", 
           TemplateBox[{
             InterpretationBox[
             "7.36939`*^11", 7.36939*^11, Selectable -> False], 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             "US dollars", "\"USDollars\""}, "QuantityPrefix", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"treasury securities composite rate\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", "\"TreasurySecuritiesCompositeRate\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"TreasurySecuritiesCompositeRate\\\"]\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{"6.23`", "\"%\"", "percent", "\"Percent\""}, 
            "QuantityPostfix", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"UN code\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"UNCode\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"UNCode\\\"]\""}, 
            "EntityProperty"], "\[Rule]", "\"USA\""}], ",", 
         RowBox[{
           TemplateBox[{"\"unemployed people\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"Unemployment\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"Unemployment\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{"13725087", "\"people\"", "people", "\"People\""}, 
            "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"unemployment average duration\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", "\"UnemploymentAverageDuration\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"UnemploymentAverageDuration\\\"]\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{"22.3`", "\"wk\"", "weeks", "\"Weeks\""}, "Quantity", 
            SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"unemployment median duration\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"UnemploymentMedianDuration\""}],
                "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"UnemploymentMedianDuration\\\"]\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{"8.5`", "\"wk\"", "weeks", "\"Weeks\""}, "Quantity", 
            SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"unemployment rate\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"UnemploymentRate\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"UnemploymentRate\\\"]\""},
             "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{"8.31`", "\"%\"", "percent", "\"Percent\""}, 
            "QuantityPostfix", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"unilateral current transfers\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"UnilateralCurrentTransfers\""}],
                "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"UnilateralCurrentTransfers\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{
             RowBox[{"-", "4.1045`*^10"}], 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             RowBox[{"\"per \"", "\[InvisibleSpace]", "\"quarter year\""}], 
             "US dollars per quarter year", 
             FractionBox["\"USDollars\"", "\"QuarterYears\""]}, 
            "QuantityPrefixUnit", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"unit labor cost\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"UnitLaborCost\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"UnitLaborCost\\\"]\""}, 
            "EntityProperty"], "\[Rule]", "127.58`"}], ",", 
         RowBox[{
           TemplateBox[{"\"unit nonlabor cost\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"UnitNonlaborCost\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"UnitNonlaborCost\\\"]\""},
             "EntityProperty"], "\[Rule]", "112.702`"}], ",", 
         RowBox[{
           TemplateBox[{"\"UN number\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"UNNumber\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"UNNumber\\\"]\""}, 
            "EntityProperty"], "\[Rule]", "840"}], ",", 
         RowBox[{
           TemplateBox[{"\"unpaved airport lengths\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"UnpavedAirportLengths\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"UnpavedAirportLengths\\\"]\""}, "EntityProperty"], "\[Rule]", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"\"Total\"", "\[Rule]", "9921"}], ",", 
               RowBox[{
                 RowBox[{"Interval", "[", 
                   RowBox[{"{", 
                    RowBox[{"10000", ",", "\[Infinity]"}], "}"}], "]"}], 
                 "\[Rule]", "0"}], ",", 
               RowBox[{
                 RowBox[{"Interval", "[", 
                   RowBox[{"{", 
                    RowBox[{"8000", ",", "10000"}], "}"}], "]"}], "\[Rule]", 
                 "6"}], ",", 
               RowBox[{
                 RowBox[{"Interval", "[", 
                   RowBox[{"{", 
                    RowBox[{"5000", ",", "8000"}], "}"}], "]"}], "\[Rule]", 
                 "158"}], ",", 
               RowBox[{
                 RowBox[{"Interval", "[", 
                   RowBox[{"{", 
                    RowBox[{"3000", ",", "5000"}], "}"}], "]"}], "\[Rule]", 
                 "1757"}], ",", 
               RowBox[{
                 RowBox[{"Interval", "[", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "3000"}], "}"}], "]"}], "\[Rule]", 
                 "8000"}]}], "}"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"unpaved airports\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"UnpavedAirports\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"UnpavedAirports\\\"]\""}, 
            "EntityProperty"], "\[Rule]", "9921"}], ",", 
         RowBox[{
           TemplateBox[{"\"unpaved road length\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"UnpavedRoadLength\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"UnpavedRoadLength\\\"]\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{
            "2.255964`*^6", "\"km\"", "kilometers", "\"Kilometers\""}, 
            "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"unweighted sample housing units\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", "\"UnweightedSampleHousingUnits\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"UnweightedSampleHousingUnits\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{"11212453", 
             RowBox[{
               FrameBox[
                StyleBox[
                "\"households\"", ShowStringCharacters -> False, StripOnInput -> 
                 False], FrameMargins -> 1, FrameStyle -> GrayLevel[0.85], 
                BaselinePosition -> Baseline, RoundingRadius -> 3, 
                StripOnInput -> False]}], "households", 
             RowBox[{"IndependentUnit", "[", "\"households\"", "]"}]}, 
            "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"unweighted sample population\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"UnweightedSamplePopulation\""}],
                "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"UnweightedSamplePopulation\\\"]\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{"26328166", "\"people\"", "people", "\"People\""}, 
            "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"uranium\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"Uranium\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"Uranium\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           TemplateBox[{"835.`", 
             
             RowBox[{"\"t\"", "\[InvisibleSpace]", "\"/\"", 
               "\[InvisibleSpace]", "\"yr\""}], "metric tons per year", 
             FractionBox["\"MetricTons\"", "\"Years\""]}, "Quantity", 
            SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"change in US owned assets abroad\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"USOwnedAssetsAbroad\""}], "]"}],
              "\"EntityProperty[\\\"Country\\\", \\\"USOwnedAssetsAbroad\\\"]\
\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{"3.43108`*^11", 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             RowBox[{"\"per \"", "\[InvisibleSpace]", "\"quarter year\""}], 
             "US dollars per quarter year", 
             FractionBox["\"USDollars\"", "\"QuarterYears\""]}, 
            "QuantityPrefixUnit", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"GDP value added\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"ValueAdded\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"ValueAdded\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           TemplateBox[{"3891495786000", 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
             "US dollars per year", 
             FractionBox["\"USDollars\"", "\"Years\""]}, "QuantityPrefixUnit",
             SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"losses due to electrical outages\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", "\"ValueLostDueToElectricalOutages\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"ValueLostDueToElectricalOutages\\\"]\""}, "EntityProperty"], "\[Rule]", 
           RowBox[{"Missing", "[", "\"NotAvailable\"", "]"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"vault cash\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"VaultCash\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"VaultCash\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           TemplateBox[{
             InterpretationBox["\"0.00\"", 0., Selectable -> False], 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             "US dollars", "\"USDollars\""}, "QuantityPrefix", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"vehicle sales\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"VehicleSales\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"VehicleSales\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           TemplateBox[{"1.2995`*^7", 
             RowBox[{
               FrameBox[
                StyleBox[
                "\"vehicles\"", ShowStringCharacters -> False, StripOnInput -> 
                 False], FrameMargins -> 1, FrameStyle -> GrayLevel[0.85], 
                BaselinePosition -> Baseline, RoundingRadius -> 3, 
                StripOnInput -> False], "\[InvisibleSpace]", "\"/\"", 
               "\[InvisibleSpace]", "\"yr\""}], "vehicles per year", 
             FractionBox[
              RowBox[{"IndependentUnit", "[", "\"vehicles\"", "]"}], 
              "\"Years\""]}, "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"buses in use\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"VehiclesInUseBuses\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"VehiclesInUseBuses\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{"834436.`", 
             RowBox[{
               FrameBox[
                StyleBox[
                "\"buses\"", ShowStringCharacters -> False, StripOnInput -> 
                 False], FrameMargins -> 1, FrameStyle -> GrayLevel[0.85], 
                BaselinePosition -> Baseline, RoundingRadius -> 3, 
                StripOnInput -> False]}], "buses", 
             RowBox[{"IndependentUnit", "[", "\"buses\"", "]"}]}, "Quantity", 
            SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"buses in use per road length\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", 
                 "\"VehiclesInUseBusesPerKilometersOfRoads\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"VehiclesInUseBusesPerKilometersOfRoads\\\"]\""}, "EntityProperty"], 
           "\[Rule]", 
           TemplateBox[{"0.1285908456644837`", 
             RowBox[{
               FrameBox[
                StyleBox[
                "\"vehicles\"", ShowStringCharacters -> False, StripOnInput -> 
                 False], FrameMargins -> 1, FrameStyle -> GrayLevel[0.85], 
                BaselinePosition -> Baseline, RoundingRadius -> 3, 
                StripOnInput -> False], "\[InvisibleSpace]", "\"/\"", 
               "\[InvisibleSpace]", "\"km\""}], "vehicles per kilometer", 
             FractionBox[
              RowBox[{"IndependentUnit", "[", "\"vehicles\"", "]"}], 
              "\"Kilometers\""]}, "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"buses in use per population\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", 
                 "\"VehiclesInUseBusesPerThousandPeople\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"VehiclesInUseBusesPerThousandPeople\\\"]\""}, "EntityProperty"], 
           "\[Rule]", 
           TemplateBox[{"0.002703292391624131`", 
             RowBox[{
               FrameBox[
                StyleBox[
                "\"vehicles\"", ShowStringCharacters -> False, StripOnInput -> 
                 False], FrameMargins -> 1, FrameStyle -> GrayLevel[0.85], 
                BaselinePosition -> Baseline, RoundingRadius -> 3, 
                StripOnInput -> False], "\[InvisibleSpace]", "\"/\"", 
               "\[InvisibleSpace]", "\"person\""}], "vehicles per person", 
             FractionBox[
              RowBox[{"IndependentUnit", "[", "\"vehicles\"", "]"}], 
              "\"People\""]}, "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"motorcycles in use\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"VehiclesInUseMotorcycles\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"VehiclesInUseMotorcycles\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{"7.138476`*^6", 
             RowBox[{
               FrameBox[
                StyleBox[
                "\"motorcycles\"", ShowStringCharacters -> False, 
                 StripOnInput -> False], FrameMargins -> 1, FrameStyle -> 
                GrayLevel[0.85], BaselinePosition -> Baseline, RoundingRadius -> 
                3, StripOnInput -> False]}], "motorcycles", 
             RowBox[{"IndependentUnit", "[", "\"motorcycles\"", "]"}]}, 
            "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"motorcycles in use per road length\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", 
                 "\"VehiclesInUseMotorcyclesPerKilometersOfRoads\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"VehiclesInUseMotorcyclesPerKilometersOfRoads\\\"]\""}, "EntityProperty"], 
           "\[Rule]", 
           TemplateBox[{"1.1000755787089973`", 
             RowBox[{
               FrameBox[
                StyleBox[
                "\"vehicles\"", ShowStringCharacters -> False, StripOnInput -> 
                 False], FrameMargins -> 1, FrameStyle -> GrayLevel[0.85], 
                BaselinePosition -> Baseline, RoundingRadius -> 3, 
                StripOnInput -> False], "\[InvisibleSpace]", "\"/\"", 
               "\[InvisibleSpace]", "\"km\""}], "vehicles per kilometer", 
             FractionBox[
              RowBox[{"IndependentUnit", "[", "\"vehicles\"", "]"}], 
              "\"Kilometers\""]}, "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"motorcycles in use per population\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", 
                 "\"VehiclesInUseMotorcyclesPerThousandPeople\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"VehiclesInUseMotorcyclesPerThousandPeople\\\"]\""}, "EntityProperty"], 
           "\[Rule]", 
           TemplateBox[{"0.023126264756783574`", 
             RowBox[{
               FrameBox[
                StyleBox[
                "\"vehicles\"", ShowStringCharacters -> False, StripOnInput -> 
                 False], FrameMargins -> 1, FrameStyle -> GrayLevel[0.85], 
                BaselinePosition -> Baseline, RoundingRadius -> 3, 
                StripOnInput -> False], "\[InvisibleSpace]", "\"/\"", 
               "\[InvisibleSpace]", "\"person\""}], "vehicles per person", 
             FractionBox[
              RowBox[{"IndependentUnit", "[", "\"vehicles\"", "]"}], 
              "\"People\""]}, "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"passenger cars in use\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"VehiclesInUsePassengerCars\""}],
                "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"VehiclesInUsePassengerCars\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{"1.3593293`*^8", 
             RowBox[{
               FrameBox[
                StyleBox[
                "\"cars\"", ShowStringCharacters -> False, StripOnInput -> 
                 False], FrameMargins -> 1, FrameStyle -> GrayLevel[0.85], 
                BaselinePosition -> Baseline, RoundingRadius -> 3, 
                StripOnInput -> False]}], "cars", 
             RowBox[{"IndependentUnit", "[", "\"cars\"", "]"}]}, "Quantity", 
            SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"passenger cars in use per road length\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", 
                 "\"VehiclesInUsePassengerCarsPerKilometersOfRoads\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"VehiclesInUsePassengerCarsPerKilometersOfRoads\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           TemplateBox[{"20.947958168572626`", 
             RowBox[{
               FrameBox[
                StyleBox[
                "\"vehicles\"", ShowStringCharacters -> False, StripOnInput -> 
                 False], FrameMargins -> 1, FrameStyle -> GrayLevel[0.85], 
                BaselinePosition -> Baseline, RoundingRadius -> 3, 
                StripOnInput -> False], "\[InvisibleSpace]", "\"/\"", 
               "\[InvisibleSpace]", "\"km\""}], "vehicles per kilometer", 
             FractionBox[
              RowBox[{"IndependentUnit", "[", "\"vehicles\"", "]"}], 
              "\"Kilometers\""]}, "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"passenger cars in use per population\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", 
                 "\"VehiclesInUsePassengerCarsPerThousandPeople\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"VehiclesInUsePassengerCarsPerThousandPeople\\\"]\""}, "EntityProperty"], 
           "\[Rule]", 
           TemplateBox[{"0.4403770396293731`", 
             RowBox[{
               FrameBox[
                StyleBox[
                "\"vehicles\"", ShowStringCharacters -> False, StripOnInput -> 
                 False], FrameMargins -> 1, FrameStyle -> GrayLevel[0.85], 
                BaselinePosition -> Baseline, RoundingRadius -> 3, 
                StripOnInput -> False], "\[InvisibleSpace]", "\"/\"", 
               "\[InvisibleSpace]", "\"person\""}], "vehicles per person", 
             FractionBox[
              RowBox[{"IndependentUnit", "[", "\"vehicles\"", "]"}], 
              "\"People\""]}, "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"total vehicles in use\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"VehiclesInUseTotal\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"VehiclesInUseTotal\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{"2.54403082`*^8", 
             RowBox[{
               FrameBox[
                StyleBox[
                "\"vehicles\"", ShowStringCharacters -> False, StripOnInput -> 
                 False], FrameMargins -> 1, FrameStyle -> GrayLevel[0.85], 
                BaselinePosition -> Baseline, RoundingRadius -> 3, 
                StripOnInput -> False]}], "vehicles", 
             RowBox[{"IndependentUnit", "[", "\"vehicles\"", "]"}]}, 
            "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"total vehicles in use per road length\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", 
                 "\"VehiclesInUseTotalPerKilometersOfRoads\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"VehiclesInUseTotalPerKilometersOfRoads\\\"]\""}, "EntityProperty"], 
           "\[Rule]", 
           TemplateBox[{"39.2048131360955`", 
             RowBox[{
               FrameBox[
                StyleBox[
                "\"vehicles\"", ShowStringCharacters -> False, StripOnInput -> 
                 False], FrameMargins -> 1, FrameStyle -> GrayLevel[0.85], 
                BaselinePosition -> Baseline, RoundingRadius -> 3, 
                StripOnInput -> False], "\[InvisibleSpace]", "\"/\"", 
               "\[InvisibleSpace]", "\"km\""}], "vehicles per kilometer", 
             FractionBox[
              RowBox[{"IndependentUnit", "[", "\"vehicles\"", "]"}], 
              "\"Kilometers\""]}, "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"total vehicles in use per population\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", 
                 "\"VehiclesInUseTotalPerThousandPeople\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"VehiclesInUseTotalPerThousandPeople\\\"]\""}, "EntityProperty"], 
           "\[Rule]", 
           TemplateBox[{"0.8241805434764677`", 
             RowBox[{
               FrameBox[
                StyleBox[
                "\"vehicles\"", ShowStringCharacters -> False, StripOnInput -> 
                 False], FrameMargins -> 1, FrameStyle -> GrayLevel[0.85], 
                BaselinePosition -> Baseline, RoundingRadius -> 3, 
                StripOnInput -> False], "\[InvisibleSpace]", "\"/\"", 
               "\[InvisibleSpace]", "\"person\""}], "vehicles per person", 
             FractionBox[
              RowBox[{"IndependentUnit", "[", "\"vehicles\"", "]"}], 
              "\"People\""]}, "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"trucks and vans in use\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"VehiclesInUseTrucksAndVans\""}],
                "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"VehiclesInUseTrucksAndVans\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{"1.1049724`*^8", 
             RowBox[{
               FrameBox[
                StyleBox[
                "\"vehicles\"", ShowStringCharacters -> False, StripOnInput -> 
                 False], FrameMargins -> 1, FrameStyle -> GrayLevel[0.85], 
                BaselinePosition -> Baseline, RoundingRadius -> 3, 
                StripOnInput -> False]}], "vehicles", 
             RowBox[{"IndependentUnit", "[", "\"vehicles\"", "]"}]}, 
            "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"trucks and vans in use per road length\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", 
                 "\"VehiclesInUseTrucksAndVansPerKilometersOfRoads\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"VehiclesInUseTrucksAndVansPerKilometersOfRoads\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           TemplateBox[{"17.0281885431494`", 
             RowBox[{
               FrameBox[
                StyleBox[
                "\"vehicles\"", ShowStringCharacters -> False, StripOnInput -> 
                 False], FrameMargins -> 1, FrameStyle -> GrayLevel[0.85], 
                BaselinePosition -> Baseline, RoundingRadius -> 3, 
                StripOnInput -> False], "\[InvisibleSpace]", "\"/\"", 
               "\[InvisibleSpace]", "\"km\""}], "vehicles per kilometer", 
             FractionBox[
              RowBox[{"IndependentUnit", "[", "\"vehicles\"", "]"}], 
              "\"Kilometers\""]}, "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"trucks and vans in use per population\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", 
                 "\"VehiclesInUseTrucksAndVansPerThousandPeople\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"VehiclesInUseTrucksAndVansPerThousandPeople\\\"]\""}, "EntityProperty"], 
           "\[Rule]", 
           TemplateBox[{"0.357973946698687`", 
             RowBox[{
               FrameBox[
                StyleBox[
                "\"vehicles\"", ShowStringCharacters -> False, StripOnInput -> 
                 False], FrameMargins -> 1, FrameStyle -> GrayLevel[0.85], 
                BaselinePosition -> Baseline, RoundingRadius -> 3, 
                StripOnInput -> False], "\[InvisibleSpace]", "\"/\"", 
               "\[InvisibleSpace]", "\"person\""}], "vehicles per person", 
             FractionBox[
              RowBox[{"IndependentUnit", "[", "\"vehicles\"", "]"}], 
              "\"People\""]}, "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"total rate of violent crime\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"ViolentCrimeRate\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"ViolentCrimeRate\\\"]\""},
             "EntityProperty"], "\[Rule]", 
           TemplateBox[{"0.003667`", 
             RowBox[{
               FrameBox[
                StyleBox[
                "\"crimes\"", ShowStringCharacters -> False, StripOnInput -> 
                 False], FrameMargins -> 1, FrameStyle -> GrayLevel[0.85], 
                BaselinePosition -> Baseline, RoundingRadius -> 3, 
                StripOnInput -> False], "\[InvisibleSpace]", "\"/(\"", 
               "\[InvisibleSpace]", "\"person\"", "\[ThinSpace]", "\"yr\"", 
               "\[InvisibleSpace]", "\")\""}], "crimes per person year", 
             FractionBox[
              RowBox[{"IndependentUnit", "[", "\"crimes\"", "]"}], 
              RowBox[{"\"People\"", " ", "\"Years\""}]]}, "Quantity", 
            SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"total number of violent crimes\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"ViolentCrimeTotal\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"ViolentCrimeTotal\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{"1203808", 
             RowBox[{
               FrameBox[
                StyleBox[
                "\"crimes\"", ShowStringCharacters -> False, StripOnInput -> 
                 False], FrameMargins -> 1, FrameStyle -> GrayLevel[0.85], 
                BaselinePosition -> Baseline, RoundingRadius -> 3, 
                StripOnInput -> False], "\[InvisibleSpace]", "\"/\"", 
               "\[InvisibleSpace]", "\"yr\""}], "crimes per year", 
             FractionBox[
              RowBox[{"IndependentUnit", "[", "\"crimes\"", "]"}], 
              "\"Years\""]}, "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"vulnerable employment\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"VulnerableEmployment\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"VulnerableEmployment\\\"]\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{"6270217", "\"people\"", "people", "\"People\""}, 
            "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"vulnerable employment fraction\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", "\"VulnerableEmploymentFraction\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"VulnerableEmploymentFraction\\\"]\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{
            "3.88999991491437`", "\"%\"", "percent", "\"Percent\""}, 
            "QuantityPostfix", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"wage and salaried workers\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"WageAndSalariedWorkers\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"WageAndSalariedWorkers\\\"]\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{"151371741", "\"people\"", "people", "\"People\""}, 
            "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"wage and salaried workers fraction\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"Country\"", ",", "\"WageAndSalariedWorkersFraction\""}], 
               "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"WageAndSalariedWorkersFraction\\\"]\""}, "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{
            "93.9100036621094`", "\"%\"", "percent", "\"Percent\""}, 
            "QuantityPostfix", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"wage cost index\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"WagesCostIndex\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"WagesCostIndex\\\"]\""}, 
            "EntityProperty"], "\[Rule]", "151.7`"}], ",", 
         RowBox[{
           TemplateBox[{"\"water area\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"WaterArea\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"WaterArea\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           TemplateBox[{"469497.`", 
             RowBox[{
               SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
             SuperscriptBox["\"Kilometers\"", "2"]}, "Quantity", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"arrivals by sea\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"WaterArrivals\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"WaterArrivals\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           TemplateBox[{"503000.`", 
             
             RowBox[{"\"people\"", "\[InvisibleSpace]", "\"/\"", 
               "\[InvisibleSpace]", "\"yr\""}], "people per year", 
             FractionBox["\"People\"", "\"Years\""]}, "Quantity", SyntaxForm -> 
            Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"water productivity\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"WaterProductivity\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \
\\\"WaterProductivity\\\"]\""}, "EntityProperty"], "\[Rule]", 
           TemplateBox[{"42.7167507028788`", 
             RowBox[{
               FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
             RowBox[{"\"per \"", "\[InvisibleSpace]", 
               SuperscriptBox["\"meter\"", "3"]}], 
             "US dollars per meter cubed", 
             FractionBox["\"USDollars\"", 
              SuperscriptBox["\"Meters\"", "3"]]}, "QuantityPrefixUnit", 
            SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"waterway length\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"WaterwayLength\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"WaterwayLength\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{"41009.`", "\"km\"", "kilometers", "\"Kilometers\""}, 
            "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"employment\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"Workforce\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"Workforce\\\"]\""}, 
            "EntityProperty"], "\[Rule]", 
           
           TemplateBox[{"1.52692`*^8", "\"people\"", "people", "\"People\""}, 
            "Quantity", SyntaxForm -> Mod]}], ",", 
         RowBox[{
           TemplateBox[{"\"wholesale price index\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Country\"", ",", "\"WPI\""}], "]"}], 
             "\"EntityProperty[\\\"Country\\\", \\\"WPI\\\"]\""}, 
            "EntityProperty"], "\[Rule]", "93.5988812702995`"}]}], 
       "\[RightAssociation]"}], Short[#, 40]& ], "line" -> 136, "sessionID" -> 
   19441454899584151767, "byteCount" -> 1376776, "size" -> 40, "stored" -> 
   False, "expr" -> Missing["NotAvailable", "NewSessionID"], "wrap" -> 
   OutputSizeLimit`Defer, "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.86637162640506*^9},
 CellLabel->"Out[136]=",
 CellID->352982924,ExpressionUUID->"cfccd96c-3a46-4d18-b408-f084444828b7"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Source & Additional Information", "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Source & Additional Information"},
 CellTags->{"Source & Additional Information", "TemplateSection"},
 CellID->871630328,ExpressionUUID->"51d0f176-d255-4f1a-910b-f6b7f89c5597"],

Cell[CellGroupData[{

Cell[TextData[{
 "Creator",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Contributed By", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter the name of the person, people or organization that should be \
publicly credited with contributing this paclet.", "MoreInfoText"], 
        Background -> GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
        GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoContributedBy"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "f7c524e6-dd9d-4d55-ba37-65530d31663e"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Contributed By"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "Contributed By", "ContributorInformation", "Creator", "TemplateCellGroup"},
 CellID->57534933,ExpressionUUID->"7ad1d254-ba54-4c78-a93f-b4c2f3b7de56"],

Cell["Peter Cullen Burbery", "Text",
 TaggingRules->{},
 CellID->5274394,ExpressionUUID->"139cec98-3eff-4eaa-b00e-91734ce3c851"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Source Control Repository",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"SourceControlURL", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "If this paclet has a corresponding source control repository (e.g. \
GitHub), you can provide the URL here.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSourceControlURL"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "e3414192-5285-446c-9c15-1df075bbf929"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "SourceControlURL"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "Source Control Repository", "SourceControlURL", "TemplateCellGroup"},
 CellID->221376991,ExpressionUUID->"271a6ff5-6569-410f-adc0-c5c566d4e53d"],

Cell["https://github.com/PeterCullenBurbery/association-functions", "Text",
 TaggingRules->{},
 CellID->250892572,ExpressionUUID->"9a157cef-734b-4832-ab05-3c72fc95741a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "License",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"LicensingInformation", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Choose a license to specify the terms and conditions regarding how \
your paclet can be used, modified, and distributed. If submitting to the \
Wolfram Resource System, this also includes the terms outlined by the ", 
           Cell[
            BoxData[
             TagBox[
              ButtonBox[
               StyleBox[
               "\"publisher agreement\"", "Text", ShowStringCharacters -> 
                False], BaseStyle -> "Hyperlink", ButtonData -> {
                 URL[
                 "https://resources.wolframcloud.com/publisher/publisher-\
agreement"], None}, ButtonNote -> 
               "https://resources.wolframcloud.com/publisher/publisher-\
agreement"], 
              MouseAppearanceTag["LinkHand"]]]], ".\n\nSee the ", 
           Cell[
            BoxData[
             TagBox[
              ButtonBox[
               StyleBox[
               "\"style guidelines\"", "Text", ShowStringCharacters -> False],
                BaseStyle -> "Hyperlink", ButtonFunction :> 
               Symbol["DefinitionNotebookClient`ViewStyleGuidelines"][
                "Tag" -> "ChoosingALicense"], Evaluator -> Automatic, Method -> 
               "Queued"], 
              MouseAppearanceTag["LinkHand"]]]], 
           " for additional information about choosing licenses."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoLicensingInformation"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "67b4671a-dff2-4e81-b907-67726365d9e0"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "LicensingInformation"},
 DefaultNewCellStyle->"Text",
 CellTags->{"License", "LicensingInformation", "TemplateCellGroup"},
 CellID->279656547,ExpressionUUID->"53ddf091-b7af-4fa3-a594-42678a202241"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            RadioButtonBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
             "MIT"}], "\" \"", 
            TemplateBox[{"\"MIT License\"", "\"\[ThinSpace]\"", 
              
              TemplateBox[{
               "\"\[RightGuillemet]\"", 
                "https://resources.wolframcloud.com/PacletRepository/licenses/\
MIT"}, "HyperlinkURL"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            RadioButtonBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
             "Apache-2.0"}], "\" \"", 
            TemplateBox[{"\"Apache License 2.0\"", "\"\[ThinSpace]\"", 
              
              TemplateBox[{
               "\"\[RightGuillemet]\"", 
                "https://resources.wolframcloud.com/PacletRepository/licenses/\
Apache-2.0"}, "HyperlinkURL"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            RadioButtonBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
             "CC0-1.0"}], "\" \"", 
            
            TemplateBox[{
             "\"Creative Commons Zero v1.0 Universal\"", "\"\[ThinSpace]\"", 
              
              TemplateBox[{
               "\"\[RightGuillemet]\"", 
                "https://resources.wolframcloud.com/PacletRepository/licenses/\
CC0-1.0"}, "HyperlinkURL"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            RadioButtonBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
             "None"}], "\" \"", 
            
            TemplateBox[{
             "\"None\"", 
              "\"A license is not required for personal deployments\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            RadioButtonBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
             "Other"}], "\" \"", 
            InputFieldBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "SpecifiedLicenseID"}, ""], (
              CurrentValue[
                 EvaluationCell[], {TaggingRules, "RadioButtonValue"}] = 
               "Other"; CurrentValue[
                 EvaluationCell[], {TaggingRules, "SpecifiedLicenseID"}] = 
               Replace[#, "" -> Null]; Null)& ], String, FieldHint -> 
             "Other License Name or ID", FieldHintStyle -> {FontSize -> 12}, 
             ContinuousAction -> True]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJylVE1PGzEQBfLBV4QAtVKPq6jXJLTqqSfCBkokCihOe+jN7M4SC6+99djA9tRrf1Nv/\
Sn9JR3vJpvQElUtl5V3bL958+Z5+lsd1mA2l8CaF85mznbYejiB6AbiZAXrZwIp0hhaSDFplP/\
JGtZHTkKyirWRvktqZZhtvx+\
OgzMRgUJgtZ9fv9HBzdM8AyOFumFrP76zw4m1Gb7t9QygdiYC7N5pmRieRlK7uBvptHfJIwl2BJlGY\
bXJe7KExB7hsxp9lhHY72c8msCMQ/\
C6e7CEx7sn8SjTdDz81ny9jNXL0AC34haCUKepVhh8AqOD21fdg+\
CDorhBLpfwHDyJZxgedCgLNbRcLDDcGPG7I30PSLHtMaSZ5BYo4I8UrJvtc62gzd60+\
8EUMBAYKG0DA5+dMBAHiTYBsUWtuAxiyKTOU1AW2+z5pQFr87HW0opshs/\
qHrNi0cCtoSLHnQiQMUXXB7niqYhIuVbojCGoj1w6IB/uHN/SilTUKgQpZyyxNebX10Jdezxk+\
yyDSCQC4qkDhgO24os9cSrydwl5n5qQaafi4/uMREUfXcMaA2/r/0u7O+\
Kx0EfOWq2Km6xxYSdgnor7SDleJeq05JFvYp1JbcPVmaCM3uu5k3L6bTJrCGu2i5uFzqdCWfai4Fe9\
k3OeQkC9LPDLwzvzw344+\
GSLT58k1bQlvkDYqmK7IcWEctphv5Ab62NTqdFhG5dGk11szp6VmYndUJGJ0kIJGjwXWXFt9nTm2Y5\
jYfkVrRonXCLMaxoAef+xnQdS/k7/UWnJdZVRSdcl8k/\
RB5BwJ8uGlnpXe3tDOmt8IZXtFi1Ytc0PWi1dqtCvd4bKgiFL2kIMttlXOXNXCH4gT7P9QXGPUfmR/\
SvDB1PzHwi2RtOxM6apxJrlpOmwevHbWrA9/gKDZjDH", "RadioButtonValue" -> "MIT", 
   "SpecifiedLicenseID" -> Null},
 CellTags->{
  "LicensingInformation", "LicensingInformation-RadioButtons", 
   "RadioButtonsCell"},
 CellID->42282576,ExpressionUUID->"388d4405-81c4-4853-8d18-169a7e92cbc5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Keywords",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Keywords", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List relevant terms (e.g. functional areas, algorithm names, related \
concepts) that should be used to include the paclet in search results.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoKeywords"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "e099015d-d7f4-41f0-9237-d51d273777a2"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Keywords"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Keywords", "TemplateCellGroup"},
 CellID->913860664,ExpressionUUID->"935becf7-ae87-4748-aafa-66a4180d28fa"],

Cell["associations", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.866302561971833*^9, 3.8663025637281666`*^9}},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->560424104,ExpressionUUID->"0b09de00-3ca4-42c5-989e-12ae1d4fe64e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Categories", "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Categories"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Categories", "TemplateCellGroup"},
 CellID->193940140,ExpressionUUID->"4f20a69e-f9de-433d-a2b8-780fea433b04"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Cloud & Deployment"}], "\" \"", 
            "\"Cloud & Deployment\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Data Manipulation & Analysis"}], 
            "\" \"", "\"Data Manipulation & Analysis\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "External Interfaces & Connections"}], 
            "\" \"", "\"External Interfaces & Connections\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Geographic Data & Computation"}], 
            "\" \"", "\"Geographic Data & Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Graphs & Networks"}], "\" \"", 
            "\"Graphs & Networks\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Images"}], "\" \"", "\"Images\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Machine Learning"}], "\" \"", 
            "\"Machine Learning\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[
            False, {False, "Scientific and Medical Data & Computation"}], 
            "\" \"", "\"Scientific and Medical Data & Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Sound & Video"}], "\" \"", 
            "\"Sound & Video\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Symbolic & Numeric Computation"}], 
            "\" \"", "\"Symbolic & Numeric Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Time-Related Computation"}], "\" \"", 
            "\"Time-Related Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Visualization & Graphics"}], "\" \"", 
            "\"Visualization & Graphics\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Core Language & Structure"}], "\" \"",
             "\"Core Language & Structure\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Engineering Data & Computation"}], 
            "\" \"", "\"Engineering Data & Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Financial Data & Computation"}], 
            "\" \"", "\"Financial Data & Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Geometry"}], "\" \"", "\"Geometry\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Higher Mathematical Computation"}], 
            "\" \"", "\"Higher Mathematical Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[
            False, {False, "Knowledge Representation & Natural Language"}], 
            "\" \"", "\"Knowledge Representation & Natural Language\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Notebook Documents & Presentation"}], 
            "\" \"", "\"Notebook Documents & Presentation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Social, Cultural & Linguistic Data"}],
             "\" \"", "\"Social, Cultural & Linguistic Data\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Strings & Text"}], "\" \"", 
            "\"Strings & Text\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "System Operation & Setup"}], "\" \"", 
            "\"System Operation & Setup\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "User Interface Construction"}], 
            "\" \"", "\"User Interface Construction\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxVT9EKwjAMFHG6ifgn+4gxFQbCxuIPdF3mil1bmvShf2+\
HIPqUI3eXu1R5CRlw1Aj7NrALXMKhnlG+\
cJw2tLsrSpusYVyIiiqwXQQrWULeeevQc4RjLRif1iuk5G0dK2to2n686+\
yDRsqvo2IxJJTdhCb8EsUFNf4yawGrw2L+A8+NYfTOJ+\
2aAEVlIoSBMPU79Ug2eImP6NIjnZDp5Bu0Gkuz"},
 CellTags->{"Categories", "Categories-Checkboxes", "CheckboxCell"},
 CellID->969880382,ExpressionUUID->"44234692-7224-41cb-811f-aae17040cdf7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Resource Objects",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Related Resource Objects", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List the names of published resource objects from any Wolfram \
repository that are related to this paclet.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoRelatedResourceObjects"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "71d91b89-3553-410a-aeaf-b022b600d304"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Related Resource Objects"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Related Resource Objects", "TemplateCellGroup"},
 CellID->280622473,ExpressionUUID->"99e710d1-4d8c-47d9-880c-e7ceba28e373"],

Cell["Resource Name (resources from any Wolfram repository)", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->694609509,ExpressionUUID->"b6c3de16-d89a-458d-a8ab-1596b6182a18"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Source/Reference Citation",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Source/Reference Citation", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Give a bibliographic-style citation for the original source of the \
paclet and/or its components (e.g. a published paper, algorithm, or code \
repository).", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSourceReferenceCitation"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "2114aa69-7237-41b1-82b4-4b15bbd1c125"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Source/Reference Citation"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Source/Reference Citation", "TemplateCellGroup"},
 CellID->53755805,ExpressionUUID->"198392fc-c9b1-4c9b-a178-dffc5fc6f5e8"],

Cell["Source, reference or citation information", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->512303561,ExpressionUUID->"b1bd2295-68b1-4a1b-a38e-22bf0318fc5f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Links",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Links", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List additional URLs or hyperlinks for external information related \
to the paclet.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoLinks"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "c1118812-a935-47dd-b580-33a1c72993cf"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Links"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Links", "TemplateCellGroup"},
 CellID->179193585,ExpressionUUID->"26b478ef-e29c-4216-9edf-9b12fdf51457"],

Cell["Link to other related material", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->938599834,ExpressionUUID->"d627ecb5-8867-470d-b587-5c3e4ea97830"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Compatibility",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Compatibility", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify any known compatibilities for your paclet to ensure it is \
discoverable on the correct platforms.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibility"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "e3fa2d64-bbdd-40d8-8f8d-c7a8751af0fe"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Compatibility"},
 CellTags->{"Compatibility", "TemplateCellGroup"},
 CellID->31633819,ExpressionUUID->"2cfe323e-29e4-414f-a8b7-f371789e39a4"],

Cell[CellGroupData[{

Cell[TextData[{
 "Wolfram Language Version",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityWolframLanguageVersionRequired", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter required Wolfram Language Version (e.g. 12.1+).", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {
       "SectionMoreInfoCompatibilityWolframLanguageVersionRequired"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "ee15862c-86d4-4132-83aa-7f7d5f73469b"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{
  "TemplateGroupName" -> "CompatibilityWolframLanguageVersionRequired"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellTags->{
  "CompatibilityWolframLanguageVersionRequired", "TemplateCellGroup", 
   "Wolfram Language Version"},
 CellID->267876551,ExpressionUUID->"fd356c7d-953a-40bf-b388-d0a7cbd6eb47"],

Cell["13.1+", "Text",
 TaggingRules->{},
 CellID->455322278,ExpressionUUID->"2f62cf74-65fe-4898-8453-58749138a005"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Operating System",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityOperatingSystem", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Select all operating systems where your paclet is expected to \
function properly.", "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityOperatingSystem"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "d6360092-d0c1-4f03-9d50-d17aab9ed164"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityOperatingSystem"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{
  "CompatibilityOperatingSystem", "Operating System", "TemplateCellGroup"},
 CellID->54346056,ExpressionUUID->"edcea2f7-489a-4911-a1b0-b0e23e0305bb"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Windows", {False, "Windows"}], "\" \"", 
            "\"Windows\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["MacOSX", {False, "MacOSX"}], "\" \"", "\"Mac\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Unix", {False, "Unix"}], "\" \"", "\"Unix\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxNkN2KwkAMhWFbtcLiE/\
gKfQjpKggrFbOL3k7b1B12OjNMMui8vVFo8S7JOfnysylKmAEngzCvI/vIJSyqP2z/\
seszyr81MSzO2nbuRjA/qLaGC+S/Vt+lcc840GjrPyg/\
RQFN9jGYlEz6R8hUfMFGZHEMzmPgBOvKDV6xbrTRnGopSmKvkEiGypK1Z+3si/0+\
nYptp1k1Es12yhBOwvILDb4rz0udiYOlKithtbeMwQexPMGw3NgEsSGUj3yekFwMLf4kL486qlZID5\
UKaxo="},
 CellTags->{
  "CheckboxCell", "CompatibilityOperatingSystem", 
   "CompatibilityOperatingSystem-Checkboxes"},
 CellID->159509385,ExpressionUUID->"09c7ee3a-d124-4692-b8c5-4bb44ebd8f65"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Required Features",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityFeatures", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{"Choose any other features that are ", 
           Cell[
            BoxData[
             StyleBox[
              StyleBox["required", "TI"], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], 
           " in order to use your paclet."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityFeatures"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "21e16f71-7e94-4f40-8494-a8066d009371"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityFeatures"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{"CompatibilityFeatures", "Required Features", "TemplateCellGroup"},
 CellID->666988317,ExpressionUUID->"64dbe7be-90da-4639-b111-542af0ec512d"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Notebooks"}], "\" \"", 
            "\"Notebooks\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Parallel Kernels"}], "\" \"", 
            "\"Parallel Kernels\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Cloud Access"}], "\" \"", 
            "\"Cloud Access\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxlUMtqwzAQLE3c2BBKL73nB/wRxm0gtDQm6g/\
I8piKrCWhXR3891VaMC697Tx22J2mrFWhZCaoh3OSkKRWu/YL5ophvOPtu+XMFCfBxOPmF4/\
3vL2kvFF9eEHv/ZVX46I+dTpqItDhDdGB+D+zePct+TQcGmPA/BfVquyiD4gyq+fWT0GL7S1ZmY/\
QkiKyY3cOYr37yVtfyOXrYEX3eSqOmhiLUL2AsFZub3tKk+\
N2U6vHkxPEELPlFqyqxs0q9Yxcxv4C9ikafM4ht9Zpk5O+AVJDcOo="},
 CellTags->{
  "CheckboxCell", "CompatibilityFeatures", "CompatibilityFeatures-Checkboxes"},
 CellID->716444359,ExpressionUUID->"1ff525bb-951f-41b0-a886-97dc73c87b6f"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Environments",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityEvaluationEnvironment", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Select all evaluation environments where your paclet is expected \
to be compatible. See ", 
           Cell[
            BoxData[
             StyleBox[
              TagBox[
               ButtonBox[
                StyleBox[
                "$EvaluationEnvironment", "SymbolsRefLink", 
                 ShowStringCharacters -> True, FontFamily -> 
                 "Source Sans Pro"], BaseStyle -> Dynamic[
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                   "Link"}]], ButtonData -> 
                "paclet:ref/$EvaluationEnvironment", ContentPadding -> False], 
               MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], " for more details."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityEvaluationEnvironment"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "144f8e19-f70e-4b86-91f3-4ac3e75fb9de"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityEvaluationEnvironment"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{
  "CompatibilityEvaluationEnvironment", "Environments", "TemplateCellGroup"},
 CellID->701114648,ExpressionUUID->"a8ec1e13-afa1-451d-8089-58c87572c988"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Session", {False, "Session"}], "\" \"", 
            
            TemplateBox[{
             "\"Session\"", "\"Local or cloud interactive session\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["WebEvaluation", {False, "WebEvaluation"}], "\" \"", 
            
            TemplateBox[{
             "\"WebEvaluation\"", 
              "\"Cloud evaluation initiated by an HTTP request\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["BatchJob", {False, "BatchJob"}], "\" \"", 
            
            TemplateBox[{"\"BatchJob\"", "\"Remote batch job\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Script", {False, "Script"}], "\" \"", 
            
            TemplateBox[{"\"Script\"", "\"Script run in batch mode\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["WebAPI", {False, "WebAPI"}], "\" \"", 
            
            TemplateBox[{
             "\"WebAPI\"", "\"API called through an HTTP request\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Subkernel", {False, "Subkernel"}], "\" \"", 
            
            TemplateBox[{"\"Subkernel\"", "\"Parallel or grid subkernel\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Scheduled", {False, "Scheduled"}], "\" \"", 
            
            TemplateBox[{"\"Scheduled\"", "\"Scheduled task\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxdUdFqwzAMhK1tEtj2EXvPR3RZBhmDhmqwZydRialjG0su5O/\
nlMTJ9uSTTtzp5GOawx54VAiHk2frOYek6LG9YndJaPcliSEBJJJGwwFaJy1DBr65otOo4PkHm/\
ImlBd8nwjlsa7CRNtj5xV2kL4JbvtP0wSninGgRffyQLtzGFn1FxCZxXB+Y3+zwAoj+2+nv+\
WqPa86vxvtuPoKIxvTbHOltTMWHY/wWpjBBp9GKsnj6lrqm3RGD6inA5/\
s1KNJdHsISstOsmgC2n8IRRiJ7B0Vbpnpl4zyg6biMYeXSjM668LIPXF21GM4C2EwezojGe9a/\
B5tCF2LNij9AojVrVE="},
 CellTags->{
  "CheckboxCell", "CompatibilityEvaluationEnvironment", 
   "CompatibilityEvaluationEnvironment-Checkboxes"},
 CellID->991332972,ExpressionUUID->"e33f96f3-18f0-4ba6-81cf-7f1c4bb2cc62"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Cloud Support",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityCloudSupport", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify whether your paclet is expected to work in the public \
cloud.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityCloudSupport"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "e208a9d3-9028-434a-92e7-f75ee777b842"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityCloudSupport"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellTags->{"Cloud Support", "CompatibilityCloudSupport", "TemplateCellGroup"},
 CellID->677592290,ExpressionUUID->"72d2b18b-7d84-4d4a-a6ba-b86cbe3ab597"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[True, {False, True}], "\" \"", 
            "\"Supported in cloud\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxNj0EKwkAMRVFarSAu3LnzAj2EVoWC0NJ4gbFNcXA6GSaZRW/vFKy4C/n/v/\
ycshxSkNEgrKogLkgO6+\
KF7Ru7fsHJXbNw8vABo68UHHje9ktOmhBzewjOkRfsjtoeW0OhmxNZ7cmhlxEOBQ1OiX5qo2UsJtM3\
Fu9VTjRZnoj/\
ZM6unRb1jFN6U4bxJ2wuaPBfmUqTCYPlYpHDrrSC3vlomcCwPhMZVDaHbYNMwbf4GF38uFZt5HwA7D\
xZoQ=="},
 CellTags->{
  "CheckboxCell", "CompatibilityCloudSupport", 
   "CompatibilityCloudSupport-Checkboxes"},
 CellID->92922911,ExpressionUUID->"f1055032-4e1a-4103-b2f0-693e09d33900"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Disclosures",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Disclosures", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Contributors to the Wolfram Language Paclet Repository can include \
a list of disclosures with their paclet. These disclosures tell users how to \
expect the paclet to interact with their environment.\n\nDisclosures should \
be selected if your paclet interacts with the environment in ways that are \
not otherwise obvious to the end user. For example, if your paclet needs to \
write information to local files somewhere to store persistent settings, you \
should choose the \"Local files\" disclosure so that users are not surprised \
to find files that they didn't expect.\n\nFor cases where the interaction is \
inherently part of the paclet behavior (and clearly documented as such), the \
disclosure is unnecessary. For example, an exporter function that's clearly \
meant to write files in a place specified by the user would not be necessary \
to disclose.\n\nFor each disclosure item, additional details can be added by \
starting a new cell under the cell containing the checkbox. Use this space to \
clarify how your paclet interacts with the environment for the corresponding \
item. For example:\n\n", 
           Cell[
            BoxData[
             FrameBox[
              StyleBox[
              "\"MyPublisherID/MyPaclet utilizes the local file system to \
cache data by writing files in the directory \
$UserBaseDirectory/ApplicationData/MyPublisherID/MyPaclet/Cache\"", "Text", 
               "DisclosureDetails", StripOnInput -> False, LineIndent -> 0], 
              Background -> GrayLevel[0.9], FrameStyle -> GrayLevel[0.8], 
              ImageSize -> {Full, Automatic}, StripOnInput -> False]]]}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoDisclosures"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "4a49b18e-3a54-4594-a67f-31d0936a3de2"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Disclosures"},
 DefaultNewCellStyle->{"Text", "DisclosureDetails"},
 CellTags->{"Disclosures", "TemplateCellGroup"},
 CellID->376414000,ExpressionUUID->"d779cc9d-9521-489b-8dbd-8ca2719be183"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "LocalFiles"}], "\" \"", 
            TemplateBox[{
              TemplateBox[{"DisclosuresLocalFiles", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly does any of \
the following during loading or normal usage:\n\[FilledSmallSquare] Creates, \
deletes or modifies local files\n\[FilledSmallSquare] Imports data from local \
files\nFile operations related to normal paclet installation and loading are \
excepted.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
                   20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, 
                   ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {"SectionMoreInfoDisclosuresLocalFiles"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"], "\"Local files\""}, 
             "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJx9VE1uUzEQpm3SJm1UNrBhZSGWhAOwqZrXFiKlahXnAu7zOLHq53nyT9vHlkNwGY4Al0\
AsEWdg7CQvDSp4Y3vm8/ibmc8+7Q15l4fGAN+/iqGOYcgPigWUtyDVM9+ZaE+\
W7jhA5dXOcq92fWcaDdB+b4r3aZvNO743FfcjfABPtqMZVLURAcigOksIf3mmfWnQRwd+\
gqUwF9oQuus7BRhDEQ4IfSaCUPu+d+FElU/\
vLt38826xQPTAwkJ7hnXQaJlWrMHoWC1KA4FJ7aAMpmESwTNhG4aK8MAUGoP32s6ZjC5NBoVMMzpm0\
VXCsOjFHN4f/vjylRUOiLp/\
yyRQVIpEqAqlVprWJjFnKlHP4HFVowueSSLOlMNqC5FSJLLgROLrmYNUFckCru9dUdfWB2FMhhFz2T\
IUDhg8lFDTsXd8cIkOxlbhDB7aXvjDkShv5w6jlVTG/\
gcnmgncgXEqj98nLXKQ63op3JwuLF5sImR71sJ2hO/f0vi1iXA8TdcQsynxi77otp7+\
uKIScv0JHqlin1MxQK7i/Dzx/dMYsKI8y38k0z9LVRc3tOzMXITW0Us6mIl5q0X+\
hlO7qWDrOE8LbH3+KJ1fpd4yXM3FqBi16+\
fFc7pi8BGNLJB0TBqg53B8fidMzA3KgnxVGF3ekrSSOKhJmgi4Kvv567E12sKa11UNFtwohoB2/\
TL40WSjE3644TvkvWuXJBOabfPBVRa9V3vbT/G/\
iVFX7AKcJvU8Wrapdv8yLgt9LvWyAd0LYTw81ZqlJ/0XaGJl/aO+Dvnx2AZwtSNsLkf/\
1DY83nig72QwBU9PtoRZU9O/c53l/wdcjJ+8"},
 CellTags->{"CheckboxCell", "LocalFiles", "LocalFiles-Checkboxes"},
 CellID->454797044,ExpressionUUID->"688075fe-5fe7-4e72-b2b0-2dc69696b78d"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "WolframAccount"}], "\" \"", 
            TemplateBox[{
              TemplateBox[{"DisclosuresWolframAccount", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Requires, uses, or records any \
information related to user\[CloseCurlyQuote]s Wolfram ID\n\
\[FilledSmallSquare] Interacts with the user\[CloseCurlyQuote]s Cloud account \
or Wolfram account\n\[FilledSmallSquare] Creates, deletes or modifies the \
user\[CloseCurlyQuote]s cloud objects\n\[FilledSmallSquare] Creates or \
executes cloud deployed scheduled tasks\n\[FilledSmallSquare] Uses cloud \
credits, service credits or Wolfram credits\n\[FilledSmallSquare] Makes \
WolframAlpha calls", "MoreInfoText"], Background -> GrayLevel[0.95], 
                   FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
                   RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresWolframAccount"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"], "\"Wolfram account\""}, 
             "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJx9VLFyEzEQJcRO7MTjNDRQaago8A/QZOxzAp5JJhnLDLWi27OF5dOhleIcFX/\
BUPEjfAL8RIaS4RtY6eyLHQhX2NJq9+0+7Vv1Wz3e5K7UwPcuvCu86/\
H9ZAZyDmn2CBtnCsnSHDlYYLZT7bPH2Bh7DbTfHZtl2EbzDrbGYjkwN4BkO5zAotDCARmyRuXCnw4V\
Sm3QW8B3RmdWLPpSGp+\
7rImNBLQmlH2KGAonsj1snZJHRHhcHfOvu8nMGATmZgqZKZwyOVMZK423rBBSg2OpsiCdLllqAJnIS\
2Yy8geWGa3NUuXTVwe3n7+\
xMXzw5IovmcfwayyjQGPTKkjlmbELETNYCFRS5kzwtbefviBbEWCjYUQb5Q6skA7ZUrlZzFe7Jtr4l\
ImKasizjl2ZIkBigXJQHSkQC6qc/\
BYmVZmi9RacjHDm6j3RxM3YEAI3IH1YV14pFNqUVDrKGaTUNiIhcF6FvcXaT1pIlaPslORaSVgbNqt\
dmWLouZhDfQd9XcwEk0Jr5J1zY2FEdzeBm1oreDAQcj61RDalFrdfW1GewTVom8Xv93Ht2Yk9Pxd2q\
nJMntwhRHvU6jbCj+/h+3WH0B2HNNTmsUiVx6RZn7RHCzEFrj7Chmr3OBUO6Qrn5zG2+\
96Z0Hj5AJn2MHRIXNGyMbEe6oNW0OhETOtZ4S849YgUtMZ5eADWGIcBY0W/rnL1nwySQb0+\
So4oTeeN0WliaNZIMzSy3ZNroX1UbRyYZ4lWck7SD2KysKlq/nyUa5XDuraLAnKwA++cydfTy4/\
uSZV3t+vu8dalNQVYV/59tH8RBxSz3e2n478kqUv5DKyiedtY1rSb94zVxZ+QMGNDmqdCI/\
yrVdVJeN+M9oscN/rc4904voUl33g17X5ecn+FQCw6Y0B6XiRMyoLeycv4yvwBt4/oNQ=="},
 CellTags->{"CheckboxCell", "WolframAccount", "WolframAccount-Checkboxes"},
 CellID->707443347,ExpressionUUID->"e1da536d-b6f8-42b4-8ebf-8c5294be40b0"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "ExternalServices"}], "\" \"", 
            TemplateBox[{
              TemplateBox[{"DisclosuresExternalServices", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Makes requests to external services \
(http, ftp, ssh, etc)\n\[FilledSmallSquare] Creates or uses service \
connection\n\[FilledSmallSquare] Send emails", "MoreInfoText"], Background -> 
                   GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
                   GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresExternalServices"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"], 
              "\"External services\""}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJx9VF1uEzEQJm3SJm2UgsQTvFg8AWouwEuVbFOI1CpVnAu4u7OJFa+9eOyky0W4C+\
IIcAnEI+IMzHqTbRuV+\
mHXnt9vZj570O7zFneFAn4w8S73rs8PowXES0jSZ9i8lEiS1thBhmmjOqd72Jx6BXTen5p1eQziBra\
nYj00t4AkO55BlivhgARpszLhr88lxsqgt4CjWwdWC8XBrmRMPi1sRqAUxTkkn3PhRHqA7QsrshBjr\
1Lzb41oYQwCcwuJzOROGs1kygrjLctFrMCxRFqInSpYYgCZ0AUzKdkDS41SZi31/MPRr6/\
f2ZVYkt7CZw/\
okDnDYIOK4QYWe7twLj9laflBXJwycPG74B1ZoPoIg2Ue6b9xYbHRmtITrmDGQScMMiEV8u6VsTDWq\
ZlRom0j8Wgo4uXcGq8Tqr7z0YriElagbBrW37PashvacSXsXGqMXt5FCPIwyIcRfv4o15+\
7CL1pmYY6MBWJ9Bi1ak1nnIk5cPkF7o30gMdCQbKJ8/sMOwPvTCacjP9TTOccaATihrbNmfVQK9rl+\
GZiXhOJv+dVm7ZxnmLHNspxGWXTgBrn5h8No2G9P4lOKFH3k1FJZIiK4IAY3RuthPKizBrY9CpSMl4\
SLyzLCAWTBMNmQc/fjLWSGrboJjlosEPvnNFbcvMXo13C8Oe72Pu8fW1NDtYVjykPJ4HDmO4/\
vF9PlkrT0guw0kFyb1sX39oRVgMYJbIaTOtCKITHRlZpykfAKJ9pvDfvPu+NNYHPLdmGBnUGuuD+\
BoHeiO4UkG5gDLMip8fkOlzEf85ukpM="},
 CellTags->{"CheckboxCell", "ExternalServices", "ExternalServices-Checkboxes"},
 CellID->746227322,ExpressionUUID->"a69a0860-2457-4f06-8658-9f8a87aa0565"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "WLSystemConfiguration"}], "\" \"", 
            TemplateBox[{
              TemplateBox[{"DisclosuresWLSystemConfiguration", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                    
                    TextData[{
                    "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Creates persistent local scheduled tasks\
\n\[FilledSmallSquare] Modifies WL system or environment settings\n\
\[FilledSmallSquare] Modifies ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "$Path", "SymbolsRefLink", ShowStringCharacters -> True, 
                    FontFamily -> "Source Sans Pro"], BaseStyle -> Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/$Path", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]], ", ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "Directory", "SymbolsRefLink", ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"], BaseStyle -> 
                    Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/Directory", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]], 
                    ", or similar\n\[FilledSmallSquare] Installs additional \
paclets or dependencies\n\[FilledSmallSquare] Creates, modifies or deletes \
symbols outside of the Publisher`PacletBaseName` context\n\
\[FilledSmallSquare] Creates or imports non-public ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "ResourceObject", "SymbolsRefLink", ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"], BaseStyle -> 
                    Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/ResourceObject", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]], 
                    " content\n\[FilledSmallSquare] Makes FrontEnd \
modifications\n\[FilledSmallSquare] Internal handlers"}], "MoreInfoText"], 
                   Background -> GrayLevel[0.95], FrameMargins -> 20, 
                   FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, 
                   ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresWLSystemConfiguration"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"], 
              "\"WL system configuration\""}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyFVM1uEzEQpm3SJm3VXkBInCzErY24I9Sq2bQQKSFRHKlXnPVsYuK1Vx5v2+\
VFeBkeAQ68AuKIeAZmvUmaVi3sZe3xzOdvfj6fNVq8zn2hgW8Pcp/\
lvsV3ohnEc5DJE6z1FJKl3vWQYrJR7ZNNrI1yDbTfGtnrchvMG9gYieu2vQEk294Y0kwLD2RIapULZ\
x2FsbaYO8DLHi+QcCNrEjXNnfCKVnWsRaA1ge1QYEd4kWxj48KJNABtVsf8x1Y0sxaB+\
ZlCZrMylqmEFTZ3LBOxBs+kchB7XTBpAZkwBbMJ+\
QNLrNb2Wpnpm92fX76yyAHRRJaBQyIJxjNtY6EZxjOQlKhkXuAcg3PfSpUo8r7sMQz8mXUMzJVy1qR\
lLIL3hH3P/\
e3Rq6Hws6OTY1p2AjPrinJL4ahSpYULEV2DXmhNhKVUZVpEpEoIS1cJGRgJJibQdfbHLF1eFbzIn5Z\
YpBNLWDb3qCQsCzDMJ1rhDNzHYUBuC4QPVOGPLLbGw42/\
UxfCU2lmHREw1rSyMjimLEaAVO0YBpNPlM3RSRVsquC+mFPoBRXFnxu5IBeHHuMiTw+\
uTG4mjNRUer7ftw66JrFjYrAcMtxti3g+dTY3koai+c6JogdXoF0Svj+nK8/\
9MCV94abKYPT0FiHYw5DfRfj+rfx+3yIcjMprqHkjIVWOUX110uymYgpcfYa1cd/mNCUgFzi/\
TrF5lnubUpLxI8k0O2VjxISWtbHLYXXQKKd6LKYrkfHXnIpK1Vri/Fc5S6i9EmpRhRXZxT9qR+3V+\
jA6pNv231stI0tapYkhyR+cXwmdB8igtBcRdXtOmnHURAdMEReXhnP+\
smu0MrCkOKDRBNfOvbdmqX7+/FYo8Tpf/uzBNFq8MXSWpOiLRz12BkHvmGzdfZD+\
mTq10NDEKw9ybbkqRv2eserKOUkwdKt+ITTCQ32sTspX0+o8Nbg2BC1+EKY8c+\
Qbcm6emYLnE3oiWnx/qZ9xkdHrWynxL9i8CFw="},
 CellTags->{
  "CheckboxCell", "WLSystemConfiguration", "WLSystemConfiguration-Checkboxes"},
 CellID->406353161,ExpressionUUID->"49ea94ba-3987-44c7-9dbb-b9d3864e1dd5"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "OSConfiguration"}], "\" \"", 
            TemplateBox[{
              TemplateBox[{"DisclosuresOSConfiguration", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                    
                    TextData[{
                    "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Modifies OS settings\n\
\[FilledSmallSquare] Makes any use of ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "SystemCredential", "SymbolsRefLink", 
                    ShowStringCharacters -> True, FontFamily -> 
                    "Source Sans Pro"], BaseStyle -> Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/SystemCredential", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]]}], 
                    "MoreInfoText"], Background -> GrayLevel[0.95], 
                   FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
                   RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresOSConfiguration"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"], "\"OS configuration\""},
              "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJx9VF1uGjEQLgkESBDpQ5/yZPWtirhAVTWCJWmRgogwF3B2x2DhtVceO2R7gt6gl+\
kR2ktUfax6hs7uwoZEafyy4/\
n5PDPfzA47A97iPtfAj2bBZ8EPeDtaQbyGRL7C5rVC0rQmHlKUjeouD7A5Dxrofji3m+\
JaqhvYmYvNyN4Dku5kAWmmhQdSyGblws/GCmNtMTjAGY+\
skWoZnPCKpBY2I9CaYNoUMhZeyCPsXDmRlhAHlZl/\
bUQraxGYXylkNitimZIst8GxTMQaPEuUg9jrnCUWkAmTMyvJH5i0WtuNMsv3x7++\
fWdTmyipyGXGGYL3ZMDKINbbwEAvUfCHc54jNSFykIDxSujzj7w3tQ4mRtoF3NddweORiNdLZ4NJqJ\
buJyfya7gD7WR5/l7Unr2yuKlwS2UwevOAUOpLVh4j/\
PxRnD8PCP158QylPReJChi1akt3koolcPUF9vg54rHQkGxxfl9gdxi8Tan/8X+\
K6Y6BGipuSWwuXIDa0CnIWIhlPRX8HaeeExk7nBeo3oGcFCDb+us0t99oFI1q+\
TQ6pXd6n61OIktjBR5oOvuXd0KHErIcjbNIq3hNJDuWUhJMURYuLe387cRoZWCX3CwDA24UvLdmN6j\
8NY1BvJ8oP32S+YB3bpzNwPn8GVt7Vk4jysPHi/\
JincSUWYFTHpI9sa689URZNf8yURUprSuhEZ6jq7IU22x1SA3ucT3g/\
Ynx4DJHvmWd3aHJebilHRjw3hyQdimGRZ7RX+GmXKl/fRB8PA=="},
 CellTags->{"CheckboxCell", "OSConfiguration", "OSConfiguration-Checkboxes"},
 CellID->787398734,ExpressionUUID->"08421e73-98f7-45d2-8965-f90049874df5"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "LocalSystemInteractions"}], "\" \"", 
            TemplateBox[{
              TemplateBox[{"DisclosuresLocalSystemInteractions", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                    
                    TextData[{
                    "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Executes Shell or RUN commands\n\
\[FilledSmallSquare] Uses external evaluators via ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "ExternalEvaluate", "SymbolsRefLink", 
                    ShowStringCharacters -> True, FontFamily -> 
                    "Source Sans Pro"], BaseStyle -> Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/ExternalEvaluate", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]], 
                    "\n\[FilledSmallSquare] Interacts with external libraries\
\n\[FilledSmallSquare] Reads or writes to streams or sockets\n\
\[FilledSmallSquare] Launches parallel kernels, subkernels or GPUs"}], 
                    "MoreInfoText"], Background -> GrayLevel[0.95], 
                   FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
                   RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresLocalSystemInteractions"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"], 
              "\"Local system interactions\""}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVM1uEzEQpm3SJm3UXpAQnKxeSw5cEaJqtmmJlNJqnT6AszubWPHaK4+\
ddHkRrjwIjwAvgTginoFZb35aRCv2svb8fP4883nOWl3e5K5UwHevvSu86/\
K9aArJDNLsGTaGEsnSHDjIMduq99k2NmKvgPY7sVlU22DewlYsFj1zB0i2gxHkhRIOyJA16hB+\
fC4xUQa9BRyaRCheIkEPtAMrEieNxqyJjQiUIrg9Sj0XTmS72LqwIg9Q27Wbf9mOpsYgMDeVyExRJT\
OZsdJ4ywqRKHAslRYSp0qWGkAmdMlMRvHAMqOUWUg9ebv/4/NX1r+DxDsK4VOCZsay+\
PYjS0yeC51iCLlFcsMd8dRCMZgL5YUzFtlcCvbupL/\
09GsHnLwPWauLIVtIN93kKzm2wkqosWMQKVanLqysWDjD0FkQeTCioWa4OnIovE6mFFIIK5QCxWYEC\
ApfM/Tj5bpKury5Rd65MhYGOjMjOnjVNdzviWQ2scbrlGrcvrSiHMIclM3C9/\
t0HdkJRb8SdiI1Rs83CMEeVPMQ4fu36vu1QTiMq2OozrFIpceoufa0B7mYAJef4J5+\
djlJAtIlzs9TbJ95Z3LhZPLIZdrnQI0WY1o2RtbD2tGqRDISk7Vq+RsOQWErnP+Q4grsoAJb1mFNd/\
mPelFvvT6Kjui8zgej0siQ/\
MEBvaLDpSoIM0j3VaRkMiMRWpYTGSaJjc2Dnx8PtJIaViSvC9Bge945o1cPir8MfBkGwpS9YcxfPHK\
VLm/dWFOAdeUTMXvXRX3xnYcv/ckCUCv1FCrlpveW65I0/zLW3emnsu5a80IohH/1s/\
ZU48gon2u8J4YuPwzEC0uxoWztM11yP0agadWJAWkIJDAqCxprN2EW/AF5ZskH"},
 CellTags->{
  "CheckboxCell", "LocalSystemInteractions", 
   "LocalSystemInteractions-Checkboxes"},
 CellID->595267108,ExpressionUUID->"da045c2f-c39c-4315-9b3d-cd13ef19efa6"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Other"}], "\" \"", 
            TemplateBox[{
              TemplateBox[{"DisclosuresOther", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Add additional text as needed in a new cell below to \
document any additional disclosures that are not listed above.", 
                    "MoreInfoText"], Background -> GrayLevel[0.95], 
                   FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
                   RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {"SectionMoreInfoDisclosuresOther"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"], "\"Other\""}, 
             "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJx9U9ty2jAQbRIMpmFIH/rUl2r6Tn8hAyZpmUmGjMUPLNYaNMiSRxeI+43tX/Sx02/\
o2oAhvelFq72cvZzVOB7xiPtKIe/Ogy+DH/FessZsgyJ/5ToP0pEmmnksXH6xf+eXrpMGhfS+\
Ss2ufjbqCxensJuYZ3Sku15gUSrwSIq8s3fhb6bSZcq4YNHN/RptHrlOgkpRcI8cp+\
Ah77r43kLRBF7uzdyNhWAghPTSaFDM47Nn4JhGFCiY1AxI3rGMnNkSldkxb5gwWShQk6euzqPFqQrm\
10B2i0wbzxQVSXCwNFv8yAePxuJM52ZB2Y5du9cTyDYra4IWVHX/\
k4XqAbeobN6cn7et56Bp4xHsSmqXvD0hNPpm6i8Rvn2tz48TwjCt00i9SkHI4JKotfRnBayQyy94Nv\
8uz0ChOOB8v3X9cfCmAC+zfzTTn6JCD0sSOwsbsDXE9dgXsGpZ5+85ZvX8jjh/\
UHkMva5DD123xR3uZJJMWvkmuSH0wWejRGJoWdAj7dzwbgsqQJ2qof5domS2YbmxrKDUxDWJRWPnH2\
ZaSY3HkuYlarST4L3Rx/XjUVPd4Rrx+MmaEq2vWk1vXtZgLr96ud//\
bYQI0BQtaV3OxLa16DflfqZ3tIHNrKN7UA7/xsLeUn9Co0Kh3RmFIz6caY+\
2tOTbtN8f64qHpUP6o4MUnQk2w0VV0md+gowgfwHj7V7a"},
 CellTags->{"CheckboxCell", "Other", "Other-Checkboxes"},
 CellID->641642549,ExpressionUUID->"e0283330-2156-4bea-a96d-1d1f24a35366"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Author Notes",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Author Notes", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "This section, when used, will appear near the bottom of the \
published resource. Content displayed in this section can include background, \
possible improvements, additional information and/or implementation details \
that are otherwise beyond the scope of the paclet documentation.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoAuthorNotes"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "cc012bee-7658-4d12-899f-af0ca63f9f0b"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Author Notes"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Author Notes", "TemplateCellGroup"},
 CellID->951557313,ExpressionUUID->"e0714b47-0d22-43f3-894e-da705bc20bec"],

Cell["Additional information about limitations, issues, etc.", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->908162033,ExpressionUUID->"0078788e-716f-4589-88cd-e02afce3a726"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1141.2, 574.8},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"AssociationFunctions | Definition Notebook",
DockedCells->{
  Cell[
   BoxData[
    TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
   CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
   RGBColor[0.33333, 0.33333, 0.33333], CellTags -> {"MainDockedCell"}, 
   CacheGraphics -> False], 
  Cell[
   BoxData[
    TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
   TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
   CellFrameMargins -> {{0, 0}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
   CacheGraphics -> False, CellOpen -> Dynamic[
     CurrentValue[
      EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]], 
  Cell[
   BoxData[
    StyleBox[
     InterpretationBox[
      StyleBox[
       PaneSelectorBox[{False -> GridBox[{{
             OpenerBox[
              Dynamic[
               CurrentValue[
                EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], 
              Appearance -> Automatic, Enabled -> Automatic, AutoAction -> 
              False, ContinuousAction -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.8667337636255108`17.339919259767075*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                   "System"], FontSlant -> Italic, FontColor -> 
                  GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                  False], "\"   \"", 
                 TagBox[
                  
                  GridBox[{{
                    "\"Paclet build completed successfully.\"", "\"\""}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                 TemplateBox[{
                   ButtonBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> 
                    "\"PeterBurbery__AssociationFunctions-1.5.0.paclet\"", 
                    True -> StyleBox[
                    "\"PeterBurbery__AssociationFunctions-1.5.0.paclet\"", 
                    "HyperlinkActive", StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                    SystemOpen[
                    File[
                    "C:\\Users\\peter\\Documents\\GitHub\\association-\
functions\\Association Functions\\build\\"]], Appearance -> None, BaseStyle -> 
                    "Hyperlink", Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                   "OEM6eJxNjkEKwjAQRYkUEfQQ0n2LLty4a5XqwoW0unKkpHEigbYpmQT1DF\
7aRkTdfd77/BnJaJTzW6rvSJLRMNc+y4CCnSJbBJmqsWAnOaDxAZuu5ha9Zx//\
ZOFqCXAkNATQoUUDsNbCNdjanmyU3boKgBNpobhVuo2ka4UPvU5+eJr9cOVUfQHY+7nUmQrNoyz/\
ut9qNI8X8SzuuKjRhsXEf5uY6/t6wc4v7yVQDw=="}, "ClickToCopyTemplate"], "\"\"", 
                 TagBox[
                  ButtonBox[
                   TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                   With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
                    EvaluationNotebook[]}, 
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells] = If[
                    TrueQ[
                    MemberQ[
                    CurrentValue["ModifierKeys"], "Control"]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Cell[
                    Blank[], "StripeCell", 
                    BlankNullSequence[]]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Condition[
                    Pattern[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    Blank[Cell]], 
                    Not[
                    FreeQ[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "371232cf-d35a-4af8-b553-83f46dd03c35"]]]]]], Appearance -> 
                   None, BoxID -> "371232cf-d35a-4af8-b553-83f46dd03c35", 
                   Evaluator -> Automatic, Method -> "Preemptive"], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left, Left, Right, Right, Right}, 
                 "Rows" -> {{Baseline}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {
                  Automatic, Automatic, Automatic, Fit, 8, Automatic}, 
                 "Rows" -> {{Automatic}}}], "Grid"]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             OpenerBox[
              Dynamic[
               CurrentValue[
                EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], 
              Appearance -> Automatic, Enabled -> Automatic, AutoAction -> 
              False, ContinuousAction -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.8667337636255108`17.339919259767075*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                   "System"], FontSlant -> Italic, FontColor -> 
                  GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                  False], "\"   \"", 
                 TagBox[
                  
                  GridBox[{{
                    "\"Paclet build completed successfully.\"", "\"\""}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                 TemplateBox[{
                   ButtonBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> 
                    "\"PeterBurbery__AssociationFunctions-1.5.0.paclet\"", 
                    True -> StyleBox[
                    "\"PeterBurbery__AssociationFunctions-1.5.0.paclet\"", 
                    "HyperlinkActive", StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                    SystemOpen[
                    File[
                    "C:\\Users\\peter\\Documents\\GitHub\\association-\
functions\\Association Functions\\build\\"]], Appearance -> None, BaseStyle -> 
                    "Hyperlink", Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                   "OEM6eJxNjkEKwjAQRYkUEfQQ0n2LLty4a5XqwoW0unKkpHEigbYpmQT1DF\
7aRkTdfd77/BnJaJTzW6rvSJLRMNc+y4CCnSJbBJmqsWAnOaDxAZuu5ha9Zx//\
ZOFqCXAkNATQoUUDsNbCNdjanmyU3boKgBNpobhVuo2ka4UPvU5+eJr9cOVUfQHY+7nUmQrNoyz/\
ut9qNI8X8SzuuKjRhsXEf5uY6/t6wc4v7yVQDw=="}, "ClickToCopyTemplate"], "\"\"", 
                 TagBox[
                  ButtonBox[
                   TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                   With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
                    EvaluationNotebook[]}, 
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells] = If[
                    TrueQ[
                    MemberQ[
                    CurrentValue["ModifierKeys"], "Control"]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Cell[
                    Blank[], "StripeCell", 
                    BlankNullSequence[]]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Condition[
                    Pattern[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    Blank[Cell]], 
                    Not[
                    FreeQ[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "371232cf-d35a-4af8-b553-83f46dd03c35"]]]]]], Appearance -> 
                   None, BoxID -> "371232cf-d35a-4af8-b553-83f46dd03c35", 
                   Evaluator -> Automatic, Method -> "Preemptive"], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left, Left, Right, Right, Right}, 
                 "Rows" -> {{Baseline}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {
                  Automatic, Automatic, Automatic, Fit, 8, Automatic}, 
                 "Rows" -> {{Automatic}}}], "Grid"]}, {"", 
             PaneBox[
              TagBox[
               GridBox[{{"\"\"", 
                  StyleBox[
                   TagBox[
                    
                    GridBox[{{
                    "\"\[FilledVerySmallSquare]\"", "\"Build result: \"", 
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"C:\\\\Users\\\\peter\\\\Documents\\\\GitHub\\\\\
association-functions\\\\Association \
Functions\\\\build\\\\PeterBurbery__AssociationFunctions-1.5.0.paclet\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"34.4900758`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"C:\\\\Users\\\\peter\\\\Documents\\\\GitHub\\\\\
association-functions\\\\Association \
Functions\\\\build\\\\PeterBurbery__AssociationFunctions-1.5.0.paclet\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"34.4900758`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletManifest\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TagBox[
                    
                    DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                    "InitialData" -> <|"Files" -> {<|"File" -> 
                    File["Kernel\\AssociationFunctions.wl"], "Hash" -> 
                    "c4c653cc63ecea868cda5ad4f60359e19a3938b255fb8b2323eb1347e\
7f1cd05"|>, <|"File" -> 
                    File["Documentation\\English\\Guides\\\
AssociationFunctions.nb"], "Hash" -> 
                    "878dbc991b8c95dad2a336035d3f4f6ae0f6bd0343493be07cf015c9e\
f92f352"|>, <|"File" -> 
                    File["Documentation\\English\\ReferencePages\\Symbols\\\
LinearOptimizationInformation.nb"], "Hash" -> 
                    "e6bc926f52acd571bba9ab878178962786a327eb88354ff7e20ef5e9c\
28fae13"|>, <|"File" -> 
                    File["Documentation\\English\\ReferencePages\\Symbols\\\
QuadraticOptimizationInformation.nb"], "Hash" -> 
                    "d8b795ca5534c66a0de16e08a99213224fb58e8fd4adf075e39d0e141\
433fd28"|>}|>, "AllowEmbedding" -> True, "InitialShape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[4]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|"File" -> 
                    TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 4, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "InitialType" -> 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 4], 1], "Meta" -> <||>, 
                    "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[4]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|"File" -> 
                    TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 4, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 4], 1], "Path" -> {}, 
                    "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 2, 
                    "DataRowCount" -> 1, "DataColumnCount" -> 2, 
                    "SortPaths" -> {}, "SortDirections" -> {}, 
                    "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    Mouseover[
                    
                    Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                    Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^Rational[-1, 2]}, {-2^Rational[-1, 
                    2], 2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, Keys}, "KeyDummy", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, ImageMargins -> {{5, 
                    3}, {4, 5}}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["File", 
                    Style[
                    "File", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "File"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "File"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, ImageMargins -> {{5, 
                    3}, {4, 5}}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Hash", 
                    Style[
                    "Hash", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "Hash"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "Hash"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, ImageMargins -> {{5, 
                    3}, {4, 5}}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Files", 
                    Style[
                    "Files", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Files"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel\\AssociationFunctions.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "c4c653cc63ecea868cda5ad4f60359e19a3938b255fb8b2323eb1347e\
7f1cd05", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation\\English\\Guides\\AssociationFunctions.nb"]\
, 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "878dbc991b8c95dad2a336035d3f4f6ae0f6bd0343493be07cf015c9e\
f92f352", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation\\English\\ReferencePages\\Symbols\\\
LinearOptimizationInformation.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "e6bc926f52acd571bba9ab878178962786a327eb88354ff7e20ef5e9c\
28fae13", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation\\English\\ReferencePages\\Symbols\\\
QuadraticOptimizationInformation.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "d8b795ca5534c66a0de16e08a99213224fb58e8fd4adf075e39d0e141\
433fd28", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}}, BaseStyle -> {
                    ContextMenu -> 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem["Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem["Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                    Dividers -> All, FrameStyle -> GrayLevel[
                    0.7490196078431373], Spacings -> {0, 0}, Alignment -> 
                    Left, BaseStyle -> {FontFamily -> "Source Sans Pro", 
                    FontSize -> 14, FontWeight -> Plain}], LineBreakWithin -> 
                    False, ContextMenu -> {}, NumberMarks -> False, 
                    ShowAutoStyles -> False]], 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`SubViewPathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
                    Framed[
                    Dynamic[
                    Replace[
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                    Blank[]] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                    Pattern[
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                    Increment[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                    TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader = TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
                    FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
                    Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 
                    1], TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$\
}, 
                    DynamicWrapperBox[
                    DynamicBox[
                    ToBoxes[
                    Dataset`DatasetContent[
                    2, "Path" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
                    "Grid" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
                    "State" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    "VPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
                    "HPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
                    "TopBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                    "BottomBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                    "OutputID" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
                    StandardForm], TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                    MouseAnnotation[]], Initialization :> (
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                    CreateUUID[]), DynamicModuleValues :> {}, 
                    BaseStyle -> {LineBreakWithin -> False}, 
                    UnsavedVariables :> {
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}], 
                    Deploy, DefaultBaseStyle -> "Deploy"], 
                    Dataset`InterpretDataset[1], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"DocumentationBuildResults\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], ButtonFunction :> (
                    Typeset`open$$ = True), Appearance -> None, 
                    BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"11.3746033`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], ButtonFunction :> (
                    Typeset`open$$ = False), Appearance -> None, 
                    BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"11.3746033`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"MaximumFileTime\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    
                    TemplateBox[{"5.8244625`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], ",", 
                    "\"C:\\\\Users\\\\peter\\\\Documents\\\\GitHub\\\\\
association-functions\\\\Association \
Functions\\\\Documentation\\\\English\\\\ReferencePages\\\\Symbols\\\\\
QuadraticOptimizationInformation.nb\""}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFiles\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"\[LeftAssociation]", 
                    
                    RowBox[{
                    "\"C:\\\\Users\\\\peter\\\\Documents\\\\GitHub\\\\\
association-functions\\\\Association \
Functions\\\\Documentation\\\\English\\\\ReferencePages\\\\Symbols\\\\\
QuadraticOptimizationInformation.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"5.8244625`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"5.8244625`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], 
                    "\[RightAssociation]"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"FailedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PercentSucceeded\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"100.`", "\"%\"", "percent", "\"Percent\""}, 
                    "QuantityPostfix", SyntaxForm -> Mod], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"ProcessedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SuccessfulFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SkippedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"DocumentationBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], "}"}],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"PacletBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    Short[#, 0.75]& ], 
                    "OEM6eJztPU1vG0l2ovghUZYt2eOZ3Z18KQx3kY+\
lIoqiRA0GsamWZClr2bRK9mQRBeNid7XYULOb6WrK5gYBskCQS5BDsnvcQ5Bb/\
kIuewiwiwAJkJySa7IIglwyQBAguU1eVX83Sbm7SdmSp3kQqe6qV6/qfdarV1Vyhs4f41c7+\
mtC5Ty9e6iZxOgZxMSmomvwWM7QwrHOCsg5mnusUFOepYUTfAZP0BzqiyKhFN1C/W4XG4MDgiWU+\
V05S5d3BxruKuKRLvVVwqrPutWziJj0zsmgRygxX+o9opXLNL+PVUqct/\
edt6TbJhICdEi5jPLHAH8AZW6dkG5PhYcWhhbgLF1qYY0gohLR1I1gm7ljQMNpJE/\
nHhmKFKzsfM8xIOxVgRZ3+qbpDMOC3SML7sf7ey1DuQAUXu4bumbuadIxoXrfEAkq7u/\
tKGYX9yhatgcGKj2FfhKDIc9Q2SUqHhCJ3rGa2O9rIhvxcaOTOzH6xO3GQrPXI9jAGgx+7omueW+\
KO5gSZA5UIs+E+l7cu8BqH8PI0GKzb+\
pdILHovi0cEbOjS2ihZRAYW1O58AFtqsqZ1iWa6QwoLQiEcYrz7RU97OIzgpTvERixOXvE3FqBdvMn\
SpdQY4Z/Fh+6T6DiotA3DAD8AhAm6PY+jK+AewdEOeswFPIt/RW0maH3m22qq32T+\
MvT20f4TFNkReQ8LHwJ5J7fN3CXEzVL5/nwMPbNl/7tRz8oAcDirmIAz7A+w/vjRzuCruqG8TX++\
ecHxgf887MHxu/wz788EL7h9ngRmYbSe6odar2+6XGx9fKOAKgDYi0sSYp2Fn69wNHi+\
ITouMjfHGHjTNGon43ZtzAjzIR/\
j8el4DG7AyfjfjuynQ3LdljI7KpoqdTCokrMpiF2YLxKKFf6ZKWEFgDOLpFxXzXRhzbPH5qk29Q03d\
IlKPvFn/2lT3f8aaYkfHJ6+pwCF52e9ghw0enpri72GZ/\
Bk0eKedBvn55iSnVR4SAqsi0l8LrpPV7Z9x63+\
4oqnZ62GLidvtEmxuDzz31l3aKV6mp9dW21xztTchUYw3mS4blVOoH+\
qoyREw8NtBaAnXNg1zZWN7bX1rbqjZcoW6IlNEeJqGsSRcUSsn6V0PyzPtZMxRx4XIYGmolf7+\
tGl2ZBHwc765RatplkSNadEmgOpKLf1ahvfCyxzj0mslcsB/\
0dLjNC5SywR6AHgVZhwViykWEYcmUSGZfhdqIj5LSKgCuYtEZuVZiN35hPU+dCmvo+\
6uivmChrZ0IH1LzING14iG496YNpNEBFnA+9uwOmCZQO6DSFMhWY9ajMQXN+\
sNROuOoVs0H2RO9dXwZYZjRRFY20dKrY5tgicEbIuKUsW/xOfAhB1WliHyJsfFInInUiEjgR+\
dSJSJ0IaWqdXbZ54QiDuBFqJu9x3td351dhxES0GJyIVpiaRAMKsF8+\
AQSIxDj9JWB1DlrIUdBlas1Bm/cq6NahBtYBq7vYxM1MBeX3FRghZ4ibsxWUY0/\
YqLBv9IvfIYZG1NNRLLT6SoXiB5h20ENxQ9ys10Rxs0ZEghubDVHCdSxtyJtrtfo2qW7j2nat0V6v1\
+U2fNXWa6RdrW1skS25Kkpr9eGWNxxZ4I2e7mlnqkI7p4/\
6ikToaHy0totPY6shtcXt7Wq7IW7XJSyt41qN4SLVZEAKkzV5sy2t1TZqG9u1NlnbEuW1al3cJvL2u\
lyrrw/jczQan2MiE1C9ImnBiNNTNOi2dZWePgZLjI2nYEe6yvd4jUNNBgbkP/\
2Ikk1Ac31Trq9jUapvVdttvI3bgH51q7G9ub7V2MS19S3SbjRq9Q1Z3iLra0Suk21xvSFjUq0NI9qK\
hShIi2QwixQBV6nR3tqui7herwG5N/GaRKqbZK2Bt7fXq7X19Q25XW+\
QhixtYEkGMSW1bWmNVDeqG7WaLK03KuhOU1X1V3ssMMLtAfdHKmjR5krUwT1mA37Fx9c2MyMRXIGXL\
EhDDF6sma04kkqzAJb/gUFYGVf3O2SwC7I4EPJCZkRVaxTHvGL9BzcqR39pHPTHMHggf4DAWOQtt8/\
p4zcvwdOy+7xghv7yuIJN8CV4ISPDfYjHD6eIYCRIY8caFKBFJB93vrkfwqc2q0XrNe/0H33/\
IZRethwYIgHnKsBLA/B6Z123yyWkkBtd1vPxWaHMmEK2Q+kpUYYiixf6UOV6Ceov+\
Z8BxrRgTYoAp7u+Vy94uC/\
0EEr2RdfZscbPHhcvCjLUgDPM41oWcsDbKAduLm7OVFARSHQC7hUxhfsggBbp7QcLYBdSUUxF8QaIY\
u4mymALmx2vC3d3Fdrjs2EglaD3Ya4Hhe67Ty1WsF4ADReZ6+\
YvucQehAoVkW6YrBnqtXOHPbMneuAt+V4cKJJENOah0iOYteee9FXw7Bae9yTwG1lXhAxdi+\
Zq6n0Tpl6Hu+Wy46N+\
O1rFHiALlWaCDm7EyhctnZbLPM4Rp1onWbUzeAioZuntgH8eXiWqRoIGLhmoUesdm4Pskp6qD2BCkL\
eiGHM0x185U1cvUJPj0xf4ZgEb+F7wphdsSn+\
k9ynRL4jBpvSPDNzrKCIdDoq48QqhcEksCRBDIlaJZNT4529/HIDqiUQRng0ekwui2iV/\
9oAFQlq6OjgDOL5wof1txTK4hpg/5shjVfiS/2+\
FQ4QvLy8VBVCE2pHamh6gaF2blETwMBoXlpGqiCzccs7jSquRKqk6tHegq1IC5TBk2GkOjC1F845rY\
E0NUJ6z8ajwWjgmxKY/oLdGxfYWea1xwaS8FWPmv3NC3gsb7AD6ZwaoVCnI2DL//NeDy+\
KDPKBM5x0qvVFcF/cuoPoB1iSVRxOXeL+9MGdAom07PmvrCPdfGxseLmQBvEAw7y/+nH3+6YFR5Z9/\
fWB8l3/+8wGah9nqOWs7FJ11zd8ib1oAHjkHe8T05eyhDIOyFYnuYoeI53x1HrMYI1jwmIELeVYuRO\
SxPrdZfNE9ZiPxDFU8yxTPIMW0Q7HF9d0IuOPU3yitZDt+\
9vTImvKkmukyzWS7yI5mcjzmVDOlmun6aiY7pnCzNBOPyb7nminSVCeehrJXPFwV5f6f6qhUR10XHe\
UtSmZhQmTz6PXWUCNR5mFmWzlZy/HRtZMbSr3WSmr2UuUUcRn1OtM1O4YV7f/\
tyCgPHsalsPDptEk7H066GtnAeIJNvpB9k0nJPYpkpHRXAN4BRR3f6DbqYW3f0LvNtn4RVTITpRncP\
CLPvq/yOmmix00m5VdRXqebhnPzqJ99XwV50kSom0zKr6IgTz1N7eYxQO59leVJEwVvMilvqCy72I3\
f23OLJ/O/No+I1g/ubrgn6N0em0/vve4ZhLKNO7QRbWRFD+\
aJoZydARULNP9ZRxHZusHcc43iLnlG16NBUzE1n9q0eivc4OVT5BFHNHG36afRuygM164nqu1uzh1B\
QdnOY5kMr+RsYDefrGOMIDtA2HM3LhUP3Jmqt7GKRENX1ZbuStpVBi5ZG58pZiec5B+RiaH/\
LOGrHLF82angNBNNwpxarHA5jlQ6leI1p9DHBMtWALFMP4nX3KGvcrxmO7yOlRbHE9maPLpfOMKm2I\
mljHzdXmyqJjE0zLZZ+QOjwTUcKBgfx2dxiR57CcEavd+\
MVAurqjd0Matcs55og9g9caq8rZ7UItWi/\
txP5sRE08uilYYcSByNq18yMTvmT16NXTec5BpLh3bwBWHJtGwxI/tEZz7e/\
D5W1L5BnkVer5MAACWmb59VQsJGc0YU6mTMuViD6ds3CInPgDwFjzm4v60rmm/5lS1Xwt+\
nht1CwuGMLXTxh4DOQTsdluOdpfPMD7DPCViw8q9Zv1Ce7SNfkec9LzO/9/\
t98NQTWEDL0UczkwHx2YIs/JwMWMCaoIK919zKDJgBSty2lqL2XhOxbxK+OLwZY3HYlyueLhG/\
wyXiuG4hKhikq/s2td9m4jFyS7wl8LlJBD6qtWS03uv2zMFVW8sE2tRy+\
2L7PElczEhqC8qSVG2lauurpbayWJLerLNocZeofC+\
c4aovLr3xFVe8SV6AiYcmeUGm9vY2JJj8xvShvClYLuDG+\
UJqSSYOqNikItGkkKpCOeZ2j5bSaAjbmWcAJRXPdydsPuq+\
WeR8NmsanLWwS0ay1uIxuSAGJSspi70PLOYn89vmMfuMIT93FQBeylc3n69Cx0e9maP8HoOziOPtsf\
UY5GNB7w1WnF2WK6a+IqhKr61jQxpmmkxEn9TU7QO7HLgROUcEXFjzUSdxsd0ff88/4j1nz9/\
Q66gRa7fXCYJiUx+gkYwQIHwLeIt4lFe0lSfk1YpA+NEWUyN8NAqJ0CrH5+1Q3uo6J/2l3X4rlJ/\
6CHlWxc0IZ5s+9nFXUQdoCfFTDFcQ1uhKy9C9RXRWiG/DvhOs+Bk/l4/mWypWNK/\
4rnKhsLx36zQUr4Z75F0w+fz//pd9/sNLPp8Pn+UZOOrOS02ngcMr/Qv42dAC/lV0c4ml2O0YBJ+\
ztUtFGzrr078oGz594NKDQFmYltEsfNhnjJPPFCsI/8xd5vblLETjXErMfu+\
FQl7xmFO8syzyY1bVrd0/fDYXrxt8djryrIlocMxujz0u07kyW9bgW5TiVXfC+\
dHsub0UkmQNJHtZRkK83tq+o28tJ2Z/E53kEdl9tKqxN6n7OD33MSZH+\
4UyGadYrJb46Je4EszP6EmoDC1NeqWpLMMil+g0nA99lcAaGpTYLxZ9Lw7Q13+\
VaZoVTV9Rde2MGCtMYYBl/LUkrYYPKD4xMNu3aSeivqVEoAAKHwSOGbLO+\
A0flBRx9cTUezvY4E24pjAT0RR28TnhzosEIADAt3y17KLWsWCo33YsZhtoFs9opltV36XefBP3Z+\
Jxv03TWFqx3NZNcNQdNrWPwSrQgsV7QSdu7pj0VCySiNOvLt8Y7iYql8vhHFd59tomHtsqf4blNWLt\
nC/eBbabX+\
Oc6Vl2qrzJFkbor0deFy67ffXXj4Zsz12SGQUjyfKLC6cw0jOFqdyhJhqET8gmznmNuxYeZ1BjJUIG\
chhjj73d1ARpm4lIFb+HbzVlPOrUk9lbPvQG+FBxSBwxx9mBv6daXBvW/Za+\
YcfK9UDDGsJCWOG4IjG+zFgDklRfjwijhG8O8O+Q8N8N4L9RYHQgJXDDx/A2DV8ISVgaES+\
JGgQc1au7tk37zMC9HrEvAAteuTF3olt3nRXpR7vWzPql/W3fsuC/\
y8VOvcxxJo1rrm0YtrMdC4btqzgw8txDc4HEzoS0MXnBcvBjYnLhZtVbMA4SwOgEYRROuP/\
sQonvdVtwijuOj+OCSuQcWdDmfeor99YSORaBspqEDYndqxB11nQ1nrrLc1zvJxXCGefgIP/\
ZQsFe2Um99vbDeIm6wV1DC4JB4Onz50C1eNO9oShvJvRqfEQ20MwyW0m9INILbCi4rRJPN8fnBefUW\
geFZfv2CxdJ5JTI0K87usu9r9FRYt41RQvWRYgcrVBYeH5PUka+\
uGfVYX221SG108emdd3Hz5UCW1Z32FUrx4RCP2nymz+\
G8ECZP0hvs0xvs0wvonqfL6KadbVQYm1ULB2BwAONk19BVQkqtBV+edSKCLNbdq+\
dtEItpSLDPGCwekPuiKpWV2tbG5trtVp60WR60WR60WR60WR60WRq39+2fV9I7ftNsu8TdPZu6Qi/\
Vrr9LjsHZrIuj5wKDqM0ZmQW6quN9Y2NzfX6ZAOT+\
Tb66yu5mjR43pN74FP4xCf3yKcoZz6VUOYPp3mdp6EzgSASP9RnmpTMfvHHPxjx+CaNdPaLH/\
7VVzoy4ZRMrdz0ZrGF0pWYiWkpw2mplnwJ3ic35D9f4sHGgFw/\
0U3S1vXzUjpVTaeq6VT1Cqaqqb5P9X2q71N9n+\
r790Lfe2Gy8MTCI6obVPOBR4u2vLGZA8u5j7xajzK/B8XdGdDH44W6ya4FZpoRyrtqyvjwF/\
7u3x88/tpDmERZOsynuKa5QA6T0x9OTfXdK1l7i6xzcdmFxMn1YGZtimi1iCFCpzk1iESkqRuhfHVt\
bZXZn2+C/enZrRWddktoySEssKcpK6+v3gx9GIpoTEqO6tQw+6iE3ODjNUPtgxI6V3q9a8fBE/\
oU90dkr6S+ROpLpL7ETfQl7g0Lc7NYQUV35SXgSPzJf//PzN//+FueI1FBS6FlC9+oXuKAoB9lhE/\
scLUVrfaC1XasenSoenSketpXQFTQnaDBY37V9UZ5ug5iBS2HvS9hBh6GfZ8AFGth+LsAxS5WQR+\
M8BsEQOH+KKvNXtwdspms3SV7CdMxZ+\
g3YixIXpGzO8UFowkt8u1SC4vQ8dQUp6Y4NcU31hTf8klxM1dBt63/m4bYUS4I+v5UzQ/\
XmKctBminbwCnDT7/fNQlhZXqan11bbXHURnrF/zjT3/yD3/zW02//bhjYX+ENUUmVp6WnZ/\
PTJB9WbItGs3ZinV1EaNelHtOK/b1OBPfsjnccqJ7HF18Jr1FcBif6d5T5yI66S1pw4hO/\
R4uF9fJb4Giy76tKJyGgPaS/xkIMy1YShk4+67v1Qu+\
wh96CCX7oqs8nXu3GLquKhvRgDNg41oWckKmCe7ON8buD/GtKaUufOrCpy78JC78/wNd6qBO"}, 
                    "ClickToCopyTemplate"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {Automatic, Automatic, Fit}, 
                    "Rows" -> {{Automatic}}}], "Grid"], FontColor -> 
                   GrayLevel[0.5], FontSize -> 12, StripOnInput -> False]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "Columns" -> {{None}}, "RowsIndexed" -> {-1 -> GrayLevel[
                    Rational[239, 255]]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {Automatic, Fit}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {1, {}, 1}, "Rows" -> {1, {}, 2}}], "Grid"], 
              ImageMargins -> 0]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[
         CurrentValue[
          EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], Alignment -> 
        Automatic, ImageSize -> Automatic, ImageMargins -> 0, BaseStyle -> {},
         DefaultBaseStyle -> "OpenerView", BaselinePosition -> Baseline], 
       Deployed -> False, StripOnInput -> False], 
      OpenerView[{
        Grid[{{
           Style[
            Dynamic[
             DateString[
              TimeZoneConvert[
               DateObject[
               3.8667337636255108`17.339919259767075*^9, TimeZone -> 0]], {
              "MonthName", " ", "DayShort", ", ", "Year", " ", "Hour12Short", 
               ":", "Minute", " ", "AMPMLowerCase"}], SingleEvaluation -> 
             True, Evaluator -> "System"], FontSlant -> Italic, FontColor -> 
            GrayLevel[0.5], FontSize -> 0.9 Inherited], "   ", 
           
           Grid[{{"Paclet build completed successfully.", ""}}, Spacings -> 
            0.25], 
           RawBoxes[
            TemplateBox[{
              ButtonBox[
               TagBox[
                
                PaneSelectorBox[{
                 False -> 
                  "\"PeterBurbery__AssociationFunctions-1.5.0.paclet\"", True -> 
                  StyleBox[
                   "\"PeterBurbery__AssociationFunctions-1.5.0.paclet\"", 
                    "HyperlinkActive", StripOnInput -> False]}, 
                 Dynamic[
                  CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                 FrameMargins -> 0], 
                MouseAppearanceTag["LinkHand"]], ButtonFunction :> SystemOpen[
                 File[
                 "C:\\Users\\peter\\Documents\\GitHub\\association-functions\\\
Association Functions\\build\\"]], Appearance -> None, BaseStyle -> 
               "Hyperlink", Evaluator -> Automatic, Method -> "Preemptive"], 
              "OEM6eJxNjkEKwjAQRYkUEfQQ0n2LLty4a5XqwoW0unKkpHEigbYpmQT1DF7aRkT\
dfd77/BnJaJTzW6rvSJLRMNc+y4CCnSJbBJmqsWAnOaDxAZuu5ha9Zx//\
ZOFqCXAkNATQoUUDsNbCNdjanmyU3boKgBNpobhVuo2ka4UPvU5+eJr9cOVUfQHY+7nUmQrNoyz/\
ut9qNI8X8SzuuKjRhsXEf5uY6/t6wc4v7yVQDw=="}, "ClickToCopyTemplate"]], "", 
           MouseAppearance[
            Button[
             MouseAppearance[
              Mouseover[
               Graphics[{
                 GrayLevel[
                  Rational[64, 85]], 
                 
                 Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None], 
               Graphics[{
                 GrayLevel[
                  Rational[128, 255]], 
                 
                 Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None]], "LinkHand"], 
             
             With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
               EvaluationNotebook[]}, 
              CurrentValue[
               DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                DockedCells] = If[
                TrueQ[
                 MemberQ[
                  CurrentValue["ModifierKeys"], "Control"]], 
                DeleteCases[
                 Flatten[{
                   CurrentValue[
                   DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                 Cell[
                  Blank[], "StripeCell", 
                  BlankNullSequence[]]], 
                DeleteCases[
                 Flatten[{
                   CurrentValue[
                   DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                 Condition[
                  Pattern[DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                   Blank[Cell]], 
                  Not[
                   FreeQ[
                   DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "371232cf-d35a-4af8-b553-83f46dd03c35"]]]]]], Appearance -> 
             None, BoxID -> "371232cf-d35a-4af8-b553-83f46dd03c35"], 
            "LinkHand"]}}, 
         ItemSize -> {{Automatic, Automatic, Automatic, Fit, 8, Automatic}, 
           Automatic}, 
         Alignment -> {{Left, Left, Left, Right, Right, Right}, Baseline}], 
        Grid[{{"", 
           Style[
            Grid[{{"\[FilledVerySmallSquare]", "Build result: ", 
               RawBoxes[
                TemplateBox[{
                  TagBox[
                   RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"C:\\\\Users\\\\peter\\\\Documents\\\\GitHub\\\\\
association-functions\\\\Association \
Functions\\\\build\\\\PeterBurbery__AssociationFunctions-1.5.0.paclet\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"34.4900758`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"C:\\\\Users\\\\peter\\\\Documents\\\\GitHub\\\\\
association-functions\\\\Association \
Functions\\\\build\\\\PeterBurbery__AssociationFunctions-1.5.0.paclet\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"34.4900758`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletManifest\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TagBox[
                    
                    DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                    "InitialData" -> <|"Files" -> {<|
                    "File" -> File["Kernel\\AssociationFunctions.wl"], "Hash" -> 
                    "c4c653cc63ecea868cda5ad4f60359e19a3938b255fb8b2323eb1347e\
7f1cd05"|>, <|"File" -> 
                    File["Documentation\\English\\Guides\\\
AssociationFunctions.nb"], "Hash" -> 
                    "878dbc991b8c95dad2a336035d3f4f6ae0f6bd0343493be07cf015c9e\
f92f352"|>, <|"File" -> 
                    File["Documentation\\English\\ReferencePages\\Symbols\\\
LinearOptimizationInformation.nb"], "Hash" -> 
                    "e6bc926f52acd571bba9ab878178962786a327eb88354ff7e20ef5e9c\
28fae13"|>, <|"File" -> 
                    File["Documentation\\English\\ReferencePages\\Symbols\\\
QuadraticOptimizationInformation.nb"], "Hash" -> 
                    "d8b795ca5534c66a0de16e08a99213224fb58e8fd4adf075e39d0e141\
433fd28"|>}|>, "AllowEmbedding" -> True, "InitialShape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[4]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|
                    "File" -> TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 4, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "InitialType" -> 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 4], 1], "Meta" -> <||>, 
                    "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[4]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|
                    "File" -> TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 4, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 4], 1], "Path" -> {}, 
                    "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 2, 
                    "DataRowCount" -> 1, "DataColumnCount" -> 2, 
                    "SortPaths" -> {}, "SortDirections" -> {}, 
                    "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    Mouseover[
                    
                    Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                    Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^Rational[-1, 2]}, {-2^
                    Rational[-1, 2], 2^Rational[-1, 2]}, {-2^
                    Rational[-1, 2], -2^Rational[-1, 2]}}]}, ImageSize -> 6, 
                    BaselinePosition -> Scaled[-0.15]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, Keys}, "KeyDummy", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["File", 
                    Style[
                    "File", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "File"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "File"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Hash", 
                    Style[
                    "Hash", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "Hash"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "Hash"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Files", 
                    Style[
                    "Files", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Files"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel\\AssociationFunctions.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "c4c653cc63ecea868cda5ad4f60359e19a3938b255fb8b2323eb1347e\
7f1cd05", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation\\English\\Guides\\AssociationFunctions.nb"]\
, 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "878dbc991b8c95dad2a336035d3f4f6ae0f6bd0343493be07cf015c9e\
f92f352", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation\\English\\ReferencePages\\Symbols\\\
LinearOptimizationInformation.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "e6bc926f52acd571bba9ab878178962786a327eb88354ff7e20ef5e9c\
28fae13", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation\\English\\ReferencePages\\Symbols\\\
QuadraticOptimizationInformation.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "d8b795ca5534c66a0de16e08a99213224fb58e8fd4adf075e39d0e141\
433fd28", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}}, 
                    BaseStyle -> {ContextMenu -> Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                    Dividers -> All, FrameStyle -> 
                    GrayLevel[0.7490196078431373], Spacings -> {0, 0}, 
                    Alignment -> Left, BaseStyle -> {
                    FontFamily -> "Source Sans Pro", FontSize -> 14, 
                    FontWeight -> Plain}], LineBreakWithin -> False, 
                    ContextMenu -> {}, NumberMarks -> False, ShowAutoStyles -> 
                    False]], TypeSystem`NestedGrid`PackagePrivate`initialQ = 
                    True}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`SubViewPathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
                    Framed[
                    Dynamic[
                    Replace[
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                    Blank[]] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                    Pattern[
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                    Increment[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                    TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader = TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
                    FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
                    Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 
                    1], TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$\
}, 
                    DynamicWrapperBox[
                    DynamicBox[
                    ToBoxes[
                    Dataset`DatasetContent[
                    2, "Path" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
                    "Grid" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
                    "State" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    "VPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
                    "HPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
                    "TopBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                    "BottomBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                    "OutputID" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
                    StandardForm], TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                    MouseAnnotation[]], 
                    Initialization :> (
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                    CreateUUID[]), DynamicModuleValues :> {}, 
                    BaseStyle -> {LineBreakWithin -> False}, 
                    UnsavedVariables :> {
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}], 
                    Deploy, DefaultBaseStyle -> "Deploy"], 
                    Dataset`InterpretDataset[1], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"DocumentationBuildResults\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"11.3746033`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"11.3746033`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"MaximumFileTime\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    
                    TemplateBox[{"5.8244625`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], ",", 
                    "\"C:\\\\Users\\\\peter\\\\Documents\\\\GitHub\\\\\
association-functions\\\\Association \
Functions\\\\Documentation\\\\English\\\\ReferencePages\\\\Symbols\\\\\
QuadraticOptimizationInformation.nb\""}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFiles\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"\[LeftAssociation]", 
                    
                    RowBox[{
                    "\"C:\\\\Users\\\\peter\\\\Documents\\\\GitHub\\\\\
association-functions\\\\Association \
Functions\\\\Documentation\\\\English\\\\ReferencePages\\\\Symbols\\\\\
QuadraticOptimizationInformation.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"5.8244625`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Automatic}}}, AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"5.8244625`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Automatic}}}, AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], 
                    "\[RightAssociation]"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"FailedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PercentSucceeded\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"100.`", "\"%\"", "percent", "\"Percent\""}, 
                    "QuantityPostfix", SyntaxForm -> Mod], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SuccessfulFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SkippedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"DocumentationBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], "}"}],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"PacletBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   Short[#, 0.75]& ], 
                  "OEM6eJztPU1vG0l2ovghUZYt2eOZ3Z18KQx3kY+\
lIoqiRA0GsamWZClr2bRK9mQRBeNid7XYULOb6WrK5gYBskCQS5BDsnvcQ5Bb/\
kIuewiwiwAJkJySa7IIglwyQBAguU1eVX83Sbm7SdmSp3kQqe6qV6/qfdarV1Vyhs4f41c7+\
mtC5Ty9e6iZxOgZxMSmomvwWM7QwrHOCsg5mnusUFOepYUTfAZP0BzqiyKhFN1C/W4XG4MDgiWU+\
V05S5d3BxruKuKRLvVVwqrPutWziJj0zsmgRygxX+o9opXLNL+PVUqct/\
edt6TbJhICdEi5jPLHAH8AZW6dkG5PhYcWhhbgLF1qYY0gohLR1I1gm7ljQMNpJE/\
nHhmKFKzsfM8xIOxVgRZ3+qbpDMOC3SML7sf7ey1DuQAUXu4bumbuadIxoXrfEAkq7u/\
tKGYX9yhatgcGKj2FfhKDIc9Q2SUqHhCJ3rGa2O9rIhvxcaOTOzH6xO3GQrPXI9jAGgx+7omueW+\
KO5gSZA5UIs+E+l7cu8BqH8PI0GKzb+\
pdILHovi0cEbOjS2ihZRAYW1O58AFtqsqZ1iWa6QwoLQiEcYrz7RU97OIzgpTvERixOXvE3FqBdvMn\
SpdQY4Z/Fh+6T6DiotA3DAD8AhAm6PY+jK+AewdEOeswFPIt/RW0maH3m22qq32T+\
MvT20f4TFNkReQ8LHwJ5J7fN3CXEzVL5/nwMPbNl/7tRz8oAcDirmIAz7A+w/vjRzuCruqG8TX++\
ecHxgf887MHxu/wz788EL7h9ngRmYbSe6odar2+6XGx9fKOAKgDYi0sSYp2Fn69wNHi+\
ITouMjfHGHjTNGon43ZtzAjzIR/\
j8el4DG7AyfjfjuynQ3LdljI7KpoqdTCokrMpiF2YLxKKFf6ZKWEFgDOLpFxXzXRhzbPH5qk29Q03d\
IlKPvFn/2lT3f8aaYkfHJ6+pwCF52e9ghw0enpri72GZ/\
Bk0eKedBvn55iSnVR4SAqsi0l8LrpPV7Z9x63+\
4oqnZ62GLidvtEmxuDzz31l3aKV6mp9dW21xztTchUYw3mS4blVOoH+\
qoyREw8NtBaAnXNg1zZWN7bX1rbqjZcoW6IlNEeJqGsSRcUSsn6V0PyzPtZMxRx4XIYGmolf7+\
tGl2ZBHwc765RatplkSNadEmgOpKLf1ahvfCyxzj0mslcsB/\
0dLjNC5SywR6AHgVZhwViykWEYcmUSGZfhdqIj5LSKgCuYtEZuVZiN35hPU+dCmvo+\
6uivmChrZ0IH1LzING14iG496YNpNEBFnA+9uwOmCZQO6DSFMhWY9ajMQXN+\
sNROuOoVs0H2RO9dXwZYZjRRFY20dKrY5tgicEbIuKUsW/xOfAhB1WliHyJsfFInInUiEjgR+\
dSJSJ0IaWqdXbZ54QiDuBFqJu9x3td351dhxES0GJyIVpiaRAMKsF8+\
AQSIxDj9JWB1DlrIUdBlas1Bm/cq6NahBtYBq7vYxM1MBeX3FRghZ4ibsxWUY0/\
YqLBv9IvfIYZG1NNRLLT6SoXiB5h20ENxQ9ys10Rxs0ZEghubDVHCdSxtyJtrtfo2qW7j2nat0V6v1\
+U2fNXWa6RdrW1skS25Kkpr9eGWNxxZ4I2e7mlnqkI7p4/\
6ikToaHy0totPY6shtcXt7Wq7IW7XJSyt41qN4SLVZEAKkzV5sy2t1TZqG9u1NlnbEuW1al3cJvL2u\
lyrrw/jczQan2MiE1C9ImnBiNNTNOi2dZWePgZLjI2nYEe6yvd4jUNNBgbkP/\
2Ikk1Ac31Trq9jUapvVdttvI3bgH51q7G9ub7V2MS19S3SbjRq9Q1Z3iLra0Suk21xvSFjUq0NI9qK\
hShIi2QwixQBV6nR3tqui7herwG5N/GaRKqbZK2Bt7fXq7X19Q25XW+\
QhixtYEkGMSW1bWmNVDeqG7WaLK03KuhOU1X1V3ssMMLtAfdHKmjR5krUwT1mA37Fx9c2MyMRXIGXL\
EhDDF6sma04kkqzAJb/gUFYGVf3O2SwC7I4EPJCZkRVaxTHvGL9BzcqR39pHPTHMHggf4DAWOQtt8/\
p4zcvwdOy+7xghv7yuIJN8CV4ISPDfYjHD6eIYCRIY8caFKBFJB93vrkfwqc2q0XrNe/0H33/\
IZRethwYIgHnKsBLA/B6Z123yyWkkBtd1vPxWaHMmEK2Q+kpUYYiixf6UOV6Ceov+\
Z8BxrRgTYoAp7u+Vy94uC/\
0EEr2RdfZscbPHhcvCjLUgDPM41oWcsDbKAduLm7OVFARSHQC7hUxhfsggBbp7QcLYBdSUUxF8QaIY\
u4mymALmx2vC3d3Fdrjs2EglaD3Ya4Hhe67Ty1WsF4ADReZ6+\
YvucQehAoVkW6YrBnqtXOHPbMneuAt+V4cKJJENOah0iOYteee9FXw7Bae9yTwG1lXhAxdi+\
Zq6n0Tpl6Hu+Wy46N+\
O1rFHiALlWaCDm7EyhctnZbLPM4Rp1onWbUzeAioZuntgH8eXiWqRoIGLhmoUesdm4Pskp6qD2BCkL\
eiGHM0x185U1cvUJPj0xf4ZgEb+F7wphdsSn+\
k9ynRL4jBpvSPDNzrKCIdDoq48QqhcEksCRBDIlaJZNT4529/HIDqiUQRng0ekwui2iV/\
9oAFQlq6OjgDOL5wof1txTK4hpg/5shjVfiS/2+\
FQ4QvLy8VBVCE2pHamh6gaF2blETwMBoXlpGqiCzccs7jSquRKqk6tHegq1IC5TBk2GkOjC1F845rY\
E0NUJ6z8ajwWjgmxKY/oLdGxfYWea1xwaS8FWPmv3NC3gsb7AD6ZwaoVCnI2DL//NeDy+\
KDPKBM5x0qvVFcF/cuoPoB1iSVRxOXeL+9MGdAom07PmvrCPdfGxseLmQBvEAw7y/+nH3+6YFR5Z9/\
fWB8l3/+8wGah9nqOWs7FJ11zd8ib1oAHjkHe8T05eyhDIOyFYnuYoeI53x1HrMYI1jwmIELeVYuRO\
SxPrdZfNE9ZiPxDFU8yxTPIMW0Q7HF9d0IuOPU3yitZDt+\
9vTImvKkmukyzWS7yI5mcjzmVDOlmun6aiY7pnCzNBOPyb7nminSVCeehrJXPFwV5f6f6qhUR10XHe\
UtSmZhQmTz6PXWUCNR5mFmWzlZy/HRtZMbSr3WSmr2UuUUcRn1OtM1O4YV7f/\
tyCgPHsalsPDptEk7H066GtnAeIJNvpB9k0nJPYpkpHRXAN4BRR3f6DbqYW3f0LvNtn4RVTITpRncP\
CLPvq/yOmmix00m5VdRXqebhnPzqJ99XwV50kSom0zKr6IgTz1N7eYxQO59leVJEwVvMilvqCy72I3\
f23OLJ/O/No+I1g/ubrgn6N0em0/vve4ZhLKNO7QRbWRFD+\
aJoZydARULNP9ZRxHZusHcc43iLnlG16NBUzE1n9q0eivc4OVT5BFHNHG36afRuygM164nqu1uzh1B\
QdnOY5kMr+RsYDefrGOMIDtA2HM3LhUP3Jmqt7GKRENX1ZbuStpVBi5ZG58pZiec5B+RiaH/\
LOGrHLF82angNBNNwpxarHA5jlQ6leI1p9DHBMtWALFMP4nX3KGvcrxmO7yOlRbHE9maPLpfOMKm2I\
mljHzdXmyqJjE0zLZZ+QOjwTUcKBgfx2dxiR57CcEavd+\
MVAurqjd0Matcs55og9g9caq8rZ7UItWi/\
txP5sRE08uilYYcSByNq18yMTvmT16NXTec5BpLh3bwBWHJtGwxI/tEZz7e/\
D5W1L5BnkVer5MAACWmb59VQsJGc0YU6mTMuViD6ds3CInPgDwFjzm4v60rmm/5lS1Xwt+\
nht1CwuGMLXTxh4DOQTsdluOdpfPMD7DPCViw8q9Zv1Ce7SNfkec9LzO/9/\
t98NQTWEDL0UczkwHx2YIs/JwMWMCaoIK919zKDJgBSty2lqL2XhOxbxK+OLwZY3HYlyueLhG/\
wyXiuG4hKhikq/s2td9m4jFyS7wl8LlJBD6qtWS03uv2zMFVW8sE2tRy+\
2L7PElczEhqC8qSVG2lauurpbayWJLerLNocZeofC+\
c4aovLr3xFVe8SV6AiYcmeUGm9vY2JJj8xvShvClYLuDG+\
UJqSSYOqNikItGkkKpCOeZ2j5bSaAjbmWcAJRXPdydsPuq+\
WeR8NmsanLWwS0ay1uIxuSAGJSspi70PLOYn89vmMfuMIT93FQBeylc3n69Cx0e9maP8HoOziOPtsf\
UY5GNB7w1WnF2WK6a+IqhKr61jQxpmmkxEn9TU7QO7HLgROUcEXFjzUSdxsd0ff88/4j1nz9/\
Q66gRa7fXCYJiUx+gkYwQIHwLeIt4lFe0lSfk1YpA+NEWUyN8NAqJ0CrH5+1Q3uo6J/2l3X4rlJ/\
6CHlWxc0IZ5s+9nFXUQdoCfFTDFcQ1uhKy9C9RXRWiG/DvhOs+Bk/l4/mWypWNK/\
4rnKhsLx36zQUr4Z75F0w+fz//pd9/sNLPp8Pn+UZOOrOS02ngcMr/Qv42dAC/lV0c4ml2O0YBJ+\
ztUtFGzrr078oGz594NKDQFmYltEsfNhnjJPPFCsI/8xd5vblLETjXErMfu+\
FQl7xmFO8syzyY1bVrd0/fDYXrxt8djryrIlocMxujz0u07kyW9bgW5TiVXfC+\
dHsub0UkmQNJHtZRkK83tq+o28tJ2Z/E53kEdl9tKqxN6n7OD33MSZH+\
4UyGadYrJb46Je4EszP6EmoDC1NeqWpLMMil+g0nA99lcAaGpTYLxZ9Lw7Q13+\
VaZoVTV9Rde2MGCtMYYBl/LUkrYYPKD4xMNu3aSeivqVEoAAKHwSOGbLO+\
A0flBRx9cTUezvY4E24pjAT0RR28TnhzosEIADAt3y17KLWsWCo33YsZhtoFs9opltV36XefBP3Z+\
Jxv03TWFqx3NZNcNQdNrWPwSrQgsV7QSdu7pj0VCySiNOvLt8Y7iYql8vhHFd59tomHtsqf4blNWLt\
nC/eBbabX+\
Oc6Vl2qrzJFkbor0deFy67ffXXj4Zsz12SGQUjyfKLC6cw0jOFqdyhJhqET8gmznmNuxYeZ1BjJUIG\
chhjj73d1ARpm4lIFb+HbzVlPOrUk9lbPvQG+FBxSBwxx9mBv6daXBvW/Za+\
YcfK9UDDGsJCWOG4IjG+zFgDklRfjwijhG8O8O+Q8N8N4L9RYHQgJXDDx/A2DV8ISVgaES+\
JGgQc1au7tk37zMC9HrEvAAteuTF3olt3nRXpR7vWzPql/W3fsuC/\
y8VOvcxxJo1rrm0YtrMdC4btqzgw8txDc4HEzoS0MXnBcvBjYnLhZtVbMA4SwOgEYRROuP/\
sQonvdVtwijuOj+OCSuQcWdDmfeor99YSORaBspqEDYndqxB11nQ1nrrLc1zvJxXCGefgIP/\
ZQsFe2Um99vbDeIm6wV1DC4JB4Onz50C1eNO9oShvJvRqfEQ20MwyW0m9INILbCi4rRJPN8fnBefUW\
geFZfv2CxdJ5JTI0K87usu9r9FRYt41RQvWRYgcrVBYeH5PUka+\
uGfVYX221SG108emdd3Hz5UCW1Z32FUrx4RCP2nymz+\
G8ECZP0hvs0xvs0wvonqfL6KadbVQYm1ULB2BwAONk19BVQkqtBV+edSKCLNbdq+\
dtEItpSLDPGCwekPuiKpWV2tbG5trtVp60WR60WR60WR60WR60WRq39+2fV9I7ftNsu8TdPZu6Qi/\
Vrr9LjsHZrIuj5wKDqM0ZmQW6quN9Y2NzfX6ZAOT+\
Tb66yu5mjR43pN74FP4xCf3yKcoZz6VUOYPp3mdp6EzgSASP9RnmpTMfvHHPxjx+CaNdPaLH/\
7VVzoy4ZRMrdz0ZrGF0pWYiWkpw2mplnwJ3ic35D9f4sHGgFw/\
0U3S1vXzUjpVTaeq6VT1Cqaqqb5P9X2q71N9n+\
r790Lfe2Gy8MTCI6obVPOBR4u2vLGZA8u5j7xajzK/B8XdGdDH44W6ya4FZpoRyrtqyvjwF/\
7u3x88/tpDmERZOsynuKa5QA6T0x9OTfXdK1l7i6xzcdmFxMn1YGZtimi1iCFCpzk1iESkqRuhfHVt\
bZXZn2+C/enZrRWddktoySEssKcpK6+v3gx9GIpoTEqO6tQw+6iE3ODjNUPtgxI6V3q9a8fBE/\
oU90dkr6S+ROpLpL7ETfQl7g0Lc7NYQUV35SXgSPzJf//PzN//+FueI1FBS6FlC9+oXuKAoB9lhE/\
scLUVrfaC1XasenSoenSketpXQFTQnaDBY37V9UZ5ug5iBS2HvS9hBh6GfZ8AFGth+LsAxS5WQR+\
M8BsEQOH+KKvNXtwdspms3SV7CdMxZ+\
g3YixIXpGzO8UFowkt8u1SC4vQ8dQUp6Y4NcU31hTf8klxM1dBt63/m4bYUS4I+v5UzQ/\
XmKctBminbwCnDT7/fNQlhZXqan11bbXHURnrF/zjT3/yD3/zW02//bhjYX+ENUUmVp6WnZ/\
PTJB9WbItGs3ZinV1EaNelHtOK/b1OBPfsjnccqJ7HF18Jr1FcBif6d5T5yI66S1pw4hO/\
R4uF9fJb4Giy76tKJyGgPaS/xkIMy1YShk4+67v1Qu+\
wh96CCX7oqs8nXu3GLquKhvRgDNg41oWckKmCe7ON8buD/GtKaUufOrCpy78JC78/wNd6qBO"}, 
                 "ClickToCopyTemplate"]]}}, Alignment -> Left, 
             ItemSize -> {{Automatic, Automatic, Fit}, Automatic}], FontColor -> 
            GrayLevel[0.5], FontSize -> 12]}}, 
         ItemSize -> {{Automatic, Fit}, Automatic}, Alignment -> Left, 
         Dividers -> {None, {-1 -> GrayLevel[
              Rational[239, 255]]}}, Spacings -> {{1, {}, 1}, {1, {}, 2}}]}, 
       Dynamic[
        CurrentValue[
         EvaluationCell[], {TaggingRules, "StripeOpen"}, False]]]], "Text", 
     FontSize -> 12, FontColor -> GrayLevel[0.25], StripOnInput -> False]], 
   "StripeCell", CellFrameMargins -> {{20, 5}, {2, 2}}, 
   CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> GrayLevel[0.75]], 
  Cell[
   BoxData[
    StyleBox[
     InterpretationBox[
      StyleBox[
       PaneSelectorBox[{False -> GridBox[{{
             OpenerBox[
              Dynamic[
               CurrentValue[
                EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], 
              Appearance -> Automatic, Enabled -> Automatic, AutoAction -> 
              False, ContinuousAction -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.8667340241991282`17.339919289033556*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                   "System"], FontSlant -> Italic, FontColor -> 
                  GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                  False], "\"   \"", 
                 TagBox[
                  GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"\[Checkmark]\"", FontColor -> RGBColor[0, 
                    Rational[2, 3], 0], FontSize -> 16, FontWeight -> "Heavy",
                     StripOnInput -> False], "\"\"", 
                    "\"Your paclet resource is being published\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.25}}, "ColumnsIndexed" -> {2 -> 0.1}, 
                    "Rows" -> {{Automatic}}}], "Grid"], Annotation[#, 
                    
                    DefinitionNotebookClient`Stripes`PackagePrivate`$\
stripeText["Your paclet resource is being published"]]& ], "\"\""}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                 "\"\"", "\"\"", 
                 TagBox[
                  ButtonBox[
                   TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                   With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
                    EvaluationNotebook[]}, 
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells] = If[
                    TrueQ[
                    MemberQ[
                    CurrentValue["ModifierKeys"], "Control"]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Cell[
                    Blank[], "StripeCell", 
                    BlankNullSequence[]]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Condition[
                    Pattern[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    Blank[Cell]], 
                    Not[
                    FreeQ[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "0059fa8c-18e8-466a-a977-5e46bf0cf682"]]]]]], Appearance -> 
                   None, BoxID -> "0059fa8c-18e8-466a-a977-5e46bf0cf682", 
                   Evaluator -> Automatic, Method -> "Preemptive"], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left, Left, Right, Right, Right}, 
                 "Rows" -> {{Baseline}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {
                  Automatic, Automatic, Automatic, Fit, 8, Automatic}, 
                 "Rows" -> {{Automatic}}}], "Grid"]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             OpenerBox[
              Dynamic[
               CurrentValue[
                EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], 
              Appearance -> Automatic, Enabled -> Automatic, AutoAction -> 
              False, ContinuousAction -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.8667340241991282`17.339919289033556*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                   "System"], FontSlant -> Italic, FontColor -> 
                  GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                  False], "\"   \"", 
                 TagBox[
                  GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"\[Checkmark]\"", FontColor -> RGBColor[0, 
                    Rational[2, 3], 0], FontSize -> 16, FontWeight -> "Heavy",
                     StripOnInput -> False], "\"\"", 
                    "\"Your paclet resource is being published\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.25}}, "ColumnsIndexed" -> {2 -> 0.1}, 
                    "Rows" -> {{Automatic}}}], "Grid"], Annotation[#, 
                    
                    DefinitionNotebookClient`Stripes`PackagePrivate`$\
stripeText["Your paclet resource is being published"]]& ], "\"\""}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                 "\"\"", "\"\"", 
                 TagBox[
                  ButtonBox[
                   TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                   With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
                    EvaluationNotebook[]}, 
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells] = If[
                    TrueQ[
                    MemberQ[
                    CurrentValue["ModifierKeys"], "Control"]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Cell[
                    Blank[], "StripeCell", 
                    BlankNullSequence[]]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Condition[
                    Pattern[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    Blank[Cell]], 
                    Not[
                    FreeQ[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "0059fa8c-18e8-466a-a977-5e46bf0cf682"]]]]]], Appearance -> 
                   None, BoxID -> "0059fa8c-18e8-466a-a977-5e46bf0cf682", 
                   Evaluator -> Automatic, Method -> "Preemptive"], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left, Left, Right, Right, Right}, 
                 "Rows" -> {{Baseline}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {
                  Automatic, Automatic, Automatic, Fit, 8, Automatic}, 
                 "Rows" -> {{Automatic}}}], "Grid"]}, {"", 
             PaneBox[
              TagBox[
               GridBox[{{"\"\"", 
                  StyleBox[
                   TagBox[
                    
                    GridBox[{{
                    "\"\[FilledVerySmallSquare]\"", "\"Submission result:\"", 
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"ResourceType\"", "\": \""}, "RowDefault"],
                     "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Paclet\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"UUID\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"e0a702b8-7390-472e-b8a7-99a8cd7f5e4a\"", 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"ResourceType\"", "\": \""}, "RowDefault"],
                     "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Paclet\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"UUID\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"e0a702b8-7390-472e-b8a7-99a8cd7f5e4a\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Version\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"1.5.0\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"SubmissionID\"", "\": \""}, "RowDefault"],
                     "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"2036\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"DirectCreation\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["True", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Your paclet resource is being published\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ResourceSubmission\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    Short[#, 0.75]& ], 
                    "OEM6eJztWE9vG0UUj+\
u1HTuuG9ogBCdrFYE4uAppSxIuwdnEbaSmtTxuASGkjnff2iN2Z1czs0nNd+DElQPfCs7wAfgI8Gb/\
2VmnUnCC4OC9rLXv32/evPd+\
T3ZLcn1AL46CtyDdinzvlCsQoQBFFQs4fnZLsjoItIJrSOM5k8q9I6tDOsYvpEYi2wYpyQaJfJ+\
K6TOgDil965bl5vGUU5/ZZ4ETeaDN7+TmZQJKtobTECSoN0EIfHtbVnrUk5BJtzIp+\
CNwCMKB7W1SGaD/KepsDMEPPfyYIEwcl+W9PuVAwANbBeJyTGOAMLIgFVl7Kphz2Th717QTLarK+\
lGkVJaGRnqixO9HvZO+\
YOcI4U1PBFydcGcAMoiEDaTeOzliyqehJJtpYtDoJZ4ThAavoRyDR6fgyFYSohdxW2f8XdkxhiKC/\
BiNbhgCFZRj8o0XAZ9J6kdUAlFTD9y1wtnrJ+\
fUiyhmRta7kQp8vGI7l1bPQE0ChzT6AjC3ip3POe16bMx94CpLqKxaoCsle89UT306BsJ+\
AMxYLc1YbnUpbmXIfJBiLX6aX+\
Zf0LBpRUKg49cIGMjdHubXouEzYOOJhlDpBxcYsyS3uiMZeJGCeX1594yOOXOZHdew9Rde93pPUD++\
1LJcj9Ojy7di/v7zTyY6rB8zgTWjz4zywdMjK/ACIT6In18PxYP4+eNQfB0/vx1aH+YnbhIlWPiSn/\
IwUrMqToQtC6EjsD51HMbHRXEjhhXjKdxjM5acUTFmXM6XsX5ba9Za8fe7sVRnxZ75KeXvrLfLxd4u\
NllqSlpmVua6Qk1imF+0TdJAN8fg0shT5P205E8V+F3Og2SUkPKfP/4yNzrWzT61PVBmPju0/\
k2QVc1Xr06Pl0f0sQk7dG9nd7Tf2Xt0sNN5vLcLndE+\
3escHNB929lzn8BjWsCbZX4zTfFCp2QapIY1Fflczh0xaQrjObgzNQNxL+pc0bAN/\
QmnCCgoltW9FIxGGLfitbEsxrk+oCwqCamta/3aUa07/\
zzY3JwzCnNui0yCC90IfGxNcEjaek4VU7TxIkJiEdhg3y/\
IWjjYsWVxIjCpB0h5dsux6ylX9G3StEXTf7kMysMg/P8WwKa+\
E49x6AeSpWSWXHDJKuVaCZP9JwxseYFcmoGLo3tFwSsKXoKCaysKvmUKvgHeuvkaGwiBLA+\
5Zn728MnDndvD1DJJNPKZ1LBuksuqubvz6PPbw7VpJh1qCYjjLY8sZoBbvMMz5GGceMsD+\
tT8BtupHcbd0BZpc7WZbI8AR0Y7jEYekxNwbi+bFRPlyyPeykfArFhWm+\
lqM11tpktsprMtqbj0XbFTzbknzbTf9LrqFdfKB5f+AEvWomwhJKXvUD3/9+z+\
YjN3qx3SnKd5Uk3IukMMzbFk+\
zpM2SG1lOBIJaapjsY8YxdiaI7okNbl0Z7s6GicTlbyyTXn46wCkj/\
h6MhbqID1E4ddKbif2HzF1CRd2WQC5G831vbd"}, "ClickToCopyTemplate"]}, {
                    "\"\[FilledVerySmallSquare]\"", "\"Resource object:\"", 
                    TemplateBox[{
                    TagBox[
                    RowBox[{"ResourceObject", "[", 
                    ButtonBox[
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.015384615384615385`], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    19.29685914516449, 56.875006675720215`}, {
                    32.49997329711914, 64.49218791723251}, {45.70308744907379,
                     56.875006675720215`}, {32.49997329711914, 
                    49.257825434207916`}, {19.29685914516449, 
                    56.875006675720215`}}, {{21.328107476234436`, 
                    56.875006675720215`}, {32.49997329711914, 
                    63.32422015108166}, {43.671839118003845`, 
                    56.875006675720215`}, {32.49997329711914, 
                    50.42579283714326}, {21.328107476234436`, 
                    56.875006675720215`}}, {{33.00778537988663, 
                    33.26174482703209}, {33.00778537988663, 
                    48.496107310056686`}, {46.21089953184128, 
                    56.113288551568985`}, {46.21089953184128, 
                    40.87892606854439}, {33.00778537988663, 
                    33.26174482703209}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.7019607843137254, 0.6039215686274509, 0.788235294117647,
                     1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{31.992161214351654`, 33.26174482703209}, {
                    18.789047062397003`, 40.87892606854439}, {
                    18.789047062397003`, 56.113288551568985`}, {
                    31.992161214351654`, 48.496107310056686`}, {
                    31.992161214351654`, 33.26174482703209}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.403921568627451, 0.6745098039215687,
                     1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    17.77342289686203, 8.886764854192734}, {4.570308744907379,
                     16.503946095705032`}, {4.570308744907379, 
                    31.73830857872963}, {17.77342289686203, 
                    24.12112733721733}, {17.77342289686203, 
                    8.886764854192734}}, {{16.757798731327057`, 
                    10.664107143878937`}, {5.585932910442352, 
                    17.113319045306525`}, {5.585932910442352, 
                    29.960966289043427`}, {16.757798731327057`, 
                    23.511754387615838`}, {16.757798731327057`, 
                    10.664107143878937`}}, {{31.484349131584167`, 
                    32.50002670288086}, {18.281234979629517`, 
                    40.11720794439316}, {5.078120827674866, 
                    32.50002670288086}, {18.281234979629517`, 
                    24.88284546136856}, {31.484349131584167`, 
                    32.50002670288086}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.6352941176470588, 0.7333333333333333, 
                    0.8313725490196079, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{31.992161214351654`, 31.73830857872963}, {
                    18.789047062397003`, 24.12112733721733}, {
                    18.789047062397003`, 8.886764854192734}, {
                    31.992161214351654`, 16.503946095705032`}, {
                    31.992161214351654`, 31.73830857872963}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.2901960784313726, 0.40784313725490196`, 
                    0.5764705882352941, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    47.22652369737625, 8.886764854192734}, {47.22652369737625,
                     24.12112733721733}, {60.4296378493309, 
                    31.73830857872963}, {60.4296378493309, 
                    16.503946095705032`}, {47.22652369737625, 
                    8.886764854192734}}, {{48.242147862911224`, 
                    10.664107143878937`}, {48.242147862911224`, 
                    23.511754387615838`}, {59.41401368379593, 
                    29.960966289043427`}, {59.41401368379593, 
                    17.113319045306525`}, {48.242147862911224`, 
                    10.664107143878937`}}, {{33.515597462654114`, 
                    32.50002670288086}, {46.718711614608765`, 
                    40.11720794439316}, {59.921825766563416`, 
                    32.50002670288086}, {46.718711614608765`, 
                    24.88284546136856}, {33.515597462654114`, 
                    32.50002670288086}}}]}, {
                    FaceForm[
                    RGBColor[0.6, 0.6, 0.37254901960784315`, 1.]]}, 
                    StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{33.00778537988663, 31.73830857872963}, {
                    33.00778537988663, 16.503946095705032`}, {
                    46.21089953184128, 8.886764854192734}, {46.21089953184128,
                     24.12112733721733}, {33.00778537988663, 
                    31.73830857872963}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.396078431372549, 0.6039215686274509, 
                    0.30196078431372547`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgA2JWIGZiAIMz/8LFHBgYGs4xtDo6wPgJxpuLGj66g/iS
/w8agOQ9GbS94fwFZ3yWNuxzccCin+W/uxCQPnCrYaEDMr+wwd4DxOf+f9QQ
SDvYNvD5IPOXNRS4YNHfEP/PzA+Zv+vfHHck9XA+1Dy4eqh9GPrT/m3xRXJv
w+Z/ch5I/oHwEf6FqEeEB7p+hm//vI1BtAKbgwKY/m8P9rcfa40+iD7676Yb
NnmFfIcH9lj03/oXbIqp3szYilVNF8S//O+qK6Z8QJqexYVf9uj6ARROjv4=

                    "]]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{7.109369158744812, 32.50002670288086}, {
                    7.109369158744812, 31.097747524374427`}, {
                    5.972591313425198, 29.960966289043427`}, {
                    4.570308744907379, 29.960966289043427`}, {
                    3.168024481383867, 29.960966289043427`}, {
                    2.0312483310699463`, 31.097747524374427`}, {
                    2.0312483310699463`, 32.50002670288086}, {
                    2.0312483310699463`, 33.90230975568602}, {
                    3.168024481383867, 35.03908711671829}, {4.570308744907379,
                     35.03908711671829}, {5.972591313425198, 
                    35.03908711671829}, {7.109369158744812, 
                    33.90230975568602}, {7.109369158744812, 
                    32.50002670288086}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{20.82029539346695, 56.36719459295273}, {
                    20.82029539346695, 54.96491250872225}, {
                    19.683518032434677`, 53.828134179115295`}, {
                    18.281234979629517`, 53.828134179115295`}, {
                    16.878951926824357`, 53.828134179115295`}, {
                    15.742174565792084`, 54.96491250872225}, {
                    15.742174565792084`, 56.36719459295273}, {
                    15.742174565792084`, 57.76947716147055}, {
                    16.878951926824357`, 58.90625500679016}, {
                    18.281234979629517`, 58.90625500679016}, {
                    19.683518032434677`, 58.90625500679016}, {
                    20.82029539346695, 57.76947716147055}, {20.82029539346695,
                     56.36719459295273}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{20.82029539346695, 40.625020027160645`}, {
                    20.82029539346695, 39.222736974355485`}, {
                    19.683518032434677`, 38.08595961332321}, {
                    18.281234979629517`, 38.08595961332321}, {
                    16.878951926824357`, 38.08595961332321}, {
                    15.742174565792084`, 39.222736974355485`}, {
                    15.742174565792084`, 40.625020027160645`}, {
                    15.742174565792084`, 42.027303079965804`}, {
                    16.878951926824357`, 43.16408044099808}, {
                    18.281234979629517`, 43.16408044099808}, {
                    19.683518032434677`, 43.16408044099808}, {
                    20.82029539346695, 42.027303079965804`}, {
                    20.82029539346695, 40.625020027160645`}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{20.82029539346695, 24.375033378601074`}, {
                    20.82029539346695, 22.97275420009464}, {
                    19.683518032434677`, 21.83597296476364}, {
                    18.281234979629517`, 21.83597296476364}, {
                    16.878951926824357`, 21.83597296476364}, {
                    15.742174565792084`, 22.97275420009464}, {
                    15.742174565792084`, 24.375033378601074`}, {
                    15.742174565792084`, 25.777316431406234`}, {
                    16.878951926824357`, 26.914093792438507`}, {
                    18.281234979629517`, 26.914093792438507`}, {
                    19.683518032434677`, 26.914093792438507`}, {
                    20.82029539346695, 25.777316431406234`}, {
                    20.82029539346695, 24.375033378601074`}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{20.82029539346695, 8.63285881280899}, {
                    20.82029539346695, 7.230591257198739}, {
                    19.683518032434677`, 6.093798398971558}, {
                    18.281234979629517`, 6.093798398971558}, {
                    16.878951926824357`, 6.093798398971558}, {
                    15.742174565792084`, 7.230591257198739}, {
                    15.742174565792084`, 8.63285881280899}, {
                    15.742174565792084`, 10.035130242717969`}, {
                    16.878951926824357`, 11.171919226646423`}, {
                    18.281234979629517`, 11.171919226646423`}, {
                    19.683518032434677`, 11.171919226646423`}, {
                    20.82029539346695, 10.035130242717969`}, {
                    20.82029539346695, 8.63285881280899}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{35.03903371095657, 48.75001335144043}, {
                    35.03903371095657, 47.34773029863527}, {33.90225247562557,
                     46.210952937603}, {32.49997329711914, 46.210952937603}, {
                    31.09769024431398, 46.210952937603}, {29.960912883281708`,
                     47.34773029863527}, {29.960912883281708`, 
                    48.75001335144043}, {29.960912883281708`, 
                    50.15229543567091}, {31.09769024431398, 
                    51.28907376527786}, {32.49997329711914, 
                    51.28907376527786}, {33.90225247562557, 
                    51.28907376527786}, {35.03903371095657, 
                    50.15229543567091}, {35.03903371095657, 
                    48.75001335144043}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{35.03903371095657, 32.50002670288086}, {
                    35.03903371095657, 31.097747524374427`}, {
                    33.90225247562557, 29.960966289043427`}, {
                    32.49997329711914, 29.960966289043427`}, {
                    31.09769024431398, 29.960966289043427`}, {
                    29.960912883281708`, 31.097747524374427`}, {
                    29.960912883281708`, 32.50002670288086}, {
                    29.960912883281708`, 33.90230975568602}, {
                    31.09769024431398, 35.03908711671829}, {32.49997329711914,
                     35.03908711671829}, {33.90225247562557, 
                    35.03908711671829}, {35.03903371095657, 
                    33.90230975568602}, {35.03903371095657, 
                    32.50002670288086}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{35.03903371095657, 16.25004005432129}, {
                    35.03903371095657, 14.847760875814856`}, {
                    33.90225247562557, 13.710979640483856`}, {
                    32.49997329711914, 13.710979640483856`}, {
                    31.09769024431398, 13.710979640483856`}, {
                    29.960912883281708`, 14.847760875814856`}, {
                    29.960912883281708`, 16.25004005432129}, {
                    29.960912883281708`, 17.65232310712645}, {
                    31.09769024431398, 18.789100468158722`}, {
                    32.49997329711914, 18.789100468158722`}, {
                    33.90225247562557, 18.789100468158722`}, {
                    35.03903371095657, 17.65232310712645}, {35.03903371095657,
                     16.25004005432129}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{49.2577720284462, 56.36719459295273}, {
                    49.2577720284462, 54.96491250872225}, {48.1209907931152, 
                    53.828134179115295`}, {46.718711614608765`, 
                    53.828134179115295`}, {45.316428561803605`, 
                    53.828134179115295`}, {44.17965120077133, 
                    54.96491250872225}, {44.17965120077133, 
                    56.36719459295273}, {44.17965120077133, 
                    57.76947716147055}, {45.316428561803605`, 
                    58.90625500679016}, {46.718711614608765`, 
                    58.90625500679016}, {48.1209907931152, 
                    58.90625500679016}, {49.2577720284462, 
                    57.76947716147055}, {49.2577720284462, 
                    56.36719459295273}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{49.2577720284462, 40.625020027160645`}, {
                    49.2577720284462, 39.222736974355485`}, {48.1209907931152,
                     38.08595961332321}, {46.718711614608765`, 
                    38.08595961332321}, {45.316428561803605`, 
                    38.08595961332321}, {44.17965120077133, 
                    39.222736974355485`}, {44.17965120077133, 
                    40.625020027160645`}, {44.17965120077133, 
                    42.027303079965804`}, {45.316428561803605`, 
                    43.16408044099808}, {46.718711614608765`, 
                    43.16408044099808}, {48.1209907931152, 
                    43.16408044099808}, {49.2577720284462, 
                    42.027303079965804`}, {49.2577720284462, 
                    40.625020027160645`}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{49.2577720284462, 24.375033378601074`}, {
                    49.2577720284462, 22.97275420009464}, {48.1209907931152, 
                    21.83597296476364}, {46.718711614608765`, 
                    21.83597296476364}, {45.316428561803605`, 
                    21.83597296476364}, {44.17965120077133, 
                    22.97275420009464}, {44.17965120077133, 
                    24.375033378601074`}, {44.17965120077133, 
                    25.777316431406234`}, {45.316428561803605`, 
                    26.914093792438507`}, {46.718711614608765`, 
                    26.914093792438507`}, {48.1209907931152, 
                    26.914093792438507`}, {49.2577720284462, 
                    25.777316431406234`}, {49.2577720284462, 
                    24.375033378601074`}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{49.2577720284462, 8.63285881280899}, {
                    49.2577720284462, 7.230591257198739}, {48.1209907931152, 
                    6.093798398971558}, {46.718711614608765`, 
                    6.093798398971558}, {45.316428561803605`, 
                    6.093798398971558}, {44.17965120077133, 
                    7.230591257198739}, {44.17965120077133, 
                    8.63285881280899}, {44.17965120077133, 
                    10.035130242717969`}, {45.316428561803605`, 
                    11.171919226646423`}, {46.718711614608765`, 
                    11.171919226646423`}, {48.1209907931152, 
                    11.171919226646423`}, {49.2577720284462, 
                    10.035130242717969`}, {49.2577720284462, 
                    8.63285881280899}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{62.968698263168335`, 32.50002670288086}, {
                    62.968698263168335`, 31.097747524374427`}, {
                    61.83190540494115, 29.960966289043427`}, {
                    60.4296378493309, 29.960966289043427`}, {
                    59.027366419421924`, 29.960966289043427`}, {
                    57.89057743549347, 31.097747524374427`}, {
                    57.89057743549347, 32.50002670288086}, {57.89057743549347,
                     33.90230975568602}, {59.027366419421924`, 
                    35.03908711671829}, {60.4296378493309, 
                    35.03908711671829}, {61.83190540494115, 
                    35.03908711671829}, {62.968698263168335`, 
                    33.90230975568602}, {62.968698263168335`, 
                    32.50002670288086}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False]}, {
                    ImageSize -> 12, BaselinePosition -> Scaled[0.1], 
                    ImageSize -> {Automatic, 35}}], 
                    StyleBox[
                    RowBox[{"\"Peter\"", "\[Ellipsis]", "\"tions\""}], 
                    FontFamily -> Dynamic[
                    CurrentValue["PanelFontFamily"]], FontSize -> 
                    0.8 Inherited, ShowStringCharacters -> False, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.25}}, "Rows" -> {{0}}}], "Grid"], 
                    ButtonFunction :> {}, Evaluator -> None, Active -> False, 
                    Alignment -> Left, 
                    Appearance -> {
                    "Default" -> FrontEnd`FileName[{"Typeset", "SummaryBox"}, 
                    "Panel.9.png"]}, FrameMargins -> {{3, 3}, {3, 0}}, 
                    BaseStyle -> {Deployed -> False}, 
                    DefaultBaseStyle -> {Background -> None}, 
                    BaselinePosition -> Baseline, Method -> "Preemptive"], 
                    "]"}], Short[#, 0.75]& ], 
                    "OEM6eJztXGtsHNUVnl3v2vEzDwItFMqycSMVWD/\
jR4LQrr32OiZ2svWsgQq19Xj2rj1kd2eZOxvHPKIJtFX/tJVaQaXCj/\
AjKC2oQqWtVFDTpAqRmkZ9IdqSXyG0lEYVLaqKKJR179zX3Bk7WjuFOCvNlaXxN+eec8/\
97rn3nl0fOReAG6aUhWH9IIC5MNw8XjSBUTKAqZiaXkSvcwFYP6XbHXIhGJrQoJkLwvqMMofeyG1TA\
OplQwX7Zu8Hqik3y+VCQTEWdwMlKwfuy9XBTSOLRaWgqZN6tpwHtpUgt1InAxO2ZRZLAAJzRi+\
BYns7DKeUPARMupVJQWEWZGXkFWhvl8NTyP4i6tOcAYVSHr0kjhLDdXBjWikCGeSRS7rhHjM0hdxgg\
4Rhw5ihZd3K7NlgG7FF9bBxuGyajI0mOiNi94bUaNrQDiAXZlKGXjRHi1nGidyYGh3WzIJSgvImSgx\
S2ofmCQzbeduVEZBXFkEWtpEhUuWiahN/KXZCGaMM+\
DSahkoloBhKUQUwtFcvOpLGYQUC2VzMg5zkmXvj6AElX1YQM7BxqGzqBbTSKpfWTwJzXs/\
KTWkDIG5N7YBgdCivzRULoGgyQmF9EtgBw55O1/\
GCMgdk7UGAGGugjHEt17jhjFYA0JBwa0nwN0ixJVk2DGT4buQwkFtTiN+\
kUtoNtLl524VwWl9AYwbg1qFZqOfLJhD7w9ZJZa6o5TQVh3JyCa3pBkwJWbnmMUMpzWsqtOG1lKQAb\
Mygd/uLAEIj8t7hm987/M24SzHA6WxLafk8yKIxD2AJDZ2TUjBUJwUlKUB/qr/\
gqtuCYfRaereypzeBnoNSacJ+RpbiCfQ8EbBuTtv45cprqRXkVl56enfCq8+\
MnqvIfcuUzpw90Wx9b5+NX6m8OrpMPtPbq1j94wmvPjVq3bhkYc/OWU9jDxh+\
wIrbnlgnKzeMoWfiTqttQsTPWKWRhFefc4vOpJSigpRuFNChs2FqbDip53XDOIDbm3FDxu2NuLETt7\
/Fafj8M84jsEU2Da20rzheLJVNtuFXt5CBSywkF1BGxyofxoXJSx9WftkjTI5jOnnen5Lj1q86+\
W7cXo8b517DLW488bjd/vLRTv6ji+LmpZe77Wk215++xX6Glsa22Gv+\
VPBwl4jPBH4WTzj9rd7gzYMJrz4zev3SSax8Lpz5jP08W7nnuoT05PUPBm/qdrAkvRF4984E7w/\
enA4+NpDw6jOjeysPYQ/OS4kE9cxeOOtZaSNeyLcq+7auIJc+G7yAPXXpV13IDG5/\
jhsLuP01bjz5XbtdXNco5stAo5YvA8V8GVl/towu/aqT//\
a37Pb7uHEDbufiBmkXrtIotl6sPDUmTJ9hRo/1pUr/XoE+jik9bn1m9IXKp3cLUUwxj1IrV/\
nRpBDFFPMod+sLWyMhRunxyn1jYhSrlX9PriDnUezSr7qQvbihI5j/8qc/\
4rYuUcwuEr4MDLNloBcPX0aK+TK69KtO/vO4vSZcROSXVz7ayddfdhRfTuDXu88FepJav5a+\
MsRP1pneFwzrnTHhJLXGpdv2cHzk7MRR6/hIwqvPjNIzn1+ZDLMrkZ75/\
MpkmF2pLn229nTL8SSEbjmeZDDMkhDWnyUpLn1mlG5BNn2y5ZzpsS3Ipk/6O/S49b2JXaQ+\
EcFPkrhJe8MPd9pPlth55RE9cT7u1fcmdm6l/t5d4e0xG7PEzi1P5zoGf/t+3KtfNfR/\
ftxub8eNNG7n2e115uPb9wH0U0d/hH3fak/+YEW/UTzUCDYzH4SvjydObOt4/+\
03PiGcpCyACD5xatvgTfc2inJEjsT1OXbsY5w49eqFQ/9KCPp8l7CkBmNnfC7H/jF9r/+1Rv7rld/\
tsCd3h9SJdyvG6TvOJB59aE/C+tqzjR/8AIfrpHTxLkpOD8fWQqYSfL1LlKM8qpPrMyzYx/\
jgqdFdhy5MiPq3SuakaB9jYXwmx/4xfa//NUq+dExKj/DJnLjj1qOPPpUUJm/\
9VGpOCuQQ7JDH5Zhcpu+Qz+1jjCL3+4fqRkX9J6THR0X7GAvjMzn2j+l7/a9V8ruCM4POZMzM/vr/\
9IuRJwf/0CdGJsZC5DI5IZvqC+Qz+xgju32V0ztF/dbgxV2ifYyF8Zkc+\
8f0vf7XKvlb6kducSbzzOduivz9RnHyz7fMfFIkB2OBPCYnZFN9gXxmn+Dt93znv5vbRf2z4Xu3i/\
YxFsZncuIf1ff6X2PkW21LX8YXWUmawfkPxujYKDz6HMp7Tk8HH8EXm3VY+\
hROE9l3Uxgj8nYF8cXK5ehTyZ2OPsWOfYKfP/Xj+w9dMy7qf1E6Oi7aJ9gZn8qJf0zf63+tkk+\
zEYpZtsInL2YzDnbI43JCtpPtMPJZtoMxy1YE8lk2w8gn2CGfJc3YPyfbcftfq+\
QfCSa6nMm8dewnrT+MieR/NZy/\
TSQfY4F8JidkM32HfGqfYHScHK080y3qPxI80yPaJ9gZn8qJf0zf63+tkf9c5Qg+\
bmgqSDBPFU9PH3l4Iz4uWCrJvtzAGB0vL1nHUoLc+\
k3lupSQahIs2MeYpYqCPkslmX2CnfGpnPjnpJpu/\
2uUfJYKEsxTRT55nkqyb54wdshjckKuk2oy8rl9jFmqKOizVJLZJ9gZn8qJf06q6fa/\
VsmnqSDFLFV0Io+lkiwyMRYil8op2TzV5OQz+xizVFHQZ6kks0+wMz6VE/+\
cVNPtf62ST1NBilmq6EyepZKMHIwF8qicks1TTU4+s08wTRUFfZZKMvsEO+NTOfWPp5pu/\
2uMfDvvxn+ZZNkIwTRbSfxq+vxDF+3v7fi35PR7PJrt9N963HpM/\
BZdeqDyzoSY7RDs2MeYZztcn2cz7Kt9jJ3xeTaE/RO+23H5//GT3+D5Q3/zECwB1Zyy//\
ydDPDXoaGDADplFrSSYFhR988ZermY9VQShFOGUvCWFzThlxlN3Q+9hQdX4x/+\
V3BuuUfJbbxfa1JR5wGrD/BytSL59U4pSZ2zDnTBWQGNI2EFNBuiexGRuyJR+\
VpaITJugsJQsaiTAhy57h9fP+\
L095a8UIPytmgamMAYLhuzwFjsHIJQVzVsgBWUwKhcF41EvQaoj3Io+\
ouXorI6b5oluKuz06AlLLBjQc/\
n0Fqreb2c7VD1QmdaUfPAnAIlHWqmjgbjfTtBlzLQ1TM7GBvo3dkV2zHQA2Kzg8pAbOdOZVDNDuT6w\
A6lU27ZvVgCRl4r7p+\
empCbEDUjIKeU8071kE2BwFEwGvWKVkOsXTmzamJRfzIx91Co1zdeXNV4G6MjAKooLmzjqx92e5QvU\
CSnG5GCntVyi1pxLqI4awgv4RSOxk007JbV5rAecgM6X8qFIhROIBL7oQmQc7qF0NyW91mhRKjJfjU\
CEFnAuzU2Umewm8I2q+\
7L8nFW7xAbVS4pKqIOrnrUZHDtgwmVVSHPgbtVntcX7MOhOJecVwxFtSujvBQ17y0X0CadVIz9y2Rt\
aaRrpg2gatA+ueqcVcamF4umchCPvUz1Yw6DuoxeunoDYJO9JuhEAWn7UCLlc2SBA+\
LFh2vn1qXmL5nX4WXX/Hmvar/ozy/6c+R+0Z9f9Hf1lEv5RX9+0Z9f9OcX/flFf37Rn1/05xf9+UV/\
3D+/6M8v+vOL/vyiP7/ozy/6qzHy/aK/q4F8v+hvHck/4hf9XXny/aK/9SffL/pbT/L9or91JN8v+\
rvy5PtFf37RXy0W/TX6RX9+0d+\
VKPqr6lRLdA9YXNCNLFxLhFWJtcDtKJJuj8ptUbeLm5Eb92jmvAxKioHLi2BYntcN97rK0qo83xwd0\
dWyXWqkrInQS8U3iF6B0F6XDXQZ5G6N7jO0Oa2o5CNTIA8UuIZ90hrtGozcVc5Herp6eqKXt7QTaHG\
gGZkuZdEvaxm6u/f/G7o5ejcw4Jo2aEO0u2NHR/dlDbchOj09PrKWw2A1AbCSK375r1/+65f/Vi3/\
dTJSb2XtCimiYF5uoTvOrgnO5zy1u9e4/q8pSUFZ1a0c+AIa1fO/\
UYcaYnLIzvvkW6qmbainfYjI7as5GmJyCxvJnp5cT+6amNxAzz05jE+zmNwsZCty+\
2pykJi8xbmzJnSSW6O51dmX0AC79xYWFpbfePrs/\
c4ltwhRQHQqJa2zu6MrJjcRF9EnRPsDQ3PSVqL/QXa0qtG+HkXZ2T84GxtQETE7+\
rpzsdmcmo0NgIGu3EBPf9/AoHBYkf8Cq8zml8XqhtGstqJgC9Gx05ok+gyCNhMkteP/Axzte3I="},
                     "ClickToCopyTemplate"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {Automatic, Automatic, Fit}, 
                    "Rows" -> {{Automatic}}}], "Grid"], FontColor -> 
                   GrayLevel[0.5], FontSize -> 12, StripOnInput -> False]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "Columns" -> {{None}}, "RowsIndexed" -> {-1 -> GrayLevel[
                    Rational[239, 255]]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {Automatic, Fit}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {1, {}, 1}, "Rows" -> {1, {}, 2}}], "Grid"], 
              ImageMargins -> 0]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[
         CurrentValue[
          EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], Alignment -> 
        Automatic, ImageSize -> Automatic, ImageMargins -> 0, BaseStyle -> {},
         DefaultBaseStyle -> "OpenerView", BaselinePosition -> Baseline], 
       Deployed -> False, StripOnInput -> False], 
      OpenerView[{
        Grid[{{
           Style[
            Dynamic[
             DateString[
              TimeZoneConvert[
               DateObject[
               3.8667340241991282`17.339919289033556*^9, TimeZone -> 0]], {
              "MonthName", " ", "DayShort", ", ", "Year", " ", "Hour12Short", 
               ":", "Minute", " ", "AMPMLowerCase"}], SingleEvaluation -> 
             True, Evaluator -> "System"], FontSlant -> Italic, FontColor -> 
            GrayLevel[0.5], FontSize -> 0.9 Inherited], "   ", 
           Grid[{{
              Annotation[
               Grid[{{
                  Style["\[Checkmark]", FontColor -> RGBColor[0, 
                    Rational[2, 3], 0], FontSize -> 16, FontWeight -> 
                   "Heavy"], "", "Your paclet resource is being published"}}, 
                Alignment -> {Left, Center}, 
                Spacings -> {{0.25, 2 -> 0.1}, Automatic}], 
               DefinitionNotebookClient`Stripes`PackagePrivate`$stripeText[
               "Your paclet resource is being published"]], ""}}, Spacings -> 
            0.25], "", "", 
           MouseAppearance[
            Button[
             MouseAppearance[
              Mouseover[
               Graphics[{
                 GrayLevel[
                  Rational[64, 85]], 
                 
                 Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None], 
               Graphics[{
                 GrayLevel[
                  Rational[128, 255]], 
                 
                 Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None]], "LinkHand"], 
             
             With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
               EvaluationNotebook[]}, 
              CurrentValue[
               DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                DockedCells] = If[
                TrueQ[
                 MemberQ[
                  CurrentValue["ModifierKeys"], "Control"]], 
                DeleteCases[
                 Flatten[{
                   CurrentValue[
                   DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                 Cell[
                  Blank[], "StripeCell", 
                  BlankNullSequence[]]], 
                DeleteCases[
                 Flatten[{
                   CurrentValue[
                   DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                 Condition[
                  Pattern[DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                   Blank[Cell]], 
                  Not[
                   FreeQ[
                   DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "0059fa8c-18e8-466a-a977-5e46bf0cf682"]]]]]], Appearance -> 
             None, BoxID -> "0059fa8c-18e8-466a-a977-5e46bf0cf682"], 
            "LinkHand"]}}, 
         ItemSize -> {{Automatic, Automatic, Automatic, Fit, 8, Automatic}, 
           Automatic}, 
         Alignment -> {{Left, Left, Left, Right, Right, Right}, Baseline}], 
        Grid[{{"", 
           Style[
            Grid[{{"\[FilledVerySmallSquare]", "Submission result:", 
               RawBoxes[
                TemplateBox[{
                  TagBox[
                   RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"ResourceType\"", "\": \""}, "RowDefault"],
                     "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Paclet\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"UUID\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"e0a702b8-7390-472e-b8a7-99a8cd7f5e4a\"", 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"ResourceType\"", "\": \""}, "RowDefault"],
                     "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Paclet\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"UUID\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"e0a702b8-7390-472e-b8a7-99a8cd7f5e4a\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Version\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"1.5.0\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"SubmissionID\"", "\": \""}, "RowDefault"],
                     "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"2036\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"DirectCreation\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["True", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Your paclet resource is being published\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ResourceSubmission\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   Short[#, 0.75]& ], 
                  "OEM6eJztWE9vG0UUj+\
u1HTuuG9ogBCdrFYE4uAppSxIuwdnEbaSmtTxuASGkjnff2iN2Z1czs0nNd+DElQPfCs7wAfgI8Gb/\
2VmnUnCC4OC9rLXv32/evPd+\
T3ZLcn1AL46CtyDdinzvlCsQoQBFFQs4fnZLsjoItIJrSOM5k8q9I6tDOsYvpEYi2wYpyQaJfJ+\
K6TOgDil965bl5vGUU5/ZZ4ETeaDN7+TmZQJKtobTECSoN0EIfHtbVnrUk5BJtzIp+\
CNwCMKB7W1SGaD/KepsDMEPPfyYIEwcl+W9PuVAwANbBeJyTGOAMLIgFVl7Kphz2Th717QTLarK+\
lGkVJaGRnqixO9HvZO+\
YOcI4U1PBFydcGcAMoiEDaTeOzliyqehJJtpYtDoJZ4ThAavoRyDR6fgyFYSohdxW2f8XdkxhiKC/\
BiNbhgCFZRj8o0XAZ9J6kdUAlFTD9y1wtnrJ+\
fUiyhmRta7kQp8vGI7l1bPQE0ChzT6AjC3ip3POe16bMx94CpLqKxaoCsle89UT306BsJ+\
AMxYLc1YbnUpbmXIfJBiLX6aX+\
Zf0LBpRUKg49cIGMjdHubXouEzYOOJhlDpBxcYsyS3uiMZeJGCeX1594yOOXOZHdew9Rde93pPUD++\
1LJcj9Ojy7di/v7zTyY6rB8zgTWjz4zywdMjK/ACIT6In18PxYP4+eNQfB0/vx1aH+YnbhIlWPiSn/\
IwUrMqToQtC6EjsD51HMbHRXEjhhXjKdxjM5acUTFmXM6XsX5ba9Za8fe7sVRnxZ75KeXvrLfLxd4u\
NllqSlpmVua6Qk1imF+0TdJAN8fg0shT5P205E8V+F3Og2SUkPKfP/4yNzrWzT61PVBmPju0/\
k2QVc1Xr06Pl0f0sQk7dG9nd7Tf2Xt0sNN5vLcLndE+\
3escHNB929lzn8BjWsCbZX4zTfFCp2QapIY1Fflczh0xaQrjObgzNQNxL+pc0bAN/\
QmnCCgoltW9FIxGGLfitbEsxrk+oCwqCamta/3aUa07/\
zzY3JwzCnNui0yCC90IfGxNcEjaek4VU7TxIkJiEdhg3y/\
IWjjYsWVxIjCpB0h5dsux6ylX9G3StEXTf7kMysMg/P8WwKa+\
E49x6AeSpWSWXHDJKuVaCZP9JwxseYFcmoGLo3tFwSsKXoKCaysKvmUKvgHeuvkaGwiBLA+\
5Zn728MnDndvD1DJJNPKZ1LBuksuqubvz6PPbw7VpJh1qCYjjLY8sZoBbvMMz5GGceMsD+\
tT8BtupHcbd0BZpc7WZbI8AR0Y7jEYekxNwbi+bFRPlyyPeykfArFhWm+\
lqM11tpktsprMtqbj0XbFTzbknzbTf9LrqFdfKB5f+AEvWomwhJKXvUD3/9+z+\
YjN3qx3SnKd5Uk3IukMMzbFk+\
zpM2SG1lOBIJaapjsY8YxdiaI7okNbl0Z7s6GicTlbyyTXn46wCkj/\
h6MhbqID1E4ddKbif2HzF1CRd2WQC5G831vbd"}, "ClickToCopyTemplate"]]}, {
              "\[FilledVerySmallSquare]", "Resource object:", 
               RawBoxes[
                TemplateBox[{
                  TagBox[
                   RowBox[{"ResourceObject", "[", 
                    ButtonBox[
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.015384615384615385`], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    19.29685914516449, 56.875006675720215`}, {
                    32.49997329711914, 64.49218791723251}, {45.70308744907379,
                     56.875006675720215`}, {32.49997329711914, 
                    49.257825434207916`}, {19.29685914516449, 
                    56.875006675720215`}}, {{21.328107476234436`, 
                    56.875006675720215`}, {32.49997329711914, 
                    63.32422015108166}, {43.671839118003845`, 
                    56.875006675720215`}, {32.49997329711914, 
                    50.42579283714326}, {21.328107476234436`, 
                    56.875006675720215`}}, {{33.00778537988663, 
                    33.26174482703209}, {33.00778537988663, 
                    48.496107310056686`}, {46.21089953184128, 
                    56.113288551568985`}, {46.21089953184128, 
                    40.87892606854439}, {33.00778537988663, 
                    33.26174482703209}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.7019607843137254, 0.6039215686274509, 0.788235294117647,
                     1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{31.992161214351654`, 33.26174482703209}, {
                    18.789047062397003`, 40.87892606854439}, {
                    18.789047062397003`, 56.113288551568985`}, {
                    31.992161214351654`, 48.496107310056686`}, {
                    31.992161214351654`, 33.26174482703209}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.403921568627451, 0.6745098039215687,
                     1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    17.77342289686203, 8.886764854192734}, {4.570308744907379,
                     16.503946095705032`}, {4.570308744907379, 
                    31.73830857872963}, {17.77342289686203, 
                    24.12112733721733}, {17.77342289686203, 
                    8.886764854192734}}, {{16.757798731327057`, 
                    10.664107143878937`}, {5.585932910442352, 
                    17.113319045306525`}, {5.585932910442352, 
                    29.960966289043427`}, {16.757798731327057`, 
                    23.511754387615838`}, {16.757798731327057`, 
                    10.664107143878937`}}, {{31.484349131584167`, 
                    32.50002670288086}, {18.281234979629517`, 
                    40.11720794439316}, {5.078120827674866, 
                    32.50002670288086}, {18.281234979629517`, 
                    24.88284546136856}, {31.484349131584167`, 
                    32.50002670288086}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.6352941176470588, 0.7333333333333333, 
                    0.8313725490196079, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{31.992161214351654`, 31.73830857872963}, {
                    18.789047062397003`, 24.12112733721733}, {
                    18.789047062397003`, 8.886764854192734}, {
                    31.992161214351654`, 16.503946095705032`}, {
                    31.992161214351654`, 31.73830857872963}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.2901960784313726, 0.40784313725490196`, 
                    0.5764705882352941, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    47.22652369737625, 8.886764854192734}, {47.22652369737625,
                     24.12112733721733}, {60.4296378493309, 
                    31.73830857872963}, {60.4296378493309, 
                    16.503946095705032`}, {47.22652369737625, 
                    8.886764854192734}}, {{48.242147862911224`, 
                    10.664107143878937`}, {48.242147862911224`, 
                    23.511754387615838`}, {59.41401368379593, 
                    29.960966289043427`}, {59.41401368379593, 
                    17.113319045306525`}, {48.242147862911224`, 
                    10.664107143878937`}}, {{33.515597462654114`, 
                    32.50002670288086}, {46.718711614608765`, 
                    40.11720794439316}, {59.921825766563416`, 
                    32.50002670288086}, {46.718711614608765`, 
                    24.88284546136856}, {33.515597462654114`, 
                    32.50002670288086}}}]}, {
                    FaceForm[
                    RGBColor[0.6, 0.6, 0.37254901960784315`, 1.]]}, 
                    StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{33.00778537988663, 31.73830857872963}, {
                    33.00778537988663, 16.503946095705032`}, {
                    46.21089953184128, 8.886764854192734}, {46.21089953184128,
                     24.12112733721733}, {33.00778537988663, 
                    31.73830857872963}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.396078431372549, 0.6039215686274509, 
                    0.30196078431372547`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgA2JWIGZiAIMz/8LFHBgYGs4xtDo6wPgJxpuLGj66g/iS
/w8agOQ9GbS94fwFZ3yWNuxzccCin+W/uxCQPnCrYaEDMr+wwd4DxOf+f9QQ
SDvYNvD5IPOXNRS4YNHfEP/PzA+Zv+vfHHck9XA+1Dy4eqh9GPrT/m3xRXJv
w+Z/ch5I/oHwEf6FqEeEB7p+hm//vI1BtAKbgwKY/m8P9rcfa40+iD7676Yb
NnmFfIcH9lj03/oXbIqp3szYilVNF8S//O+qK6Z8QJqexYVf9uj6ARROjv4=

                    "]]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{7.109369158744812, 32.50002670288086}, {
                    7.109369158744812, 31.097747524374427`}, {
                    5.972591313425198, 29.960966289043427`}, {
                    4.570308744907379, 29.960966289043427`}, {
                    3.168024481383867, 29.960966289043427`}, {
                    2.0312483310699463`, 31.097747524374427`}, {
                    2.0312483310699463`, 32.50002670288086}, {
                    2.0312483310699463`, 33.90230975568602}, {
                    3.168024481383867, 35.03908711671829}, {4.570308744907379,
                     35.03908711671829}, {5.972591313425198, 
                    35.03908711671829}, {7.109369158744812, 
                    33.90230975568602}, {7.109369158744812, 
                    32.50002670288086}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{20.82029539346695, 56.36719459295273}, {
                    20.82029539346695, 54.96491250872225}, {
                    19.683518032434677`, 53.828134179115295`}, {
                    18.281234979629517`, 53.828134179115295`}, {
                    16.878951926824357`, 53.828134179115295`}, {
                    15.742174565792084`, 54.96491250872225}, {
                    15.742174565792084`, 56.36719459295273}, {
                    15.742174565792084`, 57.76947716147055}, {
                    16.878951926824357`, 58.90625500679016}, {
                    18.281234979629517`, 58.90625500679016}, {
                    19.683518032434677`, 58.90625500679016}, {
                    20.82029539346695, 57.76947716147055}, {20.82029539346695,
                     56.36719459295273}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{20.82029539346695, 40.625020027160645`}, {
                    20.82029539346695, 39.222736974355485`}, {
                    19.683518032434677`, 38.08595961332321}, {
                    18.281234979629517`, 38.08595961332321}, {
                    16.878951926824357`, 38.08595961332321}, {
                    15.742174565792084`, 39.222736974355485`}, {
                    15.742174565792084`, 40.625020027160645`}, {
                    15.742174565792084`, 42.027303079965804`}, {
                    16.878951926824357`, 43.16408044099808}, {
                    18.281234979629517`, 43.16408044099808}, {
                    19.683518032434677`, 43.16408044099808}, {
                    20.82029539346695, 42.027303079965804`}, {
                    20.82029539346695, 40.625020027160645`}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{20.82029539346695, 24.375033378601074`}, {
                    20.82029539346695, 22.97275420009464}, {
                    19.683518032434677`, 21.83597296476364}, {
                    18.281234979629517`, 21.83597296476364}, {
                    16.878951926824357`, 21.83597296476364}, {
                    15.742174565792084`, 22.97275420009464}, {
                    15.742174565792084`, 24.375033378601074`}, {
                    15.742174565792084`, 25.777316431406234`}, {
                    16.878951926824357`, 26.914093792438507`}, {
                    18.281234979629517`, 26.914093792438507`}, {
                    19.683518032434677`, 26.914093792438507`}, {
                    20.82029539346695, 25.777316431406234`}, {
                    20.82029539346695, 24.375033378601074`}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{20.82029539346695, 8.63285881280899}, {
                    20.82029539346695, 7.230591257198739}, {
                    19.683518032434677`, 6.093798398971558}, {
                    18.281234979629517`, 6.093798398971558}, {
                    16.878951926824357`, 6.093798398971558}, {
                    15.742174565792084`, 7.230591257198739}, {
                    15.742174565792084`, 8.63285881280899}, {
                    15.742174565792084`, 10.035130242717969`}, {
                    16.878951926824357`, 11.171919226646423`}, {
                    18.281234979629517`, 11.171919226646423`}, {
                    19.683518032434677`, 11.171919226646423`}, {
                    20.82029539346695, 10.035130242717969`}, {
                    20.82029539346695, 8.63285881280899}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{35.03903371095657, 48.75001335144043}, {
                    35.03903371095657, 47.34773029863527}, {33.90225247562557,
                     46.210952937603}, {32.49997329711914, 46.210952937603}, {
                    31.09769024431398, 46.210952937603}, {29.960912883281708`,
                     47.34773029863527}, {29.960912883281708`, 
                    48.75001335144043}, {29.960912883281708`, 
                    50.15229543567091}, {31.09769024431398, 
                    51.28907376527786}, {32.49997329711914, 
                    51.28907376527786}, {33.90225247562557, 
                    51.28907376527786}, {35.03903371095657, 
                    50.15229543567091}, {35.03903371095657, 
                    48.75001335144043}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{35.03903371095657, 32.50002670288086}, {
                    35.03903371095657, 31.097747524374427`}, {
                    33.90225247562557, 29.960966289043427`}, {
                    32.49997329711914, 29.960966289043427`}, {
                    31.09769024431398, 29.960966289043427`}, {
                    29.960912883281708`, 31.097747524374427`}, {
                    29.960912883281708`, 32.50002670288086}, {
                    29.960912883281708`, 33.90230975568602}, {
                    31.09769024431398, 35.03908711671829}, {32.49997329711914,
                     35.03908711671829}, {33.90225247562557, 
                    35.03908711671829}, {35.03903371095657, 
                    33.90230975568602}, {35.03903371095657, 
                    32.50002670288086}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{35.03903371095657, 16.25004005432129}, {
                    35.03903371095657, 14.847760875814856`}, {
                    33.90225247562557, 13.710979640483856`}, {
                    32.49997329711914, 13.710979640483856`}, {
                    31.09769024431398, 13.710979640483856`}, {
                    29.960912883281708`, 14.847760875814856`}, {
                    29.960912883281708`, 16.25004005432129}, {
                    29.960912883281708`, 17.65232310712645}, {
                    31.09769024431398, 18.789100468158722`}, {
                    32.49997329711914, 18.789100468158722`}, {
                    33.90225247562557, 18.789100468158722`}, {
                    35.03903371095657, 17.65232310712645}, {35.03903371095657,
                     16.25004005432129}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{49.2577720284462, 56.36719459295273}, {
                    49.2577720284462, 54.96491250872225}, {48.1209907931152, 
                    53.828134179115295`}, {46.718711614608765`, 
                    53.828134179115295`}, {45.316428561803605`, 
                    53.828134179115295`}, {44.17965120077133, 
                    54.96491250872225}, {44.17965120077133, 
                    56.36719459295273}, {44.17965120077133, 
                    57.76947716147055}, {45.316428561803605`, 
                    58.90625500679016}, {46.718711614608765`, 
                    58.90625500679016}, {48.1209907931152, 
                    58.90625500679016}, {49.2577720284462, 
                    57.76947716147055}, {49.2577720284462, 
                    56.36719459295273}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{49.2577720284462, 40.625020027160645`}, {
                    49.2577720284462, 39.222736974355485`}, {48.1209907931152,
                     38.08595961332321}, {46.718711614608765`, 
                    38.08595961332321}, {45.316428561803605`, 
                    38.08595961332321}, {44.17965120077133, 
                    39.222736974355485`}, {44.17965120077133, 
                    40.625020027160645`}, {44.17965120077133, 
                    42.027303079965804`}, {45.316428561803605`, 
                    43.16408044099808}, {46.718711614608765`, 
                    43.16408044099808}, {48.1209907931152, 
                    43.16408044099808}, {49.2577720284462, 
                    42.027303079965804`}, {49.2577720284462, 
                    40.625020027160645`}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{49.2577720284462, 24.375033378601074`}, {
                    49.2577720284462, 22.97275420009464}, {48.1209907931152, 
                    21.83597296476364}, {46.718711614608765`, 
                    21.83597296476364}, {45.316428561803605`, 
                    21.83597296476364}, {44.17965120077133, 
                    22.97275420009464}, {44.17965120077133, 
                    24.375033378601074`}, {44.17965120077133, 
                    25.777316431406234`}, {45.316428561803605`, 
                    26.914093792438507`}, {46.718711614608765`, 
                    26.914093792438507`}, {48.1209907931152, 
                    26.914093792438507`}, {49.2577720284462, 
                    25.777316431406234`}, {49.2577720284462, 
                    24.375033378601074`}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{49.2577720284462, 8.63285881280899}, {
                    49.2577720284462, 7.230591257198739}, {48.1209907931152, 
                    6.093798398971558}, {46.718711614608765`, 
                    6.093798398971558}, {45.316428561803605`, 
                    6.093798398971558}, {44.17965120077133, 
                    7.230591257198739}, {44.17965120077133, 
                    8.63285881280899}, {44.17965120077133, 
                    10.035130242717969`}, {45.316428561803605`, 
                    11.171919226646423`}, {46.718711614608765`, 
                    11.171919226646423`}, {48.1209907931152, 
                    11.171919226646423`}, {49.2577720284462, 
                    10.035130242717969`}, {49.2577720284462, 
                    8.63285881280899}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{62.968698263168335`, 32.50002670288086}, {
                    62.968698263168335`, 31.097747524374427`}, {
                    61.83190540494115, 29.960966289043427`}, {
                    60.4296378493309, 29.960966289043427`}, {
                    59.027366419421924`, 29.960966289043427`}, {
                    57.89057743549347, 31.097747524374427`}, {
                    57.89057743549347, 32.50002670288086}, {57.89057743549347,
                     33.90230975568602}, {59.027366419421924`, 
                    35.03908711671829}, {60.4296378493309, 
                    35.03908711671829}, {61.83190540494115, 
                    35.03908711671829}, {62.968698263168335`, 
                    33.90230975568602}, {62.968698263168335`, 
                    32.50002670288086}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.5098039215686274, 
                    0.20784313725490197`, 1.]]}, StripOnInput -> False]}, {
                    ImageSize -> 12, BaselinePosition -> Scaled[0.1], 
                    ImageSize -> {Automatic, 35}}], 
                    StyleBox[
                    RowBox[{"\"Peter\"", "\[Ellipsis]", "\"tions\""}], 
                    FontFamily -> Dynamic[
                    CurrentValue["PanelFontFamily"]], FontSize -> 
                    0.8 Inherited, ShowStringCharacters -> False, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.25}}, "Rows" -> {{0}}}], "Grid"], 
                    ButtonFunction :> {}, Evaluator -> None, Active -> False, 
                    Alignment -> Left, 
                    Appearance -> {
                    "Default" -> 
                    FrontEnd`FileName[{"Typeset", "SummaryBox"}, 
                    "Panel.9.png"]}, FrameMargins -> {{3, 3}, {3, 0}}, 
                    BaseStyle -> {Deployed -> False}, 
                    DefaultBaseStyle -> {Background -> None}, 
                    BaselinePosition -> Baseline, Method -> "Preemptive"], 
                    "]"}], Short[#, 0.75]& ], 
                  "OEM6eJztXGtsHNUVnl3v2vEzDwItFMqycSMVWD/\
jR4LQrr32OiZ2svWsgQq19Xj2rj1kd2eZOxvHPKIJtFX/tJVaQaXCj/\
AjKC2oQqWtVFDTpAqRmkZ9IdqSXyG0lEYVLaqKKJR179zX3Bk7WjuFOCvNlaXxN+eec8/\
97rn3nl0fOReAG6aUhWH9IIC5MNw8XjSBUTKAqZiaXkSvcwFYP6XbHXIhGJrQoJkLwvqMMofeyG1TA\
OplQwX7Zu8Hqik3y+VCQTEWdwMlKwfuy9XBTSOLRaWgqZN6tpwHtpUgt1InAxO2ZRZLAAJzRi+\
BYns7DKeUPARMupVJQWEWZGXkFWhvl8NTyP4i6tOcAYVSHr0kjhLDdXBjWikCGeSRS7rhHjM0hdxgg\
4Rhw5ihZd3K7NlgG7FF9bBxuGyajI0mOiNi94bUaNrQDiAXZlKGXjRHi1nGidyYGh3WzIJSgvImSgx\
S2ofmCQzbeduVEZBXFkEWtpEhUuWiahN/KXZCGaMM+\
DSahkoloBhKUQUwtFcvOpLGYQUC2VzMg5zkmXvj6AElX1YQM7BxqGzqBbTSKpfWTwJzXs/\
KTWkDIG5N7YBgdCivzRULoGgyQmF9EtgBw55O1/\
GCMgdk7UGAGGugjHEt17jhjFYA0JBwa0nwN0ixJVk2DGT4buQwkFtTiN+\
kUtoNtLl524VwWl9AYwbg1qFZqOfLJhD7w9ZJZa6o5TQVh3JyCa3pBkwJWbnmMUMpzWsqtOG1lKQAb\
Mygd/uLAEIj8t7hm987/M24SzHA6WxLafk8yKIxD2AJDZ2TUjBUJwUlKUB/qr/\
gqtuCYfRaereypzeBnoNSacJ+RpbiCfQ8EbBuTtv45cprqRXkVl56enfCq8+\
MnqvIfcuUzpw90Wx9b5+NX6m8OrpMPtPbq1j94wmvPjVq3bhkYc/OWU9jDxh+\
wIrbnlgnKzeMoWfiTqttQsTPWKWRhFefc4vOpJSigpRuFNChs2FqbDip53XDOIDbm3FDxu2NuLETt7\
/Fafj8M84jsEU2Da20rzheLJVNtuFXt5CBSywkF1BGxyofxoXJSx9WftkjTI5jOnnen5Lj1q86+\
W7cXo8b517DLW488bjd/vLRTv6ji+LmpZe77Wk215++xX6Glsa22Gv+\
VPBwl4jPBH4WTzj9rd7gzYMJrz4zev3SSax8Lpz5jP08W7nnuoT05PUPBm/qdrAkvRF4984E7w/\
enA4+NpDw6jOjeysPYQ/OS4kE9cxeOOtZaSNeyLcq+7auIJc+G7yAPXXpV13IDG5/\
jhsLuP01bjz5XbtdXNco5stAo5YvA8V8GVl/towu/aqT//\
a37Pb7uHEDbufiBmkXrtIotl6sPDUmTJ9hRo/1pUr/XoE+jik9bn1m9IXKp3cLUUwxj1IrV/\
nRpBDFFPMod+sLWyMhRunxyn1jYhSrlX9PriDnUezSr7qQvbihI5j/8qc/\
4rYuUcwuEr4MDLNloBcPX0aK+TK69KtO/vO4vSZcROSXVz7ayddfdhRfTuDXu88FepJav5a+\
MsRP1pneFwzrnTHhJLXGpdv2cHzk7MRR6/hIwqvPjNIzn1+ZDLMrkZ75/\
MpkmF2pLn229nTL8SSEbjmeZDDMkhDWnyUpLn1mlG5BNn2y5ZzpsS3Ipk/6O/S49b2JXaQ+\
EcFPkrhJe8MPd9pPlth55RE9cT7u1fcmdm6l/t5d4e0xG7PEzi1P5zoGf/t+3KtfNfR/\
ftxub8eNNG7n2e115uPb9wH0U0d/hH3fak/+YEW/UTzUCDYzH4SvjydObOt4/+\
03PiGcpCyACD5xatvgTfc2inJEjsT1OXbsY5w49eqFQ/9KCPp8l7CkBmNnfC7H/jF9r/+1Rv7rld/\
tsCd3h9SJdyvG6TvOJB59aE/C+tqzjR/8AIfrpHTxLkpOD8fWQqYSfL1LlKM8qpPrMyzYx/\
jgqdFdhy5MiPq3SuakaB9jYXwmx/4xfa//NUq+dExKj/DJnLjj1qOPPpUUJm/\
9VGpOCuQQ7JDH5Zhcpu+Qz+1jjCL3+4fqRkX9J6THR0X7GAvjMzn2j+l7/a9V8ruCM4POZMzM/vr/\
9IuRJwf/0CdGJsZC5DI5IZvqC+Qz+xgju32V0ztF/dbgxV2ifYyF8Zkc+\
8f0vf7XKvlb6kducSbzzOduivz9RnHyz7fMfFIkB2OBPCYnZFN9gXxmn+Dt93znv5vbRf2z4Xu3i/\
YxFsZncuIf1ff6X2PkW21LX8YXWUmawfkPxujYKDz6HMp7Tk8HH8EXm3VY+\
hROE9l3Uxgj8nYF8cXK5ehTyZ2OPsWOfYKfP/Xj+w9dMy7qf1E6Oi7aJ9gZn8qJf0zf63+tkk+\
zEYpZtsInL2YzDnbI43JCtpPtMPJZtoMxy1YE8lk2w8gn2CGfJc3YPyfbcftfq+\
QfCSa6nMm8dewnrT+MieR/NZy/\
TSQfY4F8JidkM32HfGqfYHScHK080y3qPxI80yPaJ9gZn8qJf0zf63+tkf9c5Qg+\
bmgqSDBPFU9PH3l4Iz4uWCrJvtzAGB0vL1nHUoLc+\
k3lupSQahIs2MeYpYqCPkslmX2CnfGpnPjnpJpu/\
2uUfJYKEsxTRT55nkqyb54wdshjckKuk2oy8rl9jFmqKOizVJLZJ9gZn8qJf06q6fa/\
VsmnqSDFLFV0Io+lkiwyMRYil8op2TzV5OQz+xizVFHQZ6kks0+wMz6VE/+\
cVNPtf62ST1NBilmq6EyepZKMHIwF8qicks1TTU4+s08wTRUFfZZKMvsEO+NTOfWPp5pu/\
2uMfDvvxn+ZZNkIwTRbSfxq+vxDF+3v7fi35PR7PJrt9N963HpM/\
BZdeqDyzoSY7RDs2MeYZztcn2cz7Kt9jJ3xeTaE/RO+23H5//GT3+D5Q3/zECwB1Zyy//\
ydDPDXoaGDADplFrSSYFhR988ZermY9VQShFOGUvCWFzThlxlN3Q+9hQdX4x/+\
V3BuuUfJbbxfa1JR5wGrD/BytSL59U4pSZ2zDnTBWQGNI2EFNBuiexGRuyJR+\
VpaITJugsJQsaiTAhy57h9fP+\
L095a8UIPytmgamMAYLhuzwFjsHIJQVzVsgBWUwKhcF41EvQaoj3Io+\
ouXorI6b5oluKuz06AlLLBjQc/\
n0Fqreb2c7VD1QmdaUfPAnAIlHWqmjgbjfTtBlzLQ1TM7GBvo3dkV2zHQA2Kzg8pAbOdOZVDNDuT6w\
A6lU27ZvVgCRl4r7p+\
empCbEDUjIKeU8071kE2BwFEwGvWKVkOsXTmzamJRfzIx91Co1zdeXNV4G6MjAKooLmzjqx92e5QvU\
CSnG5GCntVyi1pxLqI4awgv4RSOxk007JbV5rAecgM6X8qFIhROIBL7oQmQc7qF0NyW91mhRKjJfjU\
CEFnAuzU2Umewm8I2q+\
7L8nFW7xAbVS4pKqIOrnrUZHDtgwmVVSHPgbtVntcX7MOhOJecVwxFtSujvBQ17y0X0CadVIz9y2Rt\
aaRrpg2gatA+ueqcVcamF4umchCPvUz1Yw6DuoxeunoDYJO9JuhEAWn7UCLlc2SBA+\
LFh2vn1qXmL5nX4WXX/Hmvar/ozy/6c+R+0Z9f9Hf1lEv5RX9+0Z9f9OcX/flFf37Rn1/05xf9+UV/\
3D+/6M8v+vOL/vyiP7/ozy/6qzHy/aK/q4F8v+hvHck/4hf9XXny/aK/9SffL/pbT/L9or91JN8v+\
rvy5PtFf37RXy0W/TX6RX9+0d+\
VKPqr6lRLdA9YXNCNLFxLhFWJtcDtKJJuj8ptUbeLm5Eb92jmvAxKioHLi2BYntcN97rK0qo83xwd0\
dWyXWqkrInQS8U3iF6B0F6XDXQZ5G6N7jO0Oa2o5CNTIA8UuIZ90hrtGozcVc5Herp6eqKXt7QTaHG\
gGZkuZdEvaxm6u/f/G7o5ejcw4Jo2aEO0u2NHR/dlDbchOj09PrKWw2A1AbCSK375r1/+65f/Vi3/\
dTJSb2XtCimiYF5uoTvOrgnO5zy1u9e4/q8pSUFZ1a0c+AIa1fO/\
UYcaYnLIzvvkW6qmbainfYjI7as5GmJyCxvJnp5cT+6amNxAzz05jE+zmNwsZCty+\
2pykJi8xbmzJnSSW6O51dmX0AC79xYWFpbfePrs/\
c4ltwhRQHQqJa2zu6MrJjcRF9EnRPsDQ3PSVqL/QXa0qtG+HkXZ2T84GxtQETE7+\
rpzsdmcmo0NgIGu3EBPf9/AoHBYkf8Cq8zml8XqhtGstqJgC9Gx05ok+gyCNhMkteP/Axzte3I="},
                  "ClickToCopyTemplate"]]}}, Alignment -> Left, 
             ItemSize -> {{Automatic, Automatic, Fit}, Automatic}], FontColor -> 
            GrayLevel[0.5], FontSize -> 12]}}, 
         ItemSize -> {{Automatic, Fit}, Automatic}, Alignment -> Left, 
         Dividers -> {None, {-1 -> GrayLevel[
              Rational[239, 255]]}}, Spacings -> {{1, {}, 1}, {1, {}, 2}}]}, 
       Dynamic[
        CurrentValue[
         EvaluationCell[], {TaggingRules, "StripeOpen"}, False]]]], "Text", 
     FontSize -> 12, FontColor -> GrayLevel[0.25], StripOnInput -> False]], 
   "StripeCell", CellFrameMargins -> {{20, 5}, {2, 2}}, 
   CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> GrayLevel[0.75]]},
TaggingRules->{
 "ResourceType" -> "Paclet", "ResourceCreateNotebook" -> True, 
  "TemplateVersion" -> "1.5.62", "CreationTimestamp" -> 
  3.8663019314254081`17.339870755570484*^9, "UpdatedTimestamp" -> 
  3.8663019314254081`17.339870755570484*^9, "CompatibilityTest" -> 
  HoldComplete[
    BinaryDeserialize[
     BaseDecode[
     "OEM6eJzVWFtv2zYUri+\
5IPEyNECB9a0PeciCbR2GAduaXerJSeohSZPQ6XNo6UgRTJMqSaXxv98hJTm2I7mS7WCdHxJapL7z8\
dz40X5N7TpiGImYe0f3kQSlQsH9mlq7jEPQfj13uq7qXR//\
Ntrcw39rRx9jytTO3geQZv48HvZBSt9+9t+aFYQO4RIHLSeWErj+QFkM/\
jO1e3SHI6rNW0JDX4gBrmqehkqrVo8GQciDq5iBIq0rUCKWLvRGEZBmh2qKNJvvuQuFLNf+\
ZsIdmGUJ4J4juIZ7fUH1rd8o2vk5gKfIfmaPjJSGocNCpH3TAT/\
k4STdm4dXXhlS2Wt5S1XzPGYMif3weDI1cAUBUgWJTP0wiKV1zXi7f5UldQWRUKEWcpQAJjgqBWrY+\
NXU5jENWSwxMjX11QV1GeguV5oyRr4pYuivL+Lshdza6ompyGwRLTEf/hGhsdc4o5HdQ8xd86a/\
llgmLwuda8lRZdJ6O8EiEQu1eUyY0E6N1G5I/c0fEw/qh1uWPOavIt+WJX/\
gNwu81CBg7G11xCdui0Cp38qiZoP3scYwgmcKagsjzagLbcyrFcJum6LrAKMj8BB3+\
51gHgYSE5OrP8sCX8jwDgFv7pK2cCIBv0m1cc1V2g5yvNGpik6jCLh3zW8p9xh4DjCm5jpmVRbm+\
Ai/VvaSi7DY8VIE8rwHQ9yABmPuRIo4Wh4Ua7fVZmaE7eAOE/\
qFg4sCIUNQ3zu34A764h4f7zw8NtZJK5uz33bQHo2ZtvXNdQ5T8nX2iEBSm7mhLt3NxoFQg564jjwc\
p32/OMorAJ8KcAMfbGQlsHnCRJ+\
ym1tzpE16VP1S1uwJ6Heh5wFPGlH5cj2m3B05tyJ0oRNSJoJJYq2UmNR4SuL5ik2Z8kEedYqzz+\
2sOZMIfIwBd012Uw8wLzN4icfFeL/\
TBibAsiNlrSdjW9pLdokqh102yJIulSHqp6oUeL9KjaVSZtbqlIcyf57Dp7E/\
c32cFIg6q0p5L1ZwCgF1R92AC5l0pyzWqmmikV98h2Ut5eDOFN68MlzSzLweW1frp/\
imbYzHVf0WgM7a2LTFlZUSlsQ2Mgfsi1SBegq6hdWIEtqq5nWzutsxdWn5qY0u9uwAM3Wzy62x0Wec\
3BizLth4Cly672U7UuOT4RFs/8HbY/MTNmvqqPIxSLngoUvZhRQRoLesnluU8wTR/\
EtEPW2GrbZSwg2t9r5U7cq1HaVsyQjpj4YmhzbbVoz0xGrgbJqQHWKBzkBTz9wP0hsY2XRCnVxAXiY\
rXl+BD9Jk96ts6qG7rCYqE0ZnaCW3p/EdKrmCNk/R54+uns/s5+\
At3gmWuazMuUlU0PcHhSjVBH01nHkK/udCJLwEDmgAxMWAVNPt14WYyWmXlweJsYWF/JOZnK/\
sS3qvjJ5fCOoLU/EXy0ehgqx/CmuL6Pz9Qh6zwr64bP8nSn6hboEAP362X81KZ2fp4FoF/\
7oQ5ikkezHpKfcsLNS/K8RfTplXxS0rxX8v54//VoAvRfILkt2/\
Fu6DuJJG2H9mK2QZ3X1Y8rjKVdsLU11Qbnfn/Mae/TiO1RZHs2bny+6Vwq5Sfi8TnHKi+1+K4NOh"]\
]], "DefinitionNotebookFramework" -> "DefinitionNotebookClient", 
  "RuntimeConfiguration" -> {
   "LoadingMethod" -> "Paclet", "PacletName" -> "PacletResource", 
    "Contexts" -> {"PacletResource`", "PacletResource`DefinitionNotebook`"}, 
    "DefaultContentMethod" -> "Tagged"}, "ToolsOpen" -> True, "StatusMessage" -> 
  "", "SubmissionReviewData" -> {"Review" -> False}, "AutoUpdate" -> True, 
  "Paclet" -> "None", 
  "PacletBuildData" -> {
   "LastBuiltArchive" -> 
    "C:\\Users\\peter\\Documents\\GitHub\\association-functions\\Association \
Functions\\build\\PeterBurbery__AssociationFunctions-1.5.0.paclet", 
    "FileHashes" -> ByteArray[CompressedData["
1:eJwBVgKp/SFib1JiAQAAAEkCAAA4Qzp4nHMU1Q02cclPLs1NzStJLMnMz9N3
zUvPySzO0HcvzUxJLdZ3LC7OT84ES7mV5iWD6GK9vCRHJt1gtuD80qLkVB/P
O4uNMqqeWABFQhKL0lNLfDas67Zj8RWU0Q1Wwm64Z15KaoV+vIFecloxklHF
LH75eakIc4rX856KqTrArBushs+c4tR0kFRxvCEes05vjet+9EbIlVizjPGY
1bb+VU6QwwwO3WANYszSS0/Nw2OaoO+DxiUVzy11g32xmxaUmpZalJqXnBqQ
mA6MkuDK3KT8nGJ9n8y81MQi/4KSzNzMKrAOz7y0/KJcMBMtjt6y1qps+pGp
jbD1w7a+C5ca0pR1gwNIsjWwNDGlCKgymTiL7UO0YvoEm2MRFj9vDb95QLyh
RjdYC7vFwUBfJWdAgtAUkkhS8QRfbnuR+JXwU+GkmIcv0bVEx7LaflrJphus
SaR5xZl4jJN3/H1Hq49FTTdYlxjj0jJTc1KK9cpz8Bip8Mjq49sCO2WceRfV
yEwQ7ZtakpiSWJKI3+Tjumn1c9b+FdMN1iPGZHhmMcJjZuperuJFKZXRRJpZ
XpRZkqqXk5+cjcfMzFB/pYhHod66weo4zCxIzckhspRpuvFSOaeqhFc3WJug
YUQVNXoc65IbG3+JkmQgvvLGg7eVO2XivgLcaQjTQKILHTnv1KK81BzsJT1K
avF5uPwG80SFt7oIYxAivAGJyTmpJaCSAE1X8myVXoGI2CCELoSIIESXb2Je
ZlpqcQmBdL/98N6k1F9cAPCBb9rUtS/T
      "]]}, "TryRealOnly" -> False, 
  "Openers" -> {
   "PrimaryExamplesSection" -> Open, "ExampleSection" -> {"0" -> Closed}}},
CreateCellID->True,
DynamicEvaluationTimeout->60,
FrontEndVersion->"13.2 for Microsoft Windows (64-bit) (July 8, 2022)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData[All, "Working"], WindowToolbars -> {}, DockedCells -> {
      Cell[
       BoxData[
        TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
       CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
       RGBColor[0.33333, 0.33333, 0.33333], CellTags -> {"MainDockedCell"}, 
       CacheGraphics -> False], 
      Cell[
       BoxData[
        TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
       TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
       CellFrameMargins -> {{0, 0}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
       CacheGraphics -> False, CellOpen -> Dynamic[
         CurrentValue[
          EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]]}, 
    PrivateNotebookOptions -> {
     "FileOutlineCache" -> False, "SafeFileOpen" -> "IgnoreCache"}, 
    CellLabelAutoDelete -> False, 
    CodeAssistOptions -> {"AutoDetectHyperlinks" -> False}, 
    AutoQuoteCharacters -> {}], 
   Cell[
    StyleData["MoreInfoText", StyleDefinitions -> StyleData["Text"]], 
    FontSize -> 14, FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["ErrorText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, Inherited}, {10, 10}}, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    FontWeight -> Bold, FontColor -> RGBColor[1, 0, 0]], 
   Cell[
    StyleData["WarningText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, 35}, {0, 0}}, FontSize -> 
    14, GridBoxOptions -> {BaseStyle -> {}}], 
   Cell[
    StyleData["MoreInfoOpenerIconTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.62744, 0.62744, 0.62744, 1.]}, StripOnInput -> 
             False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.62744, 0.62744, 0.62744, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic], 
         True -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.5, 0.5, 0.5, 1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "]]}, {
              FaceForm[
               RGBColor[0.5, 0.5, 0.5, 1.]]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.99998, 0.99998, 0.99998, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["MoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], 
            "\"Click for more information\""}, "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["InlineMoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], #4}, 
           "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["ClickToCopyTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> TagBox[
           GridBox[{{#, 
              ButtonBox[
               GraphicsBox[{
                 GrayLevel[0.85], 
                 Thickness[
                  NCache[2/45, 0.044444]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 18.}, {
                   9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 18.}, {12., 
                   18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {16.5, 4.5}, {
                   16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {15.75, 17.25}, {
                   15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25}, {8.25, 17.25}, {
                   8.25, 18.}}, {{9.75, 17.25}, {12.75, 17.25}, {12.75, 
                   16.5}, {9.75, 16.5}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 14.25}, {
                  14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{8.25, 12.}, {
                  14.25, 12.}, {14.25, 11.25}, {8.25, 11.25}}, {{8.25, 
                  9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25, 9.}}, {{8.25, 
                  7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 6.75}}}]}, 
                ImageSize -> 12], ButtonFunction :> Null, 
               Appearance -> {
                "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
               Evaluator -> Automatic, Method -> "Preemptive"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}},
             AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], True -> 
         DynamicModuleBox[{RSNB`clickTime$$ = 0., RSNB`timeout$$ = 3.}, 
           TagBox[
            GridBox[{{#, 
               TagBox[
                ButtonBox[
                 DynamicBox[
                  ToBoxes[
                   Refresh[
                    If[AbsoluteTime[] - RSNB`clickTime$$ > RSNB`timeout$$, 
                    RawBoxes[
                    TemplateBox[{
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], True -> GraphicsBox[{
                    RGBColor[0.98824, 0.41961, 0.20392], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "\"Click to copy to the clipboard\""},
                     "PrettyTooltipTemplate"]], 
                    RawBoxes[
                    TemplateBox[{
                    GraphicsBox[{
                    RGBColor[0, 
                    NCache[2/3, 0.66667], 0], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], "\"Copied\""}, 
                    "PrettyTooltipTemplate"]]], UpdateInterval -> 1, 
                    TrackedSymbols :> {RSNB`clickTime$$}], StandardForm], 
                  Evaluator -> "System"], 
                 ButtonFunction :> (RSNB`clickTime$$ = AbsoluteTime[]; 
                  CopyToClipboard[
                    BinaryDeserialize[
                    BaseDecode[#2], Defer]]), 
                 Appearance -> {
                  "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
                 Method -> "Queued", Evaluator -> "System"], 
                MouseAppearanceTag["LinkHand"]]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
           DynamicModuleValues :> {}]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["PrettyTooltipTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TooltipBox[#, 
         FrameBox[
          
          StyleBox[#2, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain", StripOnInput -> False], 
          Background -> RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8, 
          StripOnInput -> False], TooltipDelay -> 0.1, 
         TooltipStyle -> {Background -> None, CellFrame -> 0}], Annotation[#, 
         Framed[
          Style[
          RSNB`$$tooltip, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain"], Background -> 
          RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8], 
         "Tooltip"]& ]& )}], 
   Cell[
    StyleData["ToolsGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Template Input\"", "Text", FontFamily -> "Source Sans Pro",
                  FontSize -> 11, StripOnInput -> False], 
                "\"Format selection automatically using appropriate \
documentation styles\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2790153672590285854; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Template Input"; 
                    DefinitionNotebookClient`TemplateInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2790153672590285854]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> RGBColor[1., 1., 1.], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> 
              RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
              ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
             Directive[
               RGBColor[0.94118, 0.94118, 0.94118], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Literal Input\"", "Text", FontFamily -> "Source Sans Pro", 
                 FontSize -> 11, StripOnInput -> False], 
                "\"Format selection as literal Wolfram Language code\""}, 
               "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4138174468017918531; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Literal Input"; 
                    DefinitionNotebookClient`LiteralInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4138174468017918531]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> RGBColor[1., 1., 1.], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> 
              RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
              ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
             Directive[
               RGBColor[0.94118, 0.94118, 0.94118], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Insert Delimiter\"", "Text", FontFamily -> 
                 "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                "\"Insert example delimiter\""}, "PrettyTooltipTemplate"], 
              ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1887802176716758884; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Insert Delimiter"; 
                    DefinitionNotebookClient`DelimiterInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1887802176716758884]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> RGBColor[1., 1., 1.], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> 
              RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
              ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
             Directive[
               RGBColor[0.94118, 0.94118, 0.94118], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               TemplateBox[{
                 StyleBox[
                  
                  TemplateBox[{
                   "\"Tables\"", 
                    "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\
\[FilledDownTriangle]\""}, "RowDefault"], "Text", FontFamily -> 
                  "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                 "\"Table functions\""}, "PrettyTooltipTemplate"], 
               ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3216557251994556740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3216557251994556740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> RGBColor[1., 1., 1.], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> 
               RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
               ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
              Directive[
                RGBColor[0.94118, 0.94118, 0.94118], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Insert table with two columns\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5800166344906378520; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert table with two columns"; 
                    DefinitionNotebookClient`TableInsert[2]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5800166344906378520]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Insert table with three columns\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    533841403879783297; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert table with three columns"; 
                    DefinitionNotebookClient`TableInsert[3]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    533841403879783297]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Add a row to the selected table\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4413051590217973467; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Add a row to the selected table"; 
                    DefinitionNotebookClient`TableRowInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4413051590217973467]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Sort the selected table\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    9150037060110806081; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Sort the selected table"; 
                    DefinitionNotebookClient`TableSort[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    9150037060110806081]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Merge selected tables\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2347719643166780208; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Merge selected tables"; 
                    DefinitionNotebookClient`TableMerge[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2347719643166780208]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               StyleBox[
                
                TemplateBox[{
                 "\"Cells\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3216557251994556740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3216557251994556740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> RGBColor[1., 1., 1.], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> 
               RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
               ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
              Directive[
                RGBColor[0.94118, 0.94118, 0.94118], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Insert comment for reviewer\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2572781756330727330; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert comment for reviewer"; 
                    DefinitionNotebookClient`CommentInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2572781756330727330]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Mark/unmark selected cells as comments\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3646530685697756512; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as comments"; 
                    DefinitionNotebookClient`CommentToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3646530685697756512]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Mark/unmark selected cells as excluded\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1866935765212102190; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as excluded"; 
                    DefinitionNotebookClient`ExclusionToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1866935765212102190]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               StyleBox[
                
                TemplateBox[{
                 "\"Documentation Tools\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3216557251994556740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3216557251994556740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> RGBColor[1., 1., 1.], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> 
               RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
               ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
              Directive[
                RGBColor[0.94118, 0.94118, 0.94118], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Open Palette\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1266981032716546660; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "DocumentationTools"; 
                    DefinitionNotebookClient`$ClickedAction = "Open Palette"; 
                    PacletResource`DefinitionNotebook`OpenDocumentationTools[
                    ButtonNotebook[]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1266981032716546660]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"New Function Page\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    7312678540702684447; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "DocumentationTools"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "New Function Page"; 
                    PacletResource`DefinitionNotebook`NewFunctionPage[
                    ButtonNotebook[]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    7312678540702684447]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"New Guide Page\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8084030535806498779; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "DocumentationTools"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "New Guide Page"; 
                    PacletResource`DefinitionNotebook`NewGuidePage[
                    ButtonNotebook[]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8084030535806498779]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
          AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              RGBColor[0.94118, 0.94118, 0.94118]}}, 
          GridBoxFrame -> {
           "Columns" -> False, 
            "RowsIndexed" -> {1 -> RGBColor[0.94118, 0.94118, 0.94118]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.5}, 5}, "Rows" -> {{Automatic}}}, FrameStyle -> 
          GrayLevel[0.75]], "Grid"], ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["MainGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{
                  Thickness[0.015385], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{19.297, 
                    56.875}, {32.5, 64.492}, {45.703, 56.875}, {32.5, 
                    49.258}, {19.297, 56.875}}, {{21.328, 56.875}, {32.5, 
                    63.324}, {43.672, 56.875}, {32.5, 50.426}, {21.328, 
                    56.875}}, {{33.008, 33.262}, {33.008, 48.496}, {46.211, 
                    56.113}, {46.211, 40.879}, {33.008, 33.262}}}]}, {
                    FaceForm[
                    RGBColor[0.70196, 0.60392, 0.78824, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{31.992, 33.262}, {18.789, 40.879}, {18.789, 
                    56.113}, {31.992, 48.496}, {31.992, 33.262}}}]}, {
                    FaceForm[
                    RGBColor[0.53725, 0.40392, 0.67451, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{17.773, 
                    8.8868}, {4.5703, 16.504}, {4.5703, 31.738}, {17.773, 
                    24.121}, {17.773, 8.8868}}, {{16.758, 10.664}, {5.5859, 
                    17.113}, {5.5859, 29.961}, {16.758, 23.512}, {16.758, 
                    10.664}}, {{31.484, 32.5}, {18.281, 40.117}, {5.0781, 
                    32.5}, {18.281, 24.883}, {31.484, 32.5}}}]}, {
                    FaceForm[
                    RGBColor[0.63529, 0.73333, 0.83137, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{31.992, 31.738}, {18.789, 24.121}, {18.789, 
                    8.8868}, {31.992, 16.504}, {31.992, 31.738}}}]}, {
                    FaceForm[
                    RGBColor[0.2902, 0.40784, 0.57647, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{47.227, 
                    8.8868}, {47.227, 24.121}, {60.43, 31.738}, {60.43, 
                    16.504}, {47.227, 8.8868}}, {{48.242, 10.664}, {48.242, 
                    23.512}, {59.414, 29.961}, {59.414, 17.113}, {48.242, 
                    10.664}}, {{33.516, 32.5}, {46.719, 40.117}, {59.922, 
                    32.5}, {46.719, 24.883}, {33.516, 32.5}}}]}, {
                    FaceForm[
                    RGBColor[0.6, 0.6, 0.37255, 1.]]}, StripOnInput -> False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{33.008, 31.738}, {33.008, 16.504}, {46.211, 
                    8.8868}, {46.211, 24.121}, {33.008, 31.738}}}]}, {
                    FaceForm[
                    RGBColor[0.39608, 0.60392, 0.30196, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgA2JWIGYC4qvPs7S/hYs5LHLd9vlvi6MDjL/imLd550d3
B9O4XZ48hwwcQBSTtjecH2G55UTZPhcHdP1zFinv/OMuBNG/0AHOL86Y+LbG
3sPh5rnvwY+PGkL08/nA+b3T84SaC1ww9F9fXGDLZe4H50+WYAnjm+sOVw/j
w8yDqYfZh64f7M4tvnD3Pr2gdPunnAfcPzA+zL8w9bDwQNdf+VLNkMPH2IEB
BBwUoLSDwzTn7pzn1foOLkDq9003DHmZy8LTKhwe2KPrbxcDhYgphnpwOKnq
OuwpAfr4miuGfKiB1krhC7/s0fUDAHimvy8=
                    "]]}, {
                    FaceForm[
                    RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{7.1094, 32.5}, {7.1094, 31.098}, {5.9726, 
                    29.961}, {4.5703, 29.961}, {3.168, 29.961}, {2.0312, 
                    31.098}, {2.0312, 32.5}, {2.0312, 33.902}, {3.168, 
                    35.039}, {4.5703, 35.039}, {5.9726, 35.039}, {7.1094, 
                    33.902}, {7.1094, 32.5}}}]}, {
                    FaceForm[
                    RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{20.82, 56.367}, {20.82, 54.965}, {19.684, 
                    53.828}, {18.281, 53.828}, {16.879, 53.828}, {15.742, 
                    54.965}, {15.742, 56.367}, {15.742, 57.769}, {16.879, 
                    58.906}, {18.281, 58.906}, {19.684, 58.906}, {20.82, 
                    57.769}, {20.82, 56.367}}}]}, {
                    FaceForm[
                    RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{20.82, 40.625}, {20.82, 39.223}, {19.684, 
                    38.086}, {18.281, 38.086}, {16.879, 38.086}, {15.742, 
                    39.223}, {15.742, 40.625}, {15.742, 42.027}, {16.879, 
                    43.164}, {18.281, 43.164}, {19.684, 43.164}, {20.82, 
                    42.027}, {20.82, 40.625}}}]}, {
                    FaceForm[
                    RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{20.82, 24.375}, {20.82, 22.973}, {19.684, 
                    21.836}, {18.281, 21.836}, {16.879, 21.836}, {15.742, 
                    22.973}, {15.742, 24.375}, {15.742, 25.777}, {16.879, 
                    26.914}, {18.281, 26.914}, {19.684, 26.914}, {20.82, 
                    25.777}, {20.82, 24.375}}}]}, {
                    FaceForm[
                    RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{20.82, 8.6329}, {20.82, 7.2306}, {19.684, 
                    6.0938}, {18.281, 6.0938}, {16.879, 6.0938}, {15.742, 
                    7.2306}, {15.742, 8.6329}, {15.742, 10.035}, {16.879, 
                    11.172}, {18.281, 11.172}, {19.684, 11.172}, {20.82, 
                    10.035}, {20.82, 8.6329}}}]}, {
                    FaceForm[
                    RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{35.039, 48.75}, {35.039, 47.348}, {33.902, 
                    46.211}, {32.5, 46.211}, {31.098, 46.211}, {29.961, 
                    47.348}, {29.961, 48.75}, {29.961, 50.152}, {31.098, 
                    51.289}, {32.5, 51.289}, {33.902, 51.289}, {35.039, 
                    50.152}, {35.039, 48.75}}}]}, {
                    FaceForm[
                    RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{35.039, 32.5}, {35.039, 31.098}, {33.902, 
                    29.961}, {32.5, 29.961}, {31.098, 29.961}, {29.961, 
                    31.098}, {29.961, 32.5}, {29.961, 33.902}, {31.098, 
                    35.039}, {32.5, 35.039}, {33.902, 35.039}, {35.039, 
                    33.902}, {35.039, 32.5}}}]}, {
                    FaceForm[
                    RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{35.039, 16.25}, {35.039, 14.848}, {33.902, 
                    13.711}, {32.5, 13.711}, {31.098, 13.711}, {29.961, 
                    14.848}, {29.961, 16.25}, {29.961, 17.652}, {31.098, 
                    18.789}, {32.5, 18.789}, {33.902, 18.789}, {35.039, 
                    17.652}, {35.039, 16.25}}}]}, {
                    FaceForm[
                    RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{49.258, 56.367}, {49.258, 54.965}, {48.121, 
                    53.828}, {46.719, 53.828}, {45.316, 53.828}, {44.18, 
                    54.965}, {44.18, 56.367}, {44.18, 57.769}, {45.316, 
                    58.906}, {46.719, 58.906}, {48.121, 58.906}, {49.258, 
                    57.769}, {49.258, 56.367}}}]}, {
                    FaceForm[
                    RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{49.258, 40.625}, {49.258, 39.223}, {48.121, 
                    38.086}, {46.719, 38.086}, {45.316, 38.086}, {44.18, 
                    39.223}, {44.18, 40.625}, {44.18, 42.027}, {45.316, 
                    43.164}, {46.719, 43.164}, {48.121, 43.164}, {49.258, 
                    42.027}, {49.258, 40.625}}}]}, {
                    FaceForm[
                    RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{49.258, 24.375}, {49.258, 22.973}, {48.121, 
                    21.836}, {46.719, 21.836}, {45.316, 21.836}, {44.18, 
                    22.973}, {44.18, 24.375}, {44.18, 25.777}, {45.316, 
                    26.914}, {46.719, 26.914}, {48.121, 26.914}, {49.258, 
                    25.777}, {49.258, 24.375}}}]}, {
                    FaceForm[
                    RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{49.258, 8.6329}, {49.258, 7.2306}, {48.121, 
                    6.0938}, {46.719, 6.0938}, {45.316, 6.0938}, {44.18, 
                    7.2306}, {44.18, 8.6329}, {44.18, 10.035}, {45.316, 
                    11.172}, {46.719, 11.172}, {48.121, 11.172}, {49.258, 
                    10.035}, {49.258, 8.6329}}}]}, {
                    FaceForm[
                    RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{62.969, 32.5}, {62.969, 31.098}, {61.832, 
                    29.961}, {60.43, 29.961}, {59.027, 29.961}, {57.891, 
                    31.098}, {57.891, 32.5}, {57.891, 33.902}, {59.027, 
                    35.039}, {60.43, 35.039}, {61.832, 35.039}, {62.969, 
                    33.902}, {62.969, 32.5}}}]}, {
                    FaceForm[
                    RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                   False]}, {
                 ImageSize -> {Automatic, 32}, 
                  ImagePadding -> {{5, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.25], ImageSize -> 50, 
                  ImageSize -> {Automatic, 35}}], 
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox[
                    "\"Paclet Resource\"", FontFamily -> "Source Sans Pro", 
                    FontWeight -> "SemiBold", StripOnInput -> False], 
                    StyleBox[
                    TagBox[
                    GridBox[{{"\"DEFINITION NOTEBOOK\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]UNDER DEVELOPMENT\[VeryThinSpace]\
\[VeryThinSpace])\"", FontSize -> 10, FontColor -> GrayLevel[0.5], 
                    FontTracking -> "Plain", FontSlant -> "Plain", 
                    FontVariations -> {"CapsType" -> "Normal"}, 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                    FontFamily -> "Source Sans Pro", FontTracking -> 
                    "SemiCondensed", 
                    FontVariations -> {"CapsType" -> "AllSmallCaps"}, 
                    StripOnInput -> False]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "ColumnsIndexed" -> {
                    2 -> RGBColor[0.33333, 0.33333, 0.33333]}, 
                    "Rows" -> {{None}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Grid"], FontSize -> 24, FontColor -> 
                 RGBColor[0.33333, 0.33333, 0.33333], StripOnInput -> 
                 False]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            TemplateBox[{
              StyleBox[
               
               TemplateBox[{
                "\"Paclet Repository\"", "\" \[RightGuillemet]  \""}, 
                "RowDefault"], "Text", FontColor -> 
               RGBColor[0.33333, 0.33333, 0.33333], StripOnInput -> False], 
              "https://resources.wolframcloud.com/PacletRepository"}, 
             "HyperlinkURL"]}, {
            TemplateBox[{
              
              TemplateBox[{
               "\"Guidelines\"", 
                "\"View general guidelines for authoring paclets\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 5906117565281445171; (
                DefinitionNotebookClient`$ClickedButton = "Style Guidelines"; 
                DefinitionNotebookClient`ViewStyleGuidelines[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[5906117565281445171]]& , 
              "\"View general guidelines for authoring paclets\"", False}, 
             "OrangeButtonTemplate"], 
            TemplateBox[{
              TemplateBox[{
                TagBox[
                 GridBox[{{"\"Tools\"", 
                    PaneSelectorBox[{False -> GraphicsBox[{
                    RGBColor[1., 1., 1.], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{5, 2.5}, {5, 7.5}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 9, 
                    PlotRangePadding -> 1.5], True -> GraphicsBox[{
                    RGBColor[1., 1., 1.], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 9, 
                    PlotRangePadding -> 1.5]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]],
                     BaselinePosition -> Scaled[0]]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.35}}}], "Grid"], 
                "\"Toggle documentation toolbar\""}, "PrettyTooltipTemplate"],
               Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 5074018684552945401; (
                DefinitionNotebookClient`$ClickedButton = "Tools"; 
                DefinitionNotebookClient`ToggleToolbar[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[5074018684552945401]]& , 
              "\"Toggle documentation toolbar\"", False}, 
             "OrangeButtonTemplate"], 
            TagBox[
             
             GridBox[{{"\"\"", "\"\""}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxDividers -> {
               "ColumnsIndexed" -> {2 -> True}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{2}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}}, FrameStyle -> 
              RGBColor[1., 1., 1.]], "Grid"], 
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{
                 TemplateBox[{"\"Check\"", 
                   TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                  "RowDefault"], "\"Check notebook for potential errors\""}, 
                "PrettyTooltipTemplate"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"Check notebook for potential errors\"", True}, 
              "OrangeButtonTemplate"], {
             "\"Definition Notebook\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4301941258590251066; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Definition Notebook"; 
                    PacletResource`DefinitionNotebook`CheckPacletNotebook[
                    ButtonNotebook[], "DefinitionNotebook"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4301941258590251066]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Paclet Files\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1312802444570235546; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = "Paclet Files"; 
                    PacletResource`DefinitionNotebook`CheckPacletNotebook[
                    ButtonNotebook[], "PacletFiles"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1312802444570235546]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Documentation\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    6325522174070009817; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = "Documentation"; 
                    PacletResource`DefinitionNotebook`CheckPacletNotebook[
                    ButtonNotebook[], "Documentation"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    6325522174070009817]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], Delimiter, "\"All\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8900916902137752067; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = "All"; 
                    PacletResource`DefinitionNotebook`CheckPacletNotebook[
                    ButtonNotebook[], All]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8900916902137752067]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{"\"Build\"", 
                 TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                "RowDefault"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"\"", True}, "OrangeButtonTemplate"], {
             "\"Documentation\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1579518736508902704; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Build"; 
                    DefinitionNotebookClient`$ClickedAction = "Documentation"; 
                    PacletResource`DefinitionNotebook`BuildPaclet[
                    ButtonNotebook[], "Documentation"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1579518736508902704]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"All\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5625167833203047250; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Build"; 
                    DefinitionNotebookClient`$ClickedAction = "All"; 
                    PacletResource`DefinitionNotebook`BuildPaclet[
                    ButtonNotebook[], All]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5625167833203047250]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{"\"Deploy\"", 
                 TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                "RowDefault"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"\"", True}, "OrangeButtonTemplate"], {
             "\"Locally on this computer\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8714502586816766511; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Locally on this computer"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "Local"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8714502586816766511]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Publicly in the cloud\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5593410685219912767; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Publicly in the cloud"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "CloudPublic"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5593410685219912767]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"In this session only\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2850084946728613817; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "In this session only"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "KernelSession"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2850084946728613817]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            ItemBox[
             StyleBox[
              DynamicBox[
               ToBoxes[
                CurrentValue[
                 EvaluationNotebook[], {TaggingRules, "StatusMessage"}, ""], 
                StandardForm], Initialization :> (CurrentValue[
                  EvaluationNotebook[], {TaggingRules, "StatusMessage"}] = 
                "")], "Text", 
              GrayLevel[1], StripOnInput -> False], ItemSize -> Fit, 
             StripOnInput -> False], 
            DynamicBox[
             ToBoxes[
              If[
               CurrentValue[
                EvaluationNotebook[], {
                TaggingRules, "SubmissionReviewData", "Review"}, False], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> 15, PlotRange -> {{0., 15.75}, {0., 16.5}}, 
                    AspectRatio -> 1.15], "\"Submit Update\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit changes to update your paclet submission\""}, 
                   "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    3196298050911436087; (
                    DefinitionNotebookClient`$ClickedButton = "SubmitUpdate"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepositoryUpdate[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   3196298050911436087]]& , 
                  "\"Submit changes to update your paclet submission\"", 
                  True}, "OrangeButtonTemplate"]], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> 15, PlotRange -> {{0., 15.75}, {0., 16.5}}, 
                    AspectRatio -> 1.15], "\"Submit to Repository\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit your paclet to the Wolfram Language Paclet \
Repository\""}, "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    3704832848557640569; (
                    DefinitionNotebookClient`$ClickedButton = "Submit"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepository[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   3704832848557640569]]& , 
                  "\"Submit your paclet to the Wolfram Language Paclet \
Repository\"", True}, "OrangeButtonTemplate"]]], StandardForm], Evaluator -> 
             "System", SingleEvaluation -> True]}}, 
          GridBoxAlignment -> {
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {-1 -> Right}, 
            "Rows" -> {{Center}}}, AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              RGBColor[1., 1., 1.], 
              RGBColor[0.33333, 0.33333, 0.33333]}}, 
          GridBoxFrame -> {
           "Columns" -> False, 
            "RowsIndexed" -> {
             1 -> RGBColor[1., 1., 1.], 2 -> 
              RGBColor[0.33333, 0.33333, 0.33333]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.9}, 5}, 
            "RowsIndexed" -> {1 -> 1.1, 2 -> 1.3, 3 -> 0.25}}, FrameStyle -> 
          RGBColor[1., 1., 1.]], "Grid"], 
        ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["ReviewerCommentLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{#, 
           TemplateBox[{
             GraphicsBox[{
               Thickness[0.015385], 
               StyleBox[{
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{19.297, 56.875}, {
                  32.5, 64.492}, {45.703, 56.875}, {32.5, 49.258}, {19.297, 
                  56.875}}, {{21.328, 56.875}, {32.5, 63.324}, {43.672, 
                  56.875}, {32.5, 50.426}, {21.328, 56.875}}, {{33.008, 
                  33.262}, {33.008, 48.496}, {46.211, 56.113}, {46.211, 
                  40.879}, {33.008, 33.262}}}]}, {
                 FaceForm[
                  RGBColor[0.70196, 0.60392, 0.78824, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                  0}}}, {{{31.992, 33.262}, {18.789, 40.879}, {18.789, 
                  56.113}, {31.992, 48.496}, {31.992, 33.262}}}]}, {
                 FaceForm[
                  RGBColor[0.53725, 0.40392, 0.67451, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{17.773, 8.8868}, {
                  4.5703, 16.504}, {4.5703, 31.738}, {17.773, 24.121}, {
                  17.773, 8.8868}}, {{16.758, 10.664}, {5.5859, 17.113}, {
                  5.5859, 29.961}, {16.758, 23.512}, {16.758, 10.664}}, {{
                  31.484, 32.5}, {18.281, 40.117}, {5.0781, 32.5}, {18.281, 
                  24.883}, {31.484, 32.5}}}]}, {
                 FaceForm[
                  RGBColor[0.63529, 0.73333, 0.83137, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                  0}}}, {{{31.992, 31.738}, {18.789, 24.121}, {18.789, 
                  8.8868}, {31.992, 16.504}, {31.992, 31.738}}}]}, {
                 FaceForm[
                  RGBColor[0.2902, 0.40784, 0.57647, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{47.227, 8.8868}, {
                  47.227, 24.121}, {60.43, 31.738}, {60.43, 16.504}, {47.227, 
                  8.8868}}, {{48.242, 10.664}, {48.242, 23.512}, {59.414, 
                  29.961}, {59.414, 17.113}, {48.242, 10.664}}, {{33.516, 
                  32.5}, {46.719, 40.117}, {59.922, 32.5}, {46.719, 24.883}, {
                  33.516, 32.5}}}]}, {
                 FaceForm[
                  RGBColor[0.6, 0.6, 0.37255, 1.]]}, StripOnInput -> False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                  0}}}, {{{33.008, 31.738}, {33.008, 16.504}, {46.211, 
                  8.8868}, {46.211, 24.121}, {33.008, 31.738}}}]}, {
                 FaceForm[
                  RGBColor[0.39608, 0.60392, 0.30196, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                  0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgA2JWIGYC4qvPs7S/hYs5LHLd9vlvi6MDjL/imLd550d3
B9O4XZ48hwwcQBSTtjecH2G55UTZPhcHdP1zFinv/OMuBNG/0AHOL86Y+LbG
3sPh5rnvwY+PGkL08/nA+b3T84SaC1ww9F9fXGDLZe4H50+WYAnjm+sOVw/j
w8yDqYfZh64f7M4tvnD3Pr2gdPunnAfcPzA+zL8w9bDwQNdf+VLNkMPH2IEB
BBwUoLSDwzTn7pzn1foOLkDq9003DHmZy8LTKhwe2KPrbxcDhYgphnpwOKnq
OuwpAfr4miuGfKiB1krhC7/s0fUDAHimvy8=
                  "]]}, {
                 FaceForm[
                  RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{7.1094, 32.5}, {7.1094, 31.098}, {5.9726, 
                  29.961}, {4.5703, 29.961}, {3.168, 29.961}, {2.0312, 
                  31.098}, {2.0312, 32.5}, {2.0312, 33.902}, {3.168, 
                  35.039}, {4.5703, 35.039}, {5.9726, 35.039}, {7.1094, 
                  33.902}, {7.1094, 32.5}}}]}, {
                 FaceForm[
                  RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{20.82, 56.367}, {20.82, 54.965}, {19.684, 
                  53.828}, {18.281, 53.828}, {16.879, 53.828}, {15.742, 
                  54.965}, {15.742, 56.367}, {15.742, 57.769}, {16.879, 
                  58.906}, {18.281, 58.906}, {19.684, 58.906}, {20.82, 
                  57.769}, {20.82, 56.367}}}]}, {
                 FaceForm[
                  RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{20.82, 40.625}, {20.82, 39.223}, {19.684, 
                  38.086}, {18.281, 38.086}, {16.879, 38.086}, {15.742, 
                  39.223}, {15.742, 40.625}, {15.742, 42.027}, {16.879, 
                  43.164}, {18.281, 43.164}, {19.684, 43.164}, {20.82, 
                  42.027}, {20.82, 40.625}}}]}, {
                 FaceForm[
                  RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{20.82, 24.375}, {20.82, 22.973}, {19.684, 
                  21.836}, {18.281, 21.836}, {16.879, 21.836}, {15.742, 
                  22.973}, {15.742, 24.375}, {15.742, 25.777}, {16.879, 
                  26.914}, {18.281, 26.914}, {19.684, 26.914}, {20.82, 
                  25.777}, {20.82, 24.375}}}]}, {
                 FaceForm[
                  RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{20.82, 8.6329}, {20.82, 7.2306}, {19.684, 
                  6.0938}, {18.281, 6.0938}, {16.879, 6.0938}, {15.742, 
                  7.2306}, {15.742, 8.6329}, {15.742, 10.035}, {16.879, 
                  11.172}, {18.281, 11.172}, {19.684, 11.172}, {20.82, 
                  10.035}, {20.82, 8.6329}}}]}, {
                 FaceForm[
                  RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{35.039, 48.75}, {35.039, 47.348}, {33.902, 
                  46.211}, {32.5, 46.211}, {31.098, 46.211}, {29.961, 
                  47.348}, {29.961, 48.75}, {29.961, 50.152}, {31.098, 
                  51.289}, {32.5, 51.289}, {33.902, 51.289}, {35.039, 
                  50.152}, {35.039, 48.75}}}]}, {
                 FaceForm[
                  RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{35.039, 32.5}, {35.039, 31.098}, {33.902, 
                  29.961}, {32.5, 29.961}, {31.098, 29.961}, {29.961, 
                  31.098}, {29.961, 32.5}, {29.961, 33.902}, {31.098, 
                  35.039}, {32.5, 35.039}, {33.902, 35.039}, {35.039, 
                  33.902}, {35.039, 32.5}}}]}, {
                 FaceForm[
                  RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{35.039, 16.25}, {35.039, 14.848}, {33.902, 
                  13.711}, {32.5, 13.711}, {31.098, 13.711}, {29.961, 
                  14.848}, {29.961, 16.25}, {29.961, 17.652}, {31.098, 
                  18.789}, {32.5, 18.789}, {33.902, 18.789}, {35.039, 
                  17.652}, {35.039, 16.25}}}]}, {
                 FaceForm[
                  RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{49.258, 56.367}, {49.258, 54.965}, {48.121, 
                  53.828}, {46.719, 53.828}, {45.316, 53.828}, {44.18, 
                  54.965}, {44.18, 56.367}, {44.18, 57.769}, {45.316, 
                  58.906}, {46.719, 58.906}, {48.121, 58.906}, {49.258, 
                  57.769}, {49.258, 56.367}}}]}, {
                 FaceForm[
                  RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{49.258, 40.625}, {49.258, 39.223}, {48.121, 
                  38.086}, {46.719, 38.086}, {45.316, 38.086}, {44.18, 
                  39.223}, {44.18, 40.625}, {44.18, 42.027}, {45.316, 
                  43.164}, {46.719, 43.164}, {48.121, 43.164}, {49.258, 
                  42.027}, {49.258, 40.625}}}]}, {
                 FaceForm[
                  RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{49.258, 24.375}, {49.258, 22.973}, {48.121, 
                  21.836}, {46.719, 21.836}, {45.316, 21.836}, {44.18, 
                  22.973}, {44.18, 24.375}, {44.18, 25.777}, {45.316, 
                  26.914}, {46.719, 26.914}, {48.121, 26.914}, {49.258, 
                  25.777}, {49.258, 24.375}}}]}, {
                 FaceForm[
                  RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{49.258, 8.6329}, {49.258, 7.2306}, {48.121, 
                  6.0938}, {46.719, 6.0938}, {45.316, 6.0938}, {44.18, 
                  7.2306}, {44.18, 8.6329}, {44.18, 10.035}, {45.316, 
                  11.172}, {46.719, 11.172}, {48.121, 11.172}, {49.258, 
                  10.035}, {49.258, 8.6329}}}]}, {
                 FaceForm[
                  RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{62.969, 32.5}, {62.969, 31.098}, {61.832, 
                  29.961}, {60.43, 29.961}, {59.027, 29.961}, {57.891, 
                  31.098}, {57.891, 32.5}, {57.891, 33.902}, {59.027, 
                  35.039}, {60.43, 35.039}, {61.832, 35.039}, {62.969, 
                  33.902}, {62.969, 32.5}}}]}, {
                 FaceForm[
                  RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                False]}, {
              ImageSize -> 12, ImageSize -> 50, 
               ImageSize -> {Automatic, 35}}], 
             "Wolfram Function Repository Reviewer"}, 
            "PrettyTooltipTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
         False, GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"]& )}], 
   Cell[
    StyleData["CommentCellLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            StyleBox[#, FontSize -> 11]}, {
            StyleBox[
             DynamicBox[
              ToBoxes[
               DateString[
                TimeZoneConvert[
                 DateObject[#2, TimeZone -> 0]], {
                "Month", "/", "Day", "/", "Year", " ", "Hour24", ":", 
                 "Minute"}], StandardForm], SingleEvaluation -> True], 
             FontSize -> 9]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Grid"], "CommentLabel", ShowStringCharacters -> False]& )}], 
   Cell[
    StyleData["OrangeButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
        ButtonBox[
         StyleBox[#, "Text", FontFamily -> "Source Sans Pro", FontWeight -> 
          "SemiBold", FontTracking -> "Condensed", FontSize -> 13, FontColor -> 
          Dynamic[
            FEPrivate`If[
             CurrentValue[Enabled], 
             GrayLevel[1], 
             RGBColor[0.80294, 0.80294, 0.80294]], Evaluator -> "System"], 
          StripOnInput -> False], ButtonFunction :> 
         With[{RSNB`nb$ = ButtonNotebook[]}, 
           If[#4, CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
             ProgressIndicator[Appearance -> "Necklace"]]; 
           With[{RSNB`$cp$ = $ContextPath}, 
             Quiet[
              
              Block[{$ContextPath = RSNB`$cp$, 
                ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                False, DefinitionNotebookClient`$ButtonCodeID = None}, 
               Internal`WithLocalSettings[
                DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                   ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                   "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                 Annotation[
                 DefinitionNotebookClient`$ButtonCodeID = 3145484069433207908; 
                  DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    #2[]]]], 
                  DefinitionNotebookClient`ButtonCodeID[3145484069433207908]],
                  DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
               Null]]]; 
           CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = ""; 
           Null], FrameMargins -> {{5, 5}, {0, 0}}, 
         Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqAIJQygMsQf39/d3d3BwcHSxgAsoEiQHFiDAkJCXF2djbD
DYCyQDV4DAFaZG1tjccECACqQXYSsiFA84kxAW4O3D3IhuD3BVZ/oRkCdB5J
JkAAxFNwQ4AhT4YhQF3IhgBjkAxDgLqAeiGpEcgApgQyDAHqghgCyhoUG0IV
l1AxTKgSO1RJJ1RJsdTKO1TJxdQqT5CdREnJRgYgphgnprQHAMBNTEU=
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJytlM1Kw0AURoPduHTnui+hDgOSksW0GwMxWWSZYFqKkEJaiO4EX0J8AF9T
T7gahmjs0MxlWqbffHN67/zNy12yPguCYH/OV1K0i6Ypnu8v+JHV++2mrh5W
9aHaVM1NOUO8/P50/c9j4eIhsmkxBonj2BgThqH6Cfoo6C6QNE2jKLoaD0bx
/APhj7TWONW1zs3j9u71KXuXRh8FnVE8dko2BL4QlrdJm7295B+/Gzqjwunz
sSFSBZ4/p9tNOPgHENKTKsZyGOQjdUlRPYSVR6TqowRpOPEzy4awg4isniME
J35mMVdOIx1OAiK74AjB2ZWvlEC6qzEZ4iUTj2viZXe8nBMvJ9bX3fFyi329
J3ZKU162E8LlGXd57b8AKuPmMg==
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlD0OgkAQhYk2lnbW3sLW0lazDZ1G/KHAZDURr8AxuAANp6DmCJT2lPqZ
0Y0xChvZl2ges29fZmZnd7w6zDc9z/OOA/7my/NU6+VlMeRDRcf9NgrWs+gU
bAM9WfUJjp6/B7+1wUYDVDf8MonjOE3ToiiuL8CJELcx8X0/z/OGtFlF02Ci
ta6qikhd11mWJUmyewFOhDiraFB+NcFfHMqyDMPwa/nEWRUfk8+7iVSBprWT
4oP+w4SOSRW/cvjIR+qSPhsTOg+h6lYHAUr07Ho34QQhdM/SBCV6dsFlGiFM
AoRTsDRBiZ5dYvK4Gp1NnGTisCdOTsfJnCgXE6sc3R3l4habfDq+JwYdX7Y/
0JC2gc1rfweIxIKt
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True]}, Background -> 
         RGBColor[0.33333, 0.33333, 0.33333], Method -> "Queued", 
         ImageSize -> {All, 23}, Evaluator -> Automatic], FrameStyle -> 
        Directive[
          RGBColor[0.33333, 0.33333, 0.33333], 
          AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> False, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["SuggestionGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        FrameBox[
         AdjustmentBox[
          TagBox[
           GridBox[{{
              
              TemplateBox[{#2, #3, {16., 16.}, {{1., 17.}, {1., 17.}}}, 
               "SuggestionIconTemplate"], 
              
              PaneBox[#, ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
               Baseline, ImageSize -> Full], 
              RowBox[{
                AdjustmentBox[
                 TemplateBox[{
                   ActionMenuBox[
                    TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    EdgeForm[
                    Directive[
                    GrayLevel[1, 0], 
                    Thickness[0.025]]], 
                    FaceForm[#4], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], #5, 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0], True -> 
                    GraphicsBox[{
                    EdgeForm[
                    Directive[#5, 
                    Thickness[0.025]]], 
                    FaceForm[#2], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], 
                    GrayLevel[1], 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], #6, Appearance -> None, 
                    Method -> "Queued"], "\"View suggestions\""}, 
                  "PrettyTooltipTemplate"], BoxBaselineShift -> -0.5], 
                " "}]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, 
            GridBoxItemSize -> {
             "Columns" -> {Automatic, Automatic, Fit}, 
              "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
          BoxMargins -> {{0.25, -0.5}, {0.15, -0.15}}], 
         RoundingRadius -> {13, 75}, Background -> #4, FrameStyle -> None, 
         FrameMargins -> {{0, 8}, {0, 0}}, ImageMargins -> {{0, 0}, {5, 5}}, 
         StripOnInput -> False], "Text", FontColor -> #5, FontSize -> 14, 
        FontFamily -> "Source Sans Pro", FontWeight -> "SemiBold", 
        FontTracking -> "Plain", 
        PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
        LineBreakWithin -> False]& )}], 
   Cell[
    StyleData["SuggestionIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.055556], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO
m+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD
jI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh
MRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d
            "]]}, 
          FaceForm[#]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{8.1753, 7.4169}, {
             7.7969, 11.308}, {7.7969, 13.38}, {10.12, 13.38}, {10.12, 
             11.308}, {9.7415, 7.4169}, {8.1753, 7.4169}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA
qBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed
HTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2
qB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa
m8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5
N5G6
             "]}]}, 
          FaceForm[#2]]}, ImageSize -> #3, PlotRange -> #4, AspectRatio -> 
        Automatic, BaselinePosition -> Scaled[0.1]]& )}], 
   Cell[
    StyleData["FormEditValuesButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TemplateBox[{
         TagBox[
          PaneBox[
           PaneSelectorBox[{False -> GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1: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
N3kqZvY=
                 "], {{0, 50.}, {50., 0}}, {0, 255}, ColorFunction -> 
                 GrayLevel], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "Grayscale", Interleaving -> True], 
                Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
               ImageSizeRaw -> {50., 50.}, PlotRange -> {{0, 50.}, {0, 50.}}],
              True -> GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1: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
DcvuuIyle//vxt/PCE6d
                 "], {{0, 50.}, {50., 0}}, {0, 255}, ColorFunction -> 
                 GrayLevel], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "Grayscale", Interleaving -> True], 
                Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
               ImageSizeRaw -> {50., 50.}, 
               PlotRange -> {{0, 50.}, {0, 50.}}]}, 
            Dynamic[
             CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
            0], ImageSize -> {Automatic, 15}, ImageSizeAction -> 
           "ResizeToFit"], 
          MouseAppearanceTag["LinkHand"]], "\"Edit values\""}, 
        "PrettyTooltipTemplate"]& )}], 
   Cell[
    StyleData["FileManagerBMPIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0,
              2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{
             0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQEiDhBawAGVr+Cwm1VIxP6ZBJyvW3ExfIKZlEPU
lJsKk3kUHNbt4rs6pUXaYdetrr+p2+UdTN5buLpPknF4tX098/M3cg56xw5Y
9eXLOszamGFlLSnnwPR3X/3nR7IOLM97NN6+lXGoSH+7jfusrANbyvry+j3S
DvZPZ+i8Oy/rkLYqISSIXdrhdFOnfdcsWQcfpitXNoVKOWQJq3+3NpF16Ftv
u1nlgKSDuxWzsv5pGYcaz+QtfVqSDg/fi29WtZZxWBTbOmX+FgmHrI+aDMcm
Szu8yWzfr5Yt4TDNuTvnebSMw6EPgoaqRhIOZ8/z+t7kBJqfY7eOd6u4Q+hH
t2cT62Ud5jg9Ny3jFHeI32r0cPovWYcgvy2rJwSJORTlCb+bainnsOOHCMPj
SlGHxcHhdqeN5Ryivu681TVXxOGVbF57m6ucA9eXThvPKGGHU1YysUtPyzo8
uaB0+6eckEMmMBRknso4OO1ZF7/BWtDBtPJU1q570g4cRQGHfKIFHDJWBHoY
dUs5PEh+6Sx+hd/B9HrmkqVGkvD4AQCmgKFd
             "], {{5.49393, 6.2940000000000005`}, {6.24061, 
             6.2940000000000005`}, {6.429096, 6.284750000000001}, {
             6.614185999999998, 6.34661}, {6.759240000000001, 
             6.467319999999999}, {6.890777, 6.587419999999998}, {6.962032, 
             6.759840000000002}, {6.953660000000001, 6.937759999999999}, {
             6.96995, 7.11698}, {6.9035910000000005`, 7.293840000000001}, {
             6.77343, 7.41811}, {6.613585999999999, 7.530479999999999}, {
             6.419682000000001, 7.58385}, {6.224849999999999, 7.56911}, {
             5.49393, 7.56911}}, {{5.49393, 5.8706}, {5.49393, 4.4308}, {6.31,
              4.4308}, {6.509734, 4.41999}, {6.705573, 4.48902}, {
             6.854379999999999, 4.62269}, {6.9925049999999995`, 
             4.761840000000003}, {7.065081999999999, 4.953080000000002}, {
             7.05406, 5.14884}, {7.08081, 5.3499}, {7.011307, 
             5.551820000000001}, {6.866472, 5.693819999999999}, {6.721637, 
             5.83582}, {6.518383999999999, 5.90132}, {6.317889999999999, 
             5.8706}}, {{9.131169999999997, 8.}, {10.356000000000002`, 
             4.736610000000001}, {11.5814, 8.}, {12.221939999999998`, 8.}, {
             12.221939999999998`, 4.}, {11.727999999999998`, 4.}, {
             11.727999999999998`, 5.557409999999999}, {11.774239999999999`, 
             7.238630000000002}, {10.544139999999999`, 4.}, {10.16581, 4.}, {
             8.937809999999999, 7.231200000000001}, {8.986680000000002, 
             5.557409999999999}, {8.986680000000002, 4.}, {8.492740000000001, 
             4.}, {8.492740000000001, 8.}}, {{13.799369999999998`, 
             5.566080000000001}, {13.799369999999998`, 4.}, {
             13.305440000000003`, 4.}, {13.305440000000003`, 8.}, {14.68744, 
             8.}, {15.04065, 8.0207}, {15.387580000000002`, 
             7.899980000000001}, {15.65166, 7.6644999999999985`}, {15.88797, 
             7.431630000000002}, {16.01454, 7.109539999999999}, {16., 
             6.778090000000002}, {16.02146, 6.443669999999999}, {15.8971, 
             6.116339999999999}, {15.659, 5.88053}, {15.38536, 
             5.655040000000001}, {15.03595, 5.542569999999998}, {14.68216, 
             5.566080000000001}}, {{13.799369999999998`, 5.9969}, {
             14.687369999999998`, 5.9969}, {14.908019999999999`, 
             5.982140000000001}, {15.12579, 6.053599999999999}, {
             15.294799999999999`, 6.1962199999999985`}, {15.44357, 
             6.350040000000002}, {15.520309999999998`, 6.559620000000001}, {
             15.50604, 6.7731400000000015`}, {15.516169999999999`, 6.98493}, {
             15.43995, 7.19177}, {15.294799999999999`, 7.34633}, {15.13914, 
             7.49474}, {14.93073, 7.57494}, {14.71574, 7.56917}, {
             13.799339999999999`, 7.56917}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerCDFIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 17.5}, {18., 18.328427}, {
            17.328429999999997`, 19.}, {16.5, 19.}, {4.5, 19.}, {3.671573, 
            19.}, {3., 18.328427}, {3., 17.5}, {3., 3.5}, {3., 
            2.6715700000000027`}, {3.671573, 2.}, {4.5, 2.}, {16.5, 2.}, {
            17.328429999999997`, 2.}, {18., 2.6715700000000027`}, {18., 
            3.5}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
             1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {{{5., 12.}, {5., 11.}, {2., 11.}, {2., 12.}}, {{2., 
             10.}, {2., 9.}, {5., 9.}, {5., 10.}}, {{2., 14.}, {2., 13.}, {5.,
              13.}, {5., 14.}}, {{2., 8.}, {2., 7.}, {5., 7.}, {5., 8.}}, {{
             2., 6.}, {2., 5.}, {5., 5.}, {5., 6.}}, {{5., 18.}, {2., 18.}, {
             2., 17.}, {5., 17.}, {5., 18.}}, {{5., 4.}, {2., 4.}, {2., 3.}, {
             5., 3.}, {5., 4.}}, {{2., 16.}, {2., 15.}, {5., 15.}, {5., 
             16.}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}}}, {{{17., 3.5}, {17., 
            3.223860000000002}, {16.776139999999998`, 3.}, {16.5, 3.}, {4.5, 
            3.}, {4.223858, 3.}, {4., 3.223860000000002}, {4., 3.5}, {4., 
            17.5}, {4., 17.776142}, {4.223858, 18.}, {4.5, 18.}, {16.5, 
            18.}, {16.776139999999998`, 18.}, {17., 17.776142}, {17., 
            17.5}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{
            1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 
            0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 
            1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {
            1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}}}, {{{11.76489, 10.215}, {11.80176, 10.266810000000001`}, {
             11.77555, 10.604633}, {11.58396, 10.907632000000001`}, {
             11.290009999999999`, 11.076163999999999`}, {10.99606, 
             11.244695}, {10.63778, 11.256947000000002`}, {10.333, 
             11.10889}, {11.05187, 11.20557}, {11.479730000000002`, 
             9.99811}, {10.727409999999999`, 9.33197}, {11.149809999999999`, 
             9.52223}, {11.50957, 9.82843}, {11.76489, 10.215}}, {{8.1958, 
             10.303830000000001`}, {8.202184, 9.241180000000002}, {
             8.904717999999999, 8.30847}, {9.924319999999998, 8.009}, {
             10.0459, 7.98489}, {11.0395, 8.27055}, {11.746269999999997`, 
             9.149949999999999}, {11.81152, 10.181730000000002`}, {11.44906, 
             9.569830000000001}, {10.80329, 9.1811}, {10.0929, 
             9.147189999999998}, {9.307032000000001, 9.191650000000001}, {
             8.59527, 9.625599999999999}, {8.1958, 10.303830000000001`}}, {{
             9.91321, 7.952940000000002}, {7.39209, 8.45477}, {7.04614, 
             13.89722}, {12.13989, 14.18054}, {11.451440000000002`, 
             14.616627999999999`}, {10.66164, 14.866693}, {9.84766, 
             14.90631}, {9.270579, 14.904569}, {8.706776999999999, 
             14.732987000000001`}, {8.22656, 14.41296}, {5.411620000000001, 
             12.47095}, {6.03, 7.93628}, {9.538089999999999, 7.93628}, {
             9.65967, 7.93628}, {9.784709999999999, 7.941830000000001}, {
             9.91321, 7.952940000000002}}, {{9.29089, 10.69141}, {9.25389, 
             10.639469999999998`}, {9.280137, 10.301669000000002`}, {9.471731,
              9.998700000000001}, {9.765674, 9.83019}, {10.05962, 
             9.661680000000002}, {10.417869999999999`, 9.649429999999999}, {
             10.72264, 9.797469999999999}, {10.00376, 9.7006}, {
             9.575790000000001, 10.908}, {10.3281, 11.574259999999999`}, {
             9.905787000000002, 11.384055}, {9.546119, 11.077912999999999`}, {
             9.29089, 10.69141}}, {{12.77489, 10.73059}, {12.771159999999998`,
              11.738362}, {12.10084, 12.621973}, {11.131339999999998`, 
             12.897090000000002`}, {11.009269999999999`, 
             12.921389999999999`}, {10.0158, 12.635689000000001`}, {9.309201, 
             11.756293000000001`}, {9.244139999999998, 10.72461}, {9.606552, 
             11.33644}, {10.25222, 11.725138000000001`}, {10.962520000000001`,
              11.759090000000002`}, {11.69498, 11.721043000000002`}, {
             12.366620000000001`, 11.339892}, {12.774899999999999`, 
             10.73059}}, {{11.51758, 12.969909999999999`}, {11.396, 
             12.969909999999999`}, {11.270959999999999`, 12.964357}, {
             11.14246, 12.95325}, {13.66357, 12.45142}, {13.741819999999997`, 
             7.11825}, {8.91577, 6.725830000000002}, {9.60423, 
             6.2897500000000015`}, {10.39402, 6.03966}, {11.207999999999998`, 
             6.}, {11.78508, 6.001780000000002}, {12.348869999999998`, 
             6.17338}, {12.82909, 6.493409999999999}, {15.644409999999999`, 
             8.435419999999999}, {15.025630000000001`, 12.969909999999999`}, {
             11.51758, 12.969909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerCSSIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0,
              1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJxdk3tMUwcUxmtZNl0M0Mel5T56wcyCDxwzSLvSlW9EGUKlDogymTY8hrjI
FHFs0SCyDIaADtRBZMjDuDpgbRgspLRDIqIgGW0zqnF00IVNRjMU0slkQ2B3
y/CPneTk5PfPSb7vOyc440jSO3wej6fk+p+5yLsameclYD7PUMVmKVZYe+By
JiIlOPN58h3eTwTae6cb1N8R+CFa5/P8qwG43ki+PJYlRgW/cJ3OG4B9WVFu
XZgIRiL3XH6FBI9J6/a5SCHaBqdOv1Qvhbb5d9J6VYDXmg4PEdcDse/+iG+R
UYA6e7dr7gqJoZsxxkMNAvR8knAuqoTCqDIjTPNAgNiYNNsXShql5XlL8uNC
tL9574h8koa0w3I3f6sIbwmbDDW7GGR5hyMVcjGCT/Ys/LyfQXxvIaMMIXDr
imc6azf7jOXuw/mZKhZxlmzvcJcIihuKXY2XZXDsnKH0aULc/fXdTX/UMsgO
nEiV7BVAGxF3I7mMxqmWRgVxyB8flGhSb8sptOeoogJ/9MNzmuhKf04P79/y
x1bafhCMFGZR54G1D/wwa0grKPs0AJOdar9HJn+Uk9qbs9UEHl30vbf8pwD2
+rkNA8fFMHgLPh75SIRjbPc2z6QIX95OUJxJJ/7bK0bO5jpbYqzkGY/ufsXm
7pdCNsF2PZ4XofSr9+bqxSSeLivT+5RiVHJ2iTMonHg6boi2iuG8lRtxupbG
X/Y6tmgDgUFda6GqgUHt6pTloAkCql+yzauKZDh/akF11MblWaFbFS5jofB5
uyrMKkH8luXgxS4WXzOV90McUixMOT+z84OwduaYwO1Z0R8E/Z7Q7xe1FGLX
v8+vWx2E8PSITa5rNJRtmr1p1SweWtfNu1sZqL0v+Ng537cXa6pDWmQoXVqz
Zc9FBs2W7nmXhoXT2HBhXEHjLL416bn8Npo2LpgGSUxJq3rGuXxXeHrziWv8
RAbmJ0fv5A1QQFxAePFvNGZto7kSC40c00hcwg4aNWt6nfaTDCbVmfqOZgpl
6p2WbKEM/QVPeGMDJFSh6YaHehkKO4fPejg9SYnftFUlyVASqnfE9Ekx5Ztx
8MX9MvSVJxtLWiRo5c6hxcFgorVjppwnwYcp2153jtHwxKam9HP/0U9demOp
iULNkEuQ6CIwFH8hyRFG4v//9jeFT3Hb
             "], CompressedData["
1:eJxdVGlQU1cUjtRRRAsJSyAkeXnv5UXEBRAELFT6iRSwg0QRRREEMyguCClY
QKUsLTXUEYG61G2wiFQLKorgiBsuuEWMoGg0kYhSKBVEZFNQoI8u/uiduXPm
3Jlzzne+851LKeKCVhpxOJxg9o5Yn9gtws4nDALcf5wded0ajwqVs0yiGYz+
dNAiLMAGg894VsVtUjgnTaMk5TbYlOWbxF0nxd9x/TagBfExs7ppDHQZtRe6
CLDyedu68O9o4MbTiswDAhgdlPgaS2jkpr73UDrYYsRoGikEujWbvP7JFpPO
OXxovEDhTHPY1pLJQniZaAuVFyl4U0amBWohfM90D9afpRDcVLS/Ol0E+c5M
H52BwnZFZdFDJzGq5iz4Rc7Q6HEv4I46IgZVvet0UiIN/q76catpAhdjeTZt
ehrHRKFRnhEErp4Pq07yliIosLwkN4iA47sZdo5lUgwtu709O5LATd66N/Yk
A4fPOnaa8gnoqsruH97AYKt9no/j92IcO/44IrGKwctlLRuWtovwlTbg0pMW
BjV1TW/dxCIoR4A/Z+DrF99vNleIV53aqGyd7KNvvGhtH/QyiNpeuNmSIrBZ
AmIuyZB1zgxru0WYahqd6qqSIbk0dG9niRgEf+287kAZ/PvnVsijCSTK2ZdB
Bi0+503shwmU8bK0vfsZBJnVtZoqJLgh3Os35MTiy/vCJlkjweOsSFHYOSne
39DmLzUiP/bP+fuQiD3uaK7bR8N0fMWvG8eSmJl6dIaij8I2K9c9Wwok//ZP
wStk2amqGgIr5J4fXEdRYDL9hH4TCMjUhiBNFQlNx+1r3q9EWK+2MjRfJSHK
SA6vuixEoLWi1+8yCYVVXBRRaYt0bbRmoIfE7j+uNCw9L0Dhktg1rsEUnPNn
zxkeLUDGmP0eOToKIraNSNIGC06PDc3YSEMjTXPqTLGGfgQPI0W+b+jkODtr
NIyvMfnykBRn/7yXeriVj1QPwmW+gMEJb7W8+Fs+Do3kz2RQ/nprY1qbFQw7
VD+EXmNgmN0eUJBghV69NiOBnd+YB04pPjWWKJhUa9f1OwMP3UzFNMISDXcX
iuObGMQ/hz9faYGTmunk5osM2gsXhnjdMcdLL85v81IYTFXxn2hCzPH25uaH
aoYBE+7Sv0rPw9g9/aapLP+37io/8TrIAyFkiZFLEfr4gWnacR5axEda/R/R
cAve1u1ewMOaUi9iYDmNWt16631tPIRQzXYPh1i9F5mFz08zh73UgZNdTCEl
O/zQpvEWiNDEhLRupv7RkcECLzynt11Pp1CvcjgaV2mJ9PbejhwV+dG3j6j1
NtpCoix+dd6rpxbwdy5JOltE4t1CdsFGW+Ba76SwnBckdjo96CsNMMfAaYk9
LaVwLGHCreU5PHR4CLvupbD7esl/9Z1+Lnp/btihaqagKW3hXDnAxbSJbhLt
YhqHi7oSM124yI8c/ib2Pg2OcUvrm/dmyL3KFpD/pz8uVg3Vua8ZkCJ3XFX9
Pb0ZYpI3FU0tZGBpwlMaL+KCqfyg6pkig/N8wbCXlIchf55gcYEMBEubwzMe
nKtPOcQ2yaCWTPj87ZA5lhx1vetpkKFsZN5TLKG8/fWRDY1sfDy/r7zJEhXB
hu1KtQyRzbW0fq8V8lawwsyXwfvCiYiTnnzk1e5OsI+VgZb0xCxu4GNidp1H
8WQZLr+piN4dZY3//5d/AbYWNr4=
             "], CompressedData["
1:eJxdlAtMU2cUx0uV1xDa8iiUtpeH0nt7L7IKkyJu+Ee7ollxgiiKOpBUp8YB
jhHRuOFjTkEUfKGIlPEGRUHCDAiCPHSohangxkBFBRUFBKcwGQhrp3PJvuTL
l5N8OTnn//+d4xQeGbiGzWKxgnRX/x7QTo2TXWIwt+psaMlsPryo1Xn9SQyM
Iu42Lb7Lh08il/hKxSALGY2H1bbw1f8bpaGSx/uGXbbFYFaxY9NeGj0rHn+z
XGWH4nOfBUWa0+Bf4e8Uldmh6Wnp8bZEKRQRPwgHR+yg+nzZQwMbKe749qky
PQRw3zzdySGHgom6eHPcSQEm+vwSGkEh+btR7yg3ewQsLDudzKaw0PPRBwOH
7HE1qLYg5x6J1pRo6VlaCAOr8hh5J4m5TmyLzGtC9JtXy1LbSQR15aY1bBdB
SF8ZSWNROBBekXtbJkbVwS3dHCWFV/JMrkG+GGkeWWXy4xT4R1tN1zkT8Elb
knH6DYUiUYh6diiBS6a7TbzUUgTq6wgk4D7p6IuBFinGV1w9sD+MQH3o4ZnP
fGm4zXp+xIJPoM28g78mhUaC9KDiw11iFIyycjwf0Him16dPBKVLDPuECQPt
za4/PcUidMqrh7VsBkq/r0c4C4To9WEV+o/9FxtmH/I2eMNA1PvQ095RhK66
Hcmu9xnsvcDBhpciSFcm1Q0VMIgtDkkdPC1GYZX4QVkUA/WpsKDALwlEpytD
aAcGRH7PfLcJAk7GLtqyizQCOTd7LMIdULe+dl91oK6+g3PsYpsd0CwIaBfe
kWL0ym+a5WzH9/2z/jmOKMkXj5+oorC9VBoca+yI8lN9lc52FKLUxMiuTId3
/ZPwCV5xrkZLwPZF+vEhZxLTvvcT+k0hsPhGv8v+BxI0P79aP7dfhI6a0ls5
3RKIdsSuqrkkxNhoopnxQwnCbSLVRIU9XsZ/vOACn0TKk9q7yysFyMhLOTMU
Q8Jd4ztvYrIAW47te71wjIQo1W88zNEOpks2DCONQrMO68Fttm/rUUqh0ckQ
Sdoip/v2LKMGKVpPPBbn9/Cxda9yM3c2De3L+8+LvuXjR33+XBplAwn343pt
sLs3oJx4RMMuR7AvL9oG5d3li711/jnr+9FaY+2McyPlRgy8273CpxPWyPz1
owEvQwZLZXShVZQVgiVjgXM6aZT6SgSzrlviSSLVb66h4bqH/3tzsCU0DkqT
JCWNaas8RtZ28BC7Ndd1nk7/xqaoST4ZPERu60912SRFSFuLRdwZHv645R/O
fU3BPjsmaGYmD17uSWO12yno7TjWy8OpnQEL0h11vOdyVi2Ks8TR+VnHArQk
FIxMHWNmhU/0fKeT0E/rxntWyFdYXkzM0s3THreCyAprrI43PuJfKHkfV9RV
rmzIl7zV844VuGY/5W35WQJrw78UmslW0OPpP5nEEVnLcLHKEu2LZjR3KkgU
RU9p/CKJh2v2Q9z9GhLnq+evuz7ChV6eT411/hQ/ZtWe5KJcq1sQsRQ2zrvs
FefBRfayiPUzX1FozNWRNcrBm9bYp5JN//LHRWmWUYtMRCPZtKb1lw4OrG8o
2gYbaMgqSY7ZEi6KQ0uE5/0ZuC8STPhM5SF+oKHItp4Be/hmIdPJg6p+kDfD
0BVnI4ZOvhq3fJfXFaV6vxlrJDSWJMjZruDXTiwt7bKGjsoweR8Dald29+1U
G/x/X/4Nxp4vbg==
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerDirectoryIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAEFBwht4IDCb0Dwg3h/2248ZuDgafrm+xEp
eai4IZSWQ+OzwPkFU9UFyk4xoskzwM2D8VHtg/IZeOD8Bv7pMuWnONHM40Cz
D8pvMITzBeRyZTYeM0RTbwQ3D8ZHtQ/G14fzl0h9q07q1UczzwDNPgMHABhL
Lgc=
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {1, 3, 3}}}, {{{16.75, 4.}, {3.25, 4.}, {3.111929, 4.}, {3., 
            4.111930000000001}, {3., 4.25}, {3., 13.}, {17., 13.}, {17., 
            4.25}, {17., 4.111930000000001}, {16.88807, 4.}, {16.75, 4.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{17., 14.}, {3., 14.}, {
            3., 15.75}, {3., 15.888071}, {3.111929, 16.}, {3.25, 16.}, {6.75, 
            16.}, {6.888071, 16.}, {7., 15.888071}, {7., 15.75}, {7., 15.}, {
            16.75, 15.}, {16.88807, 15.}, {17., 14.888071}, {17., 14.75}}}]}, 
          FaceForm[
           GrayLevel[0.89804]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerEmptyDirectoryIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIxIGZigAMHMNlg4IDCZ+CB8xv4p8uUn+J0KJiqLlB2
ihEqzgGlWVD5cHM4HATkcmU2HjNAU28INw/GR7UPxteH85dIfatO6tVHM88A
zT4YrYCd34DgB/H+tgWZ42n65vsRKXk0e+XQ+CxwPqr/YfIMcPNgfJh9ANTj
LzA=
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAEZBwitB6Eb9OF8AblcmY3H9FHlGQwcgnh/
2248pgvnQ/Sh8RkE4fwHh1WPzy0SQDNPAM0+KJ+BC87fcUqYw/opB5o8B9w8
GB/VPg40czmg7tVHMw/mTi40vjScv0TqW3VSrzSavAzcPBgfZh8Ae5IxSw==

            "]]}, 
          FaceForm[
           GrayLevel[0.89804]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJxIGYCYt1Nc98vTzNyYAADHYfN1Z82BKwWhfPvbm2p
ubBZBM633HKibN99YYfGqc7dOcu1HTq+3L7euFnYQXFDUcZEXW2HzTyFa7pv
czikSj6KEN/O4/C99MEcwaUcDhXcKhp1PdwO6VefZ2l/43C4og1SweWgeVrg
+K4dnA79Tz7JX8rndHhzwFLZq5rLwXNug9qhNg6HOO8T7LazuaH2czhccLnx
4cspHjg/Y+LbGvupBnB+7vPfKz9eQvD5QB5kN3To/pv6/Ukip4MxCAgbOsx+
Jrv8hQe3w4/gx0tnPzFyuO/fOz3vkpaDKhvQZ6+NHF6qGXKskdF2eFglss79
oZGDS3fO89+Z2g6aMf2Hvp4wclhSYMt1fbG2QyGI2mDkAHKG6T1tB5D27h5E
eKKHLwDeAYl+
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJxIGYC4uKMiW9r9hs6aMb0H/qaoenQLnbz3HdjA4fl
lcc1rS4JOJROlmAJ0zNwSK6/aVsZIQCRFzZwYAADAQeX7pznv1/qw/mTTtd7
7P8rCOcfcVqbeW8jgs+9dVnl8UxBhyD1BZ0bFAUcZpXPWaRsKeigsvNP+5do
AQctK6AJHIIOX70i2yymCTj4JQlEWH4RcLjHxNkl/1jA4W/7l9vXGQUdgLLX
juoKOsjUJBqFGog7XF9cYMs1XdPh6+3rjcVu4hB3XtZ0sEh3yczfIA61X8th
4/4382x0JOD83ul5Qs0NhnD+r7qsPSWTEXyh5gOnFi41dDhZtm++1HtNB5B3
V240dAjaIdf6+qKmw+mFrts+7zV0uP0TqHGLpkOnY8LTC4cMIeHWp+mAHr4A
Ca2MUA==
            "]]}, 
          FaceForm[
           GrayLevel[1.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerGIFIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}}, {CompressedData["
1:eJxlkmtMUwcUxy+Cz20t7eU+2t57C04DZAkGZUWdYf9NpIjxscocoqKiEEtQ
OiQyIgpzW8IcakDdCji0WkGgIZEMQWVgREBBeUatU5GHgHagGErRCnYwIvuw
Dycnv5zz4ZzzOx6RcZqoaQRBLB6PiWz1N7g69SkRbKrJJ74joWxxORy2Uwlj
3cvd9jYpMpffuFPwh4A5EVbKuFGKcHObKGWAR9BEPyvFdHmsZZmdw5WMpKfi
Wgnuq2q6z9oVcK8qe96UK8GLE6J7jjdyxBy68JYwShBpj1iu65eh3v/hI/14
fcQj7rK9k0VYjSJL3S7BY2/e5BhisC9k5t+OzVKkLvLdkkYxuGb0DVfflWJ3
z3zH8a00LLNXLTuTTiLH3RJAPKcw917XeiLWDaWVwbsatBS6dL3f7N1GYaxL
c/KSFwXdrW/zE3Q0Sl4e7kj5hELsxDw/MlMcxpS1ELksdty56Z4oodD66fG4
S0vkeNW6OtJVT6FXPCN3f5MCaaWv3YhzNA4OZM13msPDW/xBad5lBrrGtNZ2
dwER+6NXpi6VIU+8Zd2TEmFy7xtyNG+vrCByBNSyYXWvnDkEekwTGQoFKBpH
Y0TgsaFi/IBrBfzrQy0g29llr1XPwy3ztoX3USKkZ2BWfg+HblNa9rNqJcK/
9yja9FiB9/4ift8B2xU5/Ks/ej3qKkwx+Ve8T81dfnIeDYeynI6cvK0cCsnm
QLOOR/SZhe8O1MpRvGf4lDWAh8GQcuiXUhl0bafHgr/i4bXPTzRcxOLC0qfR
5Z0cWrpHVGNvGFxPTnKySTj0+dYvWqBmwLb3zK0kFUjUVm/XDtIwbQvVeHbI
sKYlY/M7ZwYfen9eYCtgp1g178VFq4HBjLOeUZohGs3pK9oeaGnMs0w/3RvK
YNfK1OxwFQWzOr84mWahm/V1jA1uaFR4/pTUxMIr+k+2XksiqqjB26lTBvvB
mIqEISksJXpz8qgcRz87/8OwQwrT27ovE/QKZDakBFeNSeES//PHYj8OxX3G
kSNiEr8GJHxxoIHDmoXxtM2PhHnQGrIxiIe9XBWavp6E+DcuMaRs3M+zilqf
DBJrM4uzkkkBQceePLT2/ce3z5cX9l+lJ//9gfx/HDhYdbKfZad8ved/AFKJ
jN4=
             "], {{9.72359, 4.45312}, {9.264159999999999, 4.45312}, {
             9.264159999999999, 7.6084}, {9.72363, 7.6084}}, {{
             12.973590000000002`, 5.846680000000001}, {11.51221, 
             5.846680000000001}, {11.51221, 4.45312}, {11.05321, 4.45312}, {
             11.05321, 7.6084}, {13.21044, 7.6084}, {13.21044, 
             7.268550000000001}, {11.51221, 7.268550000000001}, {11.51221, 
             6.186549999999999}, {12.973630000000002`, 6.186549999999999}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerHTMLIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           FilledCurveBox[CompressedData["
1:eJy9VNEOgCAIxOhH+qU+wcde+v+3XG2tDkF06kabhsBxp2zx3CMTUUjfsRDd
65UD/yy5YQt/PC6Zx2ky6q1il4Pw7+FaJE+s5MHZXbYuJMz2ooG3OZGw25gH
GJC5Wb4uNiitv7qUw5BvHAwNVRGA7YIbqzU4QS//A9dwNtxb7cl0FNQvjba1
h3BxtoxAbktjs+oZkhPYrmpQ2gUPPRDZ
            "], CompressedData["
1:eJxkfQV0FNvSdXAIEGCi4909g7tbAhuHAMGDBwgOwd3dJbi7uwR3D+7BITgE
dwv27+qe+/Gv9e5ab71XryctR6r2rtp1rhrZpXbrZF5eXkn4nzEpvbyS8r/L
fGh5rmnazEhXNXhJlLcZP5a03fYyWWZc2P47Z870ZkTn75Nb/evG3WXnUs5N
bkaGtxdud/rmxtcaXbcuS2lGxN2Kyfq+cmN8cJW9bUxmHN+ap/Pyh24sy5hk
TM3MZsw6cydT2B03Xjb/vfhYsBnxk7s2en+F9/vctnTt8mbsrHGyZcozbuyu
MDd9gSpmxD48t/nZYTf63/9+u2BVM1pML/xS3evGzc77LjWpZAYty72tbvxa
++FK9bJmzH1f9ff+tW4Er5unvCxlRq+6hcvELeTf/4pfVbqkGY2v7n/sR7vY
p/XFUdOMEk/a7E4S7UbSNOOdLcPMaL7qTbOG49zovWfsu+PVzPg8jh8y2o3E
fnWmepczY23lUVtHDXUDtcuPrsf375sy/W/fgW7EzLk5sAnv3/vgYkveQW7s
f1O2x8KKZmwO2eYG7aDk4T65a5uR8mq+geX5+y0X8isDmprhdrVtUWOAG6GZ
zOEf2pjBt1ns7M3xiLgStLGlGWtuJdt4uKsbOzn81TuYUaB7wNftLd14/2yt
z55+ZvjNj+5Yrp4bnX0ynrs8wowbO7NtK1PRjb11SjT4O8aMZrzN8hJujG72
8nn1UWZjXgq4kadywYDqbc2Y09k04nAONyb/OnK4Rw0zlu0Jc+XO7Ma5CgOz
tgkx48ntmvkvODlfz6tXyMHxeNOq64z9FjcuONqlGE1bXm+KvxsLBm47P4nz
laT6yPQ1MriRY/DEPR1pT7l9/PRvHzeut1+x8mO4Gf2/nRxwzduNsQNyDUqI
NKP9z/rh85K7kfFOQOsi7cx4tP1BhWZJ3Bictc2BIH7vm0XBueISXcgV+2N+
TV7PLOP104WRibOKN+1txqqsuT4MTerGx6cpblZabUbxF4Med+TzVyTZn8IU
Z0bdnu7ZfxU3svXrNTnJDzP49iVO0j74YUfbWcktyJbwdVpskBu5SqU43Del
BQdW5G9Uid/jV2Lz1qp+FsTmqXWgcEauj7+NT0/ObUHKfS3uLEvH7zkzstnL
ShZjfPk9h5dPcl2PtKBBcv7wjwttHD9GDGtrwaQFo0LevHfh9sPNpy0zLfAd
vHZx0acuhNbtkj6K9rH3mfJnfuTCkgo7P/2eYcGfcolvXj1w4f2V6pEZ51gw
qvzt2MU3XShfaO+Im3MtUM8Ebp9yyYWkcXExOxZZEHfr9INsp/k8+WeVBQXr
5cux9pgL+dZ0mXt1pQUXfnXwybjfhTy21KeT8vq3PbfH/97hQsC2iHRPV1hQ
tOFyx7KlLrwdFt781DoLVhy9WXbKCBeObtzXb91yC6aV4IwOckHf6Of/105s
MfJ9ux4uHFe2dG93md+T/vuvfN35PUX91+a7bkH2EtPODmnnQuoL5lq3f1pQ
qCrfPJLvU/ztDJ+vFoi7SFuXf2/KkG2+yQptcq9u1uouPGma51HJTFbkXd6g
c/sKLtTe7Rj1irazYuroIqVc+LOfO5F2mmVvk00p4cL+s1ywWawoOXZh9p68
vt2N6rlLWhGWstLp9QVdCHrepaxa1oohlQ8NsmdzIYe8V2UrPvYeeXV4oAtN
BnoP/VDNiqDiaQfczsTvb39kwsFIKzq3L+x+Szv5Yj65ixV3vlzxSxLgwozY
dvZ6nay4f4eOy+JC8P0ak2Z3tiIkV9y8Z3YXuv49Ezq9uxVxfQbXGs7fH67c
7uyenlZcDMjYKEMGF5YdG9gvSW8rrv8tfm52KhcONjneJ5J2lqALhc95uRA1
5lCWjvz9uo8hrkyJGup67z2wopsVR20hg7t80nDm+zdzIJ+35bTlS8Y3GmKu
rPDr2diKL3duDOvxTDP8He2BLQrUy3dbM76zvhUH883NEXRNw+dTznTBtAdd
2tbwy2kNVwpP77KzoRXZbter/IO2aWnoeUc7KyIONS8atU/z+AsrZJdt2qDh
a8NFqfrQDmkxLtWMhRr2z19NV2pF2l4NHs6arcG7U/HZjzpYsT2gzdKF0zVU
i1jYEvy+/BseTTpHO2jXZa/44VYsbFdffTpGw5KXU+Y/HG3FqOix2af21BBe
+UeVHdFWmAt9rtG1m4bBhVOlfrbGil6/h9/b0kmDz9Py+7zXWrH4ab+ufdpo
yCb+hnan8EGbdkb+ux50Zlxvf9p5Gr+aMHKWFd1vmD6W6aIhIf5Y5pMLrYb/
6M7xy16/7+wJVjS80a74pY6a4RfHW2G9HPLK0lpDlq6vOi+iXbLjrqbtIjQM
lHjE3y+W9w7XYMt7z51ymBVz0hc4faqKhhUMj61GWrFTj2MacPbTg7dRHN9N
OX5uqqxh3pfIbFkbWfEr9saihrX5vcNPPDxXg/NbKJ0zUx0NLyWgBPN7erTs
f5TXKxbL3fdyUSs2S9yorqGmK/fMXS6u/9Up8iaG0jb/LfVYs+JRg8Bdl6Eh
McOLXZt5vXFI1gNdgjU86u+3qVIZK0oxHFUP0TDeUu3Y+1pcf/eCr6mlNSzK
M2Hcec7nldr9Sh4to6HRMHV940FWfNu8oVD2CpyvmL3Xekyz4sChMgO+8Hs6
fMjuFTvdirl+zsVT+D7IVyn6/nyuh/n1Fq+nHbZe7Ra90oqs5Q+rdfn7oVmO
jl69y4qtd690qMz32b97Usr3O63Yfe5FzJxiGopYDjdWlnL8b171GZKb4/2t
pF+KeVYMTXN37/xADVrw7WKRk6x4/eVt9DdvzROXrRjxZYjPpy8qKvIxa/tZ
0WxvlXRJX6l4JNuR+y9gf0LOyo9VnJs8Cfu5X053W91zS7yK7w56oLpWqNMn
Lhh1T0VEgO/86KpWzFLpgO6oqPl95eD4Qlbsp7s/d12FIs/PbUWhGwxkV1Sk
a5m2jE8OKyIJYwaeVvGrMB0px/9a5apP35xS8cD/yN9w+rPEXBdH7DumonnE
0EE9vf/ZxWTheVlxKuLdn76HVJwRx/Tbgu7jJz/5SPvZpsxPRvyh/5R1vUfF
qU6Fhu7i7/V5jlFh8isde/eLBTnOZjy5d7eKNbM2fqmQ1IrZf6cM/rlORRjh
2xl/qxE31qroHFMxpHw5Kx4/GTxm2RQVjAKtv5W3AotPTV8xQDXWK+21+XZm
fNJVxd1nsZ9HZrbi6sQKV281VHG4ddjsE24rMq/blXJnqGrML6/r+KUqn78i
DL5cXxP8C88ZXUbFnEIVX60J5ffuLlJ3YkEV15d3DfGmv5lQtED0L1XFQU7X
rZZcr7OJrGgP9fXO1HWsFV127skfQrv5gz3funL/1mkRpZ6ivUDW50krJh4c
Xqgl7cjJjkO7Xlghy90rC+1pU7dtSWXDvbODuvtlU3Fz9Phuf7LYkPPW1kxj
s6pYNvlkuroVbbje48rPWNqOoXFZwsL+2bLsqof/+32DE9a5lSJsGPohnSUx
UMXoZGrDw61sCJz3qtAVk4rue3NlKTLEhkbyh78ViFu+SrtknYT9sfEKYsuk
KdiJdkbBxycVfM446a3S24a5efMeLrVOQaj78tlstCOWP0WGlQpuNutdw0F7
5QnzsQVLFPRedanfpEE2ww8uVpCjQ770x8b8s4tc3lT2TLQNNeDb4thyBbLM
C86yQdxn+c0KppjXTByy2IYNG3ln2mfS1Y09tJn2hDvtvGhfis3U8cNpGxzj
kw7SaI+/8SVt78f/fp+y1eY+Q37Z0KHL+1GntyuIOZ7szCra7ZYU+DNop4Lu
Vxf/rvzBhhjC+yT7FazrMHzNTy87xD1ueqygP+HWrbR2jFnGFUb7YP2N1b5n
tuMHUXzSJ7R9CUAq2DGC0XeQv4oiXBZHmv+zTTJuff7Zo4c9jz826n/tibmT
F8/2UMGiu+9q+o21Q+DeFI6/z/q+rk+0+84vGuZ9leP5qe6YuxPt6FR3dbKG
nI9NeU23u0+2Y0CSr5fX7uN1iSuT7CjI1zi8/J+t+8+BChq8zrsva7Qd/Z5k
SLloAOeXw5ed73sxg2tkJdpxfV9kyV/ZjvcFibTaKyj0o818a0E7BD7fb8Xx
6n6oXC3FjsNZOsaVoz3r4sfg3VY7ehcoFhrRlPO/Zky7nqns+CzxO5z2Tdlp
drxMGtHmZk0FA+U9OZ755hwq+yyU87vke/5nPrRzrPW9VF7BMwmUGe0YV6b5
00sFFATvub80G+3vvR4syJRZQRYzgU2iDdX3HN3XxE/BPIlTP2w4db5rslIZ
FHjrC91m8KP0Cio/ZMDg+/hea5yscQoFF+genqSzgyTvar67TmS7H9WjpcUO
rSgRH+3DyTvfO8/vDRb8ddCJyYJ7a9pxmjDj2yYnks5LbV0Uwe+fk7uh/1In
knM7Je9sx8gLHV+bZjrRk9vwxmA7Qvo1WFN4khNbmm2x7uT4t+44aOqlWU6Y
jhJgz7JjXbnOo61TnLhNunBqhR2Ndl4PTMPfx/G17WvteBz2ovnvIU5kRAff
rLvsoNfE8OFOg18etyPw1oVvdUY4YTnRver6h3asHJtufV/aunv/Y0dU3/4r
c9HuHXl9wlKbAx9utJrUf6wTo5VUmc8VciDfsMZ9Ps1wYlrWKjeqlXKAg3/z
Pe0YCVSNHShbInjkh+lO+NWfOah+KwfcTU65dk91olHq7jWPRjnQazqZ4GS+
/4/BHfb3dKBRq5JEjk7ME/jU14HV9c8UOM7fR7oybn7VxwFGy7stxznhk3bH
qn5jHIiaXcQ2a7QThUZx4GIc+Pby8dJ3i5wQdzLrjgNECfWnxDpx7nqitvSN
A3tJYzfccOIoYVzjzw60+fVzYtrnvL84oAQHvjdIvJTiixP6cvvqQLUHRASc
788tzzWtmtqJojV6nTqfkfvlxGqvoLxOXClBYp1DQd2gxqm75+O8CwEuqCD8
a9NMv3g9vSUx6+5i3B/1Wt/3V52otaTGkyplFaypvS1VI9pP53fqXK0G75fe
//Gv3E7I6r3ZXAHJutda2jov60n/1G9S02WJDnB3t1g1ib9/vuLbpAxOAx+N
UJBa/JPNie1Pm4xfP15BticjFp3P4TT80UTP88o4kaz8kYnZxyo4R/i1IYTr
5HK3wjH8+97cFitpn6yoRNwYonjwkROn1vdId2qygivanR+DQ52YlDZV2Rj6
4+Ezy02IquTEhnu9l+7ZRH96MOfwv9WdOCRxkf6xSPCB2rP494NmPT9yb4+C
yeKXaPeShX+Q7798XZplYU7MvTd9zKgz3J8jRv9JQzt83ozhne/zfoTxk2gP
qX59zZgE7s+yzwv3zu7Ewj+vK43/TttU5XMBft9z++qEyn8UlC/OAEA7TPx/
MhW9xZGUcmLWzCwrl6T9Z+twsoCKLYRxKfi9Ou1lfHyyLubd+AcO5BFAU1jF
y3KBcbs2OOB1umfC52AVHzlc92Y5kKa6qeqZCiriCROLjnBgvfxZDdXArd0d
yJ/+WKXjdVXUvpa81rcWDtl130rSnjEv5JJ3NQeOP3t8u2YLFVdm9ci+KdRh
+E3iizmP+AK07yzccSdPTxU5VvxacbutA4fSjEpdjHaExP9xtMVf0m5zNO+X
T6scSCHzHqUiHy1thwNEg+tmtldBNnyw8ql/9uRp9Z8HXXJA0iMn2qk4/iVb
k+ikTvzJV7bv9loqSvy+Fe2XyYkTf2IGfKypGvmpCk5MHLlzQVVeX8TXKrTL
iaaCJ4mPGmVuYLuw34nADtU/TV7O8XgpmQYn6qRYPq3EUhUZ62jjIp7RT6Qu
NjLHShUp+X8neUM/wOHwo11z2qa5Az9xfc3ZN2vKZuKbbsU+rf/hxPLtRb8f
3U6b9OhrohOXScf27FUx5sfHpK+TKVjWv2Pz9ccZDzn947kvFxRctr0o8WXV
6bUvvaEdM56A6pyKMnGDvGqnVcAou3LwBdXA4fTjHYVH8u9rrBtUwuGrYIUQ
eNrZLmX96DYrmLtoCyO7ClmGeWmfkv1wUcWuXtz5QQq6SJy/rMK2M/eZKEVB
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
AP/nC/0B0DiClA==
            "]]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmIBKK1/V4WtUVTBgQEMBBx8fZvMlyRKO0wILlGZ/p/f
4e7s+wYXBcQdzDaENh19KOTwIOM4735rUYcNM2s2n/UVd3hiuv7VmjRhB43m
xU+u7pR2WLC2uXlvpohDvcGHO9UZCg4TxS89VDwj7uDy6+3rA5JKDvWNCg5t
etIOnEde/2I9reyQflnwwFklBYdQwTyjVT4qDhftwj7cjlByWF55XNMqSdnB
etUshVd9Kg6fVF7OOlmuBHWnmsPTT/KX8v0V4HwDkD+uSjusObqcQeK/qoPd
ZhWgX0QdlE3fJs2KVHZYoSR6TIxJwAHdvzA+mA5VdpDclqatf1LawfsEu+1s
ID/526a3W66KOxxgybt7llnJYeI1iRInDTEHp1kbM6x+yzvs21b363yViIPc
nblbb7+TdqgyuTr5Z7qoQwbX3Os3XMUdqr7FLFNrlHA4I5fB2qYj4vB/GsOf
4FnSDmbGQCAs6PBcvnbyMkUFB6HvEb8uqAo4aFy57P5AXcnhkAmPvOBloPxK
vp2SeioOfcrXHgU3CEPc3aDqkLM9NmNdsTicD/P/apmoFOt6VQe+22KpZi8U
HFazJeZ9F1J28PVy3D49RBnDvwBU6r8x
            "]]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerJSIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGCQAWIQreD4MfnMXWkHLatJp+tPyDsY7Fbn5/4qi8Hvkk9+
F3VIxMHjYZXIOnY5hyX39/HNKRZ2mP1MdvmLDlmHDczPezR0hRw03/LuM5gp
4yC+/SLDPSdBh9p125LqZ0o75IaBWAIOGx++nLrJR8ohEqyA32F7Uv1N258S
DgxgIODQwuu/fspScYc9JZMlWK7xO6R9f5K4MEzMQSdV8lFEuIDDk+Z5Z1f5
izow+gJV6gs6aEtMvcKZIeJgbxq3y5NHyOHMu5OHnd4KO/hdnBjzz1kYaq6I
w10VtsapzSIOhjO1JKaKiMH5bqqlTLM4xByeXlC6/XOfsENUivV9f18xh9ML
Xbd9/ivkIKEWzLr4kphDua6i/JccIYc5RxQ2FGWIO+ybL6V/94kg1B0SDpZb
TpTtmy8I909km8W1o2sFHWRePzKTOiDpIJx4+LL2UkGHFce8zTsbpRzC+HQ3
zX0v6FB8XeiTI7+0A8camaiUaiGHdTfiy/znSTuAnNErLuxwZRYogKUd5tvo
AJnCDrD42rqs8rjmLhEHAIs2smM=
             "], CompressedData["
1:eJxdlHs01nccx81KWi3PzXPxXPyu1Amtm7Sy3l225VARpSKkqJzUqq2WiSLa
Gq3mJEORRiG7IOQRoiakVWs6OKZ1Gc1qrKto7ft7fs/xx77n/M5zvr/f8/1c
3u/X50uHblkaZmlhYeFHHuHX+oxu1Tojj7lxdxrSZimRbTepk0vkcXmUe8ay
LiWaT7xf9tidh8uh7BeTw1XIvEj9sK2HQ81uvdv6iypY7T0y/8tNHB6Uf/9m
t5caE9VHbo7uYVEzLnNqTqkalunW2uNBLD4oe/zq5gs1DKd6Frp0MbjtLATU
mOMyKL28ozorXYNvjKmHbF7SuPKosX6esx3Wxra576qgMfv80lT6oB00d1ao
yg/TMKV11OL3MSn5cWQfnOZlm9SkxY4lBmVEMo1OjlQWr0MVCRdVRuMdo6PN
mOl66Bvvz/n2NY2s2U430/P0KNsXfa1kJYOh/P4bixgDPFcmurVeYtBUP69o
Y5ABkd2D+f1TWJye3jJrsY8BCzZu6UvIZ9HgOeOLuSEG2Cf0+lQYOIQ/v7fm
hNKAVFJW92cc6p+OD/wqTo+0zbL42iYOuug1U5b16fCMvK57yon62utwNzfj
ItXHITOHPTf0oVY8P8gP79mOgZiIIR5uL+rWFVA67KzOIg7xYj9PdWLdOTxG
D2SvLynQY7LJUB4ThDQbDGi5QtZYHgVxPh7HLOzRdvW5791cTowXYg/NiOXj
nKdwGNGdNP5hiz1UC72H1CUsblcTAy2p4f4tTIuCn1DwHgbnkq36lNYUXAvf
8w+4TqNO5eA78qQ9Nn0ales0n0ZUw4R3v2424Jequwp9I4WXMRFVH8sNYtw4
SvS/XyfWu4/CzNZLkdNqtdg8bU85yPeTpP39pXYgpn+y1UiZedIg+SgRlKJh
kn2kRqyvmIbQRrFeDUKDj8dqBo+i50wPilJhqrDkLIjbf+gdVehTkgbTWPxN
8Cp6oEQsKStFzUHAoitGCXKq0iOJw8/hv3ZH9NpiaYUhofc6h+W7vysLjbU1
c8yhLZiQ1qrA4lDJiplPOMhyz19QOSgwcb+SSMyhobIi2eojOVatm9W1pIXD
YDMBuk4GU7p9HJzCCMn+MrF/jkNaZ8r+hHYp6hJP+TcVs/AP+LHmr+NS/BQp
CMLChGWRFNsOHLz3Tw0D7duCglLRRzC4zhBQ/pSisv3Aq7BbNLZvOPwwOlYm
chxDI36SV95bVnL0bj9rO+hJY17I/WtMhxwFBJ9Qbxpn83Y1TKhUIOK3rQcO
LqCG996C4POp4f+3n3kZGBlGYYZdbQD1hhzxBKs9eRRGCQPoJQOhOqvwIYVA
am7/2iQpBHtuLKLFup5LRJ6raNGnYxJ4uLymX7ky+PxJx629UyUI8iSTYWSw
OvLSv8WDNsP9i/xJIFxTxmcsgkdd1fi024C4NdaykBP58pWIfIAXeWSl5ny8
eK5VKuo/wgHpO8mEDcjMcR1wlFwTrhMV4txaOiCx0e/C6XsKs648TOkybPH/
+/I/ZYc7ZA==
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerJPEGIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQAWIQnehv/cc0Utoh78Y2jc0P5R3KFu70U/aVxeDP2j1t
Av8tEQf7SMMY2QRZB6uXtY+z+4UdPNrbDepeyThMsytxrPUWcmioLXl1il3G
YQZIfZSgw4U7zoe+y0k7lHmxv/5fI+CQy7jw64enkg47Xp6vW8Ih4PDtZcUZ
h6USDleeZ2l/ExdwuHBx1bSSFHGHltA9EytZBBx45AWDlTTFHAq+zvmyrxDI
t/kup2cp6nDtUTBDj7ugQ1WXjFJenIhD1f0ft4y1hRxmJy5ec/+NsMOJuZcO
/ooXdmAAAxEHtfXnDBVmizgUXJ7/1+OjKJzfqmVaveCpqMO8/mznozeEHU7J
LUzzUBVzSDp8WTtVUtjh3gmbT+yLxRzamBUjD7QIOTy8ZPhcUlvc4QXDQRnb
f4IOj7NSwqOeiTvMkr4sPG2HINw/PoWhN8uPCjrszCk5558o6VCiMv3/hH2C
Do9KJq3VE5dySMpRPOHIKeRQ77G/VnaGlMOhlFUJIZOEHN4cV/spKC/t8OCw
6vG5RsIO8U6s7eIp0g4MJTP09YH+gMXXn6a7G3IvijgAAJv0uk0=
             "], {{8.27593, 5.600999999999999}, {8.27593, 
             4.0764499999999995`}, {7.7903, 4.0764499999999995`}, {7.7903, 
             7.970409999999999}, {9.149, 7.970409999999999}, {
             9.495699000000002, 7.990780000000001}, {9.836413, 7.8734}, {
             10.097, 7.643809999999998}, {10.32893, 7.4181300000000014`}, {
             10.453540000000002`, 7.104199999999999}, {10.43952, 
             6.780890000000001}, {10.46035, 6.45471}, {10.337919999999999`, 
             6.13566}, {10.10423, 5.90714}, {9.834327999999998, 
             5.687319999999998}, {9.491156, 5.57794}, {9.14383, 5.60102}}, {{
             8.27593, 6.020399999999999}, {9.149, 6.020399999999999}, {
             9.365609000000003, 6.0059000000000005`}, {9.579484000000003, 
             6.0753699999999995`}, {9.746219999999997, 6.2143999999999995`}, {
             9.892242000000001, 6.3635}, {9.967786000000002, 
             6.567780000000001}, {9.95391, 6.776010000000001}, {9.963729, 
             6.982559999999999}, {9.888697, 7.184149999999999}, {
             9.746219999999997, 7.334009999999999}, {9.592580000000002, 
             7.478730000000002}, {9.387888, 7.556730000000002}, {9.1769, 
             7.55095}, {8.2759, 7.55095}}, {{12.779349999999999`, 
             5.8757800000000024`}, {11.18246, 5.8757800000000024`}, {11.18246,
              4.495850000000001}, {13.037669999999999`, 4.495850000000001}, {
             13.037669999999999`, 4.0764499999999995`}, {10.69683, 
             4.0764499999999995`}, {10.69683, 7.970409999999999}, {13.01235, 
             7.970409999999999}, {13.01235, 7.5510100000000016`}, {11.18246, 
             7.5510100000000016`}, {11.18246, 6.29641}, {12.779349999999999`, 
             6.29641}}, CompressedData["
1:eJxlk2tMUwcYhos2RYXNnlLbCr1gClJ7enowKIg4eQUVNYgFB5F0Gmy8kCIQ
OorMxigbImZeQIMixcpFx7wEAaGwSbSiBfFSdU6wKAw3ZaZMhCETjbgds4k/
9iZfvjw/3zzfN0OXHrdxAovFmsfM+/1vAjHz/kLJgUQeZAL9yuGLNHj88NZH
RQSuOvjzz62nsSDmbuEX77ioxPFrh16qYSke0SmquKBtC+cbjWrEpZRsLY3g
YkaNIbnwOYV87+grgwQX5R4ubd8GCkvP2qtYIi4cLZas0TAVFE1rYr+ZzEVt
0C5HiooE33wgJXIjgebFIx02qxK59sc3z+V5IX9R0tM7BiWKK9tepP7IR/ze
4ZByjRKlLy8ONbgL8F2AamhnnBLL+grDRWuE4yxoFXwtrhchqKI+ZDRCiYrc
o9YdJ70xqOE/89qjRM+eRDrvoBj3nO29iukkBlLfnJfNkiLk6ZQXhnISzU37
OINZMnxLsUMVGSrkZK+9lCT0hU4R0BW/jIK849fVLE9fJGe61waNUJjdb9fE
8H1RUDY6u8+ixqZfpl3+2yrDidOTKwbkNEqOMnFK8ba105JYQSPbuN/N2S9B
qyam/swgDevw2M/Zp8T44IOVnsO2r/JBlCAwR+tOj3PVDZ1u2I3G6ci0PJ9A
MaR9NzxqbqvhHRl6t3qCBLWdF8J7TGp0aCdq/YslWNp+5ktPhRoFmbeemCkp
lnS7+zb8QKHY302v/0qKhs2H2d8vpzAzWNaZp5eix4+TU3RehTo/rKRMUtiy
OZ+MyVWopnldhgEJfn82ZDI7SHA5FtPUV2IUNrX9tDuNRA9TN6HOB9MrjZ/P
XUTijzSLqyDMGzUa5jCiSdi6Ey88bxGNs+OIMEm2/T9fESTyj83KXDdRgLIV
t6TJRhJsIakP3McHO+FTqq6bxLu/jL2lsV6gihrlpcEqBGcYLkXG8rA4oXFb
zHUVXOw5RHAzAeJtun/YJgrRGfHOrXYC5s/uTPFk+p74Myv3XguB212pwhIP
5n7bQx4+ekDA72b9GKll2FVgfszhYUHZluvTGH9PApiHoHkY6LeFyrvUcL3v
Y+KhkWNdUTOJxpvlDavafvvIvdv41VHrBdgtcDperab+x/OWRBleTxWN+/3A
/wB+8G7/
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerMIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJxllAtMk1cUxyvSCSgOaUtftP2+rxT5KAXFqUVE/tOCVREVg07GBGFA6iwG
EAEHuimE1SG+R1ScgFJBqCAL4Mx4jIGOKuqc4nyhNgMVxmM8dFMHaxfDEj3J
yc0v59yce3L/55BRm0NirBgMxjKzW07H992OJc52wa2q6nr1bzKE/lhyKnil
C5xrFMZNqW44sng08pGPCwx1K0IL+XKsqptdGTooRWyB92hGjQJUPeu79ekU
jim/f1io9EDbperCqCAKT2dv1XX/I4eClAxvaidAbdVfTzvujlPBYG2YRaDd
mBnRXesBZsvemSltEsxx6Ts3nKCAXD3LaXm2GOFh9rrPc7wwZN0UfG6pAJNr
011kGQrkje3b/moeF/n6a1PPd7mDDt/bNFLCweUd6oYMezfEF9+OjY6ZhtSC
4LQtx2SIfz7JqPWdgrq1hqC/Wigw/jMb3OQZTp7RSMZ56vwXYk8fx3c46bbj
4IebHfFgElGtWy1Dj/PEqtv3nJDVs+q8mDkdyQd51ms8+fBsCY15yKGxZX10
XkkHH2yV+YbMA2OpFWFHHMTIfW/ASd2owDO15xgpkiBIbxcoM8f1vRHrNFEE
Znz5ccqQNY2fFjcfUg8S2JArbqjVTMdX7bvnXNJJseJwP1/X6IIby6McPkpz
ha6/uZybRKGy/AOaaaBhena4asp+Aoy1VdHSARr9fuGJ9zUELtjR/qWB7hAr
41SaCvE7/Jn6fvSzRTSsbHdLos8KwTm7+PG2YWfEWqxLhF8t9f4WwOGTlQ+9
J4lBt3Ul8F7zMBznH6Iyx6e0JQs0tlw0ZoiUcZkitEXmqNlGLjaG2F2oU0lQ
cWDvA2Y3D3ZanzzTRgKa/b3p/qECPHlV+ucNexJZ83cKaV8+vOJPTvghmYSX
cldDxGsuvk4YdWU3kchgai4WlTrBSp7tdKePRL1wst0uby72DM0tdEigcPB0
ub7nDhfVneG7y7opSAsVT0LyeTgaVtPOXSeFdt+SwKtWPPSY5ggafaVY9MQs
zDMsPI1hX1b4UZjad/Wudi4Lz93MQoohoev8Zs2iRDaMnI5OagGJm0ULWkV6
DlQve3sabUn8/MUfI33XnLDjYtZEspVASlxvzWQ/Dp5eHM6U1UuwzPKvAWzk
h54oM6SKsDDpeGCYHRvNCw2ajmlCrGf7Dcy04cH8WmN9mRAs5kvVt2xnpAYM
NBy+IkTbtpmHWPYEmoyFATVJQhSZxnJLeAQKHkUF2McKIXdk3RyQEfh9e3YR
IoTj88SYdyWPGylE5WnR6NEcEpR3uWlPkBAjQ3qKE+v6RtcMhCsdDjCD6HF+
8Uup/ESxFDZmea7MF2BGuipI9+l0PJ+g1pqa+fCxpBNueBmubRk9wIdk2mpK
1/E/uxYX3Ft2lB7PP7Qz3kuT7o4z8hOdadeFqF5aqcxfIkeXpeFR0Zu6Hrib
aJ4Ycx+PK1oFI6CRZaPMdL9FwqzKzQPFrvCn9CrHOine3k//Ak892E8=
             "], {{9.617389999999999, 11.266640000000002`}, {
             9.355364000000002, 11.506809}, {9.073421, 11.7243}, {8.7746, 
             11.91677}, {8.7746, 11.91677}, {8.66219, 12.48534}, {
             8.587309999999999, 12.73394}, {9.09304, 13.23107}, {9.16793, 
             13.30761}, {9.65491, 13.785590000000001`}, {9.687847, 
             12.945878}, {9.675329, 12.104999}, {9.61741, 
             11.266640000000002`}}, {{8.50275, 9.731640000000002}, {
             9.072936000000002, 9.76756}, {9.631433, 9.558930000000002}, {
             10.038419999999999`, 9.15798}, {9.701419999999999, 9.06244}, {
             9.66393, 9.043289999999999}, {9.32679, 8.947599999999998}, {
             9.042788, 9.148219999999998}, {8.700315999999999, 9.24909}, {
             8.352910000000001, 9.23443}, {8.391562, 9.40336}, {8.441624, 
             9.56948}, {8.50275, 9.731640000000002}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerMXIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJxllAtMk1cUxyvSCSgOaUtftP2+rxT5KAXFqUVE/tOCVREVg07GBGFA6iwG
EAEHuimE1SG+R1ScgFJBqCAL4Mx4jIGOKuqc4nyhNgMVxmM8dFMHaxfDEj3J
yc0v59yce3L/55BRm0NirBgMxjKzW07H992OJc52wa2q6nr1bzKE/lhyKnil
C5xrFMZNqW44sng08pGPCwx1K0IL+XKsqptdGTooRWyB92hGjQJUPeu79ekU
jim/f1io9EDbperCqCAKT2dv1XX/I4eClAxvaidAbdVfTzvujlPBYG2YRaDd
mBnRXesBZsvemSltEsxx6Ts3nKCAXD3LaXm2GOFh9rrPc7wwZN0UfG6pAJNr
011kGQrkje3b/moeF/n6a1PPd7mDDt/bNFLCweUd6oYMezfEF9+OjY6ZhtSC
4LQtx2SIfz7JqPWdgrq1hqC/Wigw/jMb3OQZTp7RSMZ56vwXYk8fx3c46bbj
4IebHfFgElGtWy1Dj/PEqtv3nJDVs+q8mDkdyQd51ms8+fBsCY15yKGxZX10
XkkHH2yV+YbMA2OpFWFHHMTIfW/ASd2owDO15xgpkiBIbxcoM8f1vRHrNFEE
Znz5ccqQNY2fFjcfUg8S2JArbqjVTMdX7bvnXNJJseJwP1/X6IIby6McPkpz
ha6/uZybRKGy/AOaaaBhena4asp+Aoy1VdHSARr9fuGJ9zUELtjR/qWB7hAr
41SaCvE7/Jn6fvSzRTSsbHdLos8KwTm7+PG2YWfEWqxLhF8t9f4WwOGTlQ+9
J4lBt3Ul8F7zMBznH6Iyx6e0JQs0tlw0ZoiUcZkitEXmqNlGLjaG2F2oU0lQ
cWDvA2Y3D3ZanzzTRgKa/b3p/qECPHlV+ucNexJZ83cKaV8+vOJPTvghmYSX
cldDxGsuvk4YdWU3kchgai4WlTrBSp7tdKePRL1wst0uby72DM0tdEigcPB0
ub7nDhfVneG7y7opSAsVT0LyeTgaVtPOXSeFdt+SwKtWPPSY5ggafaVY9MQs
zDMsPI1hX1b4UZjad/Wudi4Lz93MQoohoev8Zs2iRDaMnI5OagGJm0ULWkV6
DlQve3sabUn8/MUfI33XnLDjYtZEspVASlxvzWQ/Dp5eHM6U1UuwzPKvAWzk
h54oM6SKsDDpeGCYHRvNCw2ajmlCrGf7Dcy04cH8WmN9mRAs5kvVt2xnpAYM
NBy+IkTbtpmHWPYEmoyFATVJQhSZxnJLeAQKHkUF2McKIXdk3RyQEfh9e3YR
IoTj88SYdyWPGylE5WnR6NEcEpR3uWlPkBAjQ3qKE+v6RtcMhCsdDjCD6HF+
8Uup/ESxFDZmea7MF2BGuipI9+l0PJ+g1pqa+fCxpBNueBmubRk9wIdk2mpK
1/E/uxYX3Ft2lB7PP7Qz3kuT7o4z8hOdadeFqF5aqcxfIkeXpeFR0Zu6Hrib
aJ4Ycx+PK1oFI6CRZaPMdL9FwqzKzQPFrvCn9CrHOine3k//Ak892E8=
             "], {{9.617389999999999, 11.266640000000002`}, {
             9.355364000000002, 11.506809}, {9.073421, 11.7243}, {8.7746, 
             11.91677}, {8.7746, 11.91677}, {8.66219, 12.48534}, {
             8.587309999999999, 12.73394}, {9.09304, 13.23107}, {9.16793, 
             13.30761}, {9.65491, 13.785590000000001`}, {9.687847, 
             12.945878}, {9.675329, 12.104999}, {9.61741, 
             11.266640000000002`}}, {{8.50275, 9.731640000000002}, {
             9.072936000000002, 9.76756}, {9.631433, 9.558930000000002}, {
             10.038419999999999`, 9.15798}, {9.701419999999999, 9.06244}, {
             9.66393, 9.043289999999999}, {9.32679, 8.947599999999998}, {
             9.042788, 9.148219999999998}, {8.700315999999999, 9.24909}, {
             8.352910000000001, 9.23443}, {8.391562, 9.40336}, {8.441624, 
             9.56948}, {8.50275, 9.731640000000002}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerNBIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 17.5}, {18., 18.328427}, {
            17.328429999999997`, 19.}, {16.5, 19.}, {4.5, 19.}, {3.671573, 
            19.}, {3., 18.328427}, {3., 17.5}, {3., 3.5}, {3., 
            2.6715700000000027`}, {3.671573, 2.}, {4.5, 2.}, {16.5, 2.}, {
            17.328429999999997`, 2.}, {18., 2.6715700000000027`}, {18., 
            3.5}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
             1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {{{5., 12.}, {5., 11.}, {2., 11.}, {2., 12.}}, {{2., 
             10.}, {2., 9.}, {5., 9.}, {5., 10.}}, {{2., 14.}, {2., 13.}, {5.,
              13.}, {5., 14.}}, {{2., 8.}, {2., 7.}, {5., 7.}, {5., 8.}}, {{
             2., 6.}, {2., 5.}, {5., 5.}, {5., 6.}}, {{5., 18.}, {2., 18.}, {
             2., 17.}, {5., 17.}, {5., 18.}}, {{5., 4.}, {2., 4.}, {2., 3.}, {
             5., 3.}, {5., 4.}}, {{2., 16.}, {2., 15.}, {5., 15.}, {5., 
             16.}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAQAWIQ3fTo+Izdx3QcQlPvix78r+KgN2HBD8Nv+g5/JioZ
rZmk4fBh0XqFsx7aDp/Ymc/vna7p8OfFlannD2k7bI7jeeoSrefwr2J91MwE
dYeItT4/lubpONysiZHW+qbiMOeIwoYiDwOHqR/fG+v1KDlM8HQ7dwgo337E
dppdiIzD+e/Bj5cC9bs/rBJZ5y7r8AmoTGaGpoNyTkXV0jfCDjnndTgDJms4
TD91W9DPW8rhmF7gXlMGVYcYBcePyUB51ry7Z4NzFR2u/VJaqAvU39DULWqa
oeBwaMUSP4dgGYe603P0uj3FHTbNfb/8WLeSQ15Y7bptStIOX70i2yyA7pv0
tsbe9J6QwzFv805HoPslpl7hzADKH0lZlRAC9F/Dwbwb2zzEHbafeblpBtD/
/AJnLj5OV3AQWrr3oDgwfKYaXP62PkfRAQBEtY9z
             "], {{14.80901, 9.345419999999999}, {13.743519999999998`, 
             9.70987}, {13.016919999999999`, 10.654219999999999`}, {
             13.952580000000003`, 10.306610000000001`}}, {{11.37113, 
             7.1364199999999975`}, {10.71228, 6.004419999999998}, {10.71228, 
             7.177}, {11.39769, 8.1788}}, {{9.82133, 12.979130000000001`}, {
             8.690819999999999, 13.38113}, {8.03666, 14.26438}, {
             9.224139999999998, 13.742750000000001`}}, {{11.738219999999997`, 
             13.74254}, {12.92535, 14.26367}, {12.27094, 
             13.381170000000001`}, {11.140869999999998`, 12.97931}}, {{
             13.176730000000001`, 12.69978}, {12.60295, 11.88607}, {12.63669, 
             13.113}, {13.30869, 14.019279999999998`}}, {{10.48084, 
             7.6483799999999995`}, {9.600349999999999, 8.933119999999999}, {
             10.48084, 10.12788}, {11.36133, 8.933119999999999}}, {{8.82607, 
             11.30619}, {8.782, 12.866109999999999`}, {10.24941, 
             12.343890000000002`}, {10.24941, 10.82582}}, {{10.71228, 
             12.343890000000002`}, {12.17853, 12.866109999999999`}, {12.13679,
              11.30619}, {10.71228, 10.82582}}, {{7.78548, 12.70037}, {
             7.653829999999999, 14.01924}, {8.325000000000001, 13.113}, {
             8.35872, 11.886630000000002`}}, {{10.113909999999999`, 
             10.394459999999999`}, {9.233909999999998, 9.200330000000001}, {
             7.73775, 9.64138}, {8.6871, 10.875230000000002`}}, {{9.56485, 
             8.17925}, {10.24941, 7.17699}, {10.24941, 6.00399}, {
             9.588669999999999, 7.136619999999999}}, {{10.847769999999999`, 
             10.394459999999999`}, {12.27461, 10.875230000000002`}, {
             13.223969999999998`, 9.64138}, {11.727799999999998`, 
             9.200330000000001}}, {{15.12577, 12.00872}, {14.018169999999998`,
              10.766060000000001`}, {12.710669999999999`, 
             11.251830000000004`}, {13.495080000000002`, 12.36425}}, {{
             10.4809, 15.38392}, {11.32134, 13.94576}, {10.48092, 12.872}, {
             9.640999999999998, 13.945920000000001`}}, {{5.83618, 12.00977}, {
             7.467, 12.364930000000001`}, {8.251059999999999, 
             11.251930000000003`}, {6.94357, 10.766800000000002`}}, {{7.00905,
              10.30738}, {7.94515, 10.65472}, {7.2182, 9.70992}, {
             6.152049999999999, 9.34592}}, {{6.25151, 8.900640000000001}, {
             7.36125, 9.27952}, {8.546149999999999, 8.93023}, {
             7.5544899999999995`, 8.616499999999998}}, {{7.776040000000001, 
             8.210890000000001}, {9.1027, 8.630609999999999}, {
             9.136519999999999, 7.219290000000001}, {7.60984, 
             6.5491399999999995`}}, {{11.82447, 7.218990000000002}, {11.85887,
              8.630529999999998}, {13.1852, 8.21038}, {13.3511, 
             6.548449999999999}}, {{13.40685, 8.61593}, {12.41507, 8.93009}, {
             13.600359999999998`, 9.2795}, {14.710359999999998`, 8.89981}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerPacletInfoIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 17.5}, {18., 18.328427}, {
            17.328429999999997`, 19.}, {16.5, 19.}, {4.5, 19.}, {3.671573, 
            19.}, {3., 18.328427}, {3., 17.5}, {3., 3.5}, {3., 
            2.6715700000000027`}, {3.671573, 2.}, {4.5, 2.}, {16.5, 2.}, {
            17.328429999999997`, 2.}, {18., 2.6715700000000027`}, {18., 
            3.5}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
             1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {{{5., 12.}, {5., 11.}, {2., 11.}, {2., 12.}}, {{2., 
             10.}, {2., 9.}, {5., 9.}, {5., 10.}}, {{2., 14.}, {2., 13.}, {5.,
              13.}, {5., 14.}}, {{2., 8.}, {2., 7.}, {5., 7.}, {5., 8.}}, {{
             2., 6.}, {2., 5.}, {5., 5.}, {5., 6.}}, {{5., 18.}, {2., 18.}, {
             2., 17.}, {5., 17.}, {5., 18.}}, {{5., 4.}, {2., 4.}, {2., 3.}, {
             5., 3.}, {5., 4.}}, {{2., 16.}, {2., 15.}, {5., 15.}, {5., 
             16.}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
              3}}, {{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 
             0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}}}, {{{6., 13.5}, {6., 11.}, {10., 11.}, {10., 
             15.}, {7.5, 15.}, {6.671948, 14.999096000000002`}, {
             6.000903999999999, 14.328052}, {6., 13.5}}, {{9., 12.}, {7., 
             12.}, {7., 13.5}, {7.000358, 13.775994}, {7.224005999999999, 
             13.999642}, {7.5, 14.}, {9., 14.}}, {{13.5, 15.}, {11., 15.}, {
             11., 11.}, {15., 11.}, {15., 13.5}, {14.9991, 14.328052}, {
             14.32805, 14.999096000000002`}, {13.5, 15.}}, {{14., 12.}, {12., 
             12.}, {12., 14.}, {13.5, 14.}, {13.77599, 13.999642}, {
             13.999640000000001`, 13.775994}, {14., 13.5}}, {{6., 7.5}, {
             6.000903999999999, 6.671950000000001}, {6.671948, 6.0009}, {7.5, 
             6.}, {10., 6.}, {10., 10.}, {6., 10.}}, {{7., 9.}, {9., 9.}, {9.,
              7.}, {7.5, 7.}, {7.224005999999999, 7.000359999999999}, {
             7.000358, 7.22401}, {7., 7.5}}, {{11., 6.}, {13.5, 6.}, {
             14.32805, 6.0009}, {14.9991, 6.671950000000001}, {15., 7.5}, {
             15., 10.}, {11., 10.}}, {{12., 9.}, {14., 9.}, {14., 7.5}, {
             13.999640000000001`, 7.22401}, {13.77599, 7.000359999999999}, {
             13.5, 7.}, {12., 7.}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerPNGIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}}, {{{5.529, 5.57807}, {5.529, 
             4.053519999999999}, {5., 4.053519999999999}, {5., 
             7.947459999999998}, {6.48, 7.947459999999998}, {6.852703, 
             7.9696}, {7.220449, 7.853290000000001}, {7.51264, 
             7.620859999999999}, {7.761139, 7.404469999999998}, {7.898312, 
             7.0872199999999985`}, {7.88574, 6.757950000000001}, {
             7.9057260000000005`, 6.425880000000001}, {7.770876, 
             6.103259999999999}, {7.520519999999999, 5.88419}, {7.218853, 
             5.661900000000001}, {6.848291000000001, 5.553469999999999}, {
             6.47438, 5.57807}}, {{5.529, 5.9974799999999995`}, {6.48, 
             5.9974799999999995`}, {6.713101, 5.9819900000000015`}, {
             6.943998000000001, 6.0508500000000005`}, {7.13054, 6.19148}, {
             7.287083999999999, 6.33478}, {7.370268000000001, 6.54129}, {
             7.35676, 6.753090000000002}, {7.365949999999999, 6.96311}, {
             7.283390000000001, 7.16676}, {7.13054, 7.311090000000002}, {
             6.957866, 7.457780000000001}, {6.736853000000001, 7.5351}, {
             6.51039, 7.528030000000001}, {5.529, 7.528030000000001}}, {{
             11.87171, 4.05348}, {11.3399, 4.05348}, {9.319080000000001, 
             7.05438}, {9.319080000000001, 4.05348}, {8.787279999999999, 
             4.05348}, {8.787279999999999, 7.947459999999998}, {
             9.319080000000001, 7.947459999999998}, {11.345, 
             4.933299999999999}, {11.345, 7.947459999999998}, {
             11.871730000000001`, 7.947459999999998}}, CompressedData["
1:eJxlkXtMU3cUx6soT4V7y6MV6QOYj97LvZUFWAdGv0EkmJkNyibo8LkRO8qs
DzYsCr7oWHRCFUQRplINtloxomFqRAU6FohjAXEK69RKwaLjNcwgxamXGNkf
O8nJySe/nOT8vp/gDRpl+lQej6fgemK+rQVI9GlzeMfycfKZvtxWK0dtIH80
NYfEvzdMCbokOV5qkw95dhPoG95R/srKoqm9gDUWEbB5FZv2JrFYE3/J2k4R
+LZwSufzOgZCh6/28Asf7Jz+VZNBxmBzb8q23TwCjk6zM+1gGBR3/7lo5t4F
e4NKFozQyBMpNsYtI6C1+7ieUNMwDLjou+wEZOur+tf2UWgdeTxgziXx5FzN
4P7dFOx+ouaetXykGiN/jVlEQWpp9YvW+MJquONa9kIGe1dieOtJP+jVS35W
/CbD4Tj56dQBf0Q9Hml0b5PhiT2vwADBJNdYXFqqKoQw1UfMkNTLcFN/78KJ
4kBIZywcFXtTMFz5YKwhPwjH50zJyDBR2J/5dNxEilHp9ezz3jgafJ/55VvT
JcgYT1lx/L0wfNNYu7RsphSeOndFvieDLZ91Zi/lSaEuuDVXbWEwsZblIUVa
4qP3z+5gEdWu1MYYJDjoOhSQQMgRcew7W2iDGD9+xG0elWPh1Rj1T3+KMF3f
ZWnu5/xc4QQdC8I7fxVfb1r+iWI2XnVs75s7zE7y1dWq6rsPWGRZZSKzRAQu
tcVnXjNwrs8fUu0Tw8291zHsxaCB+zaZLEYIcfG5IDMMvztDKpmNYhi7w12O
tNHIQWcJbRVhRc0XoYSGhnnagcayR0G4vu9BWawb/TbPU7NRpywNLrxH4ctz
6z5VzgvEhJ6PbRTSrPEu288LJ1lVOs1oShdgT8vY6Kz7FCjhkQ4Phz+aJVzg
3jTEiVE9nho/bFUd6t+5i0ZtlfYXWbQvbqRcWD7WQ+NM6LWXBRF8/HGWO1AX
BktReDZTSSLn+/hsgmbg0MQGT60moWtV/8XXMXAviipMPU8iq3286f5DBkbl
ZbdV9SROZbb4P4xkEd2X260eJCEt/qFCl8si31n64eoAPlY+FerrbrJwclpL
NvDRcHvboO1vFiUJhqNJd/7jvMWRa64vC0B6cvUQK2D+xx0eqpDMMcGkr3f8
Bvidex8=
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerSVGIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{0, 
            2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{15., 10.}, {14., 
            10.}, {14.00113, 11.596388}, {12.921309999999998`, 12.991014}, {
            11.375490000000003`, 13.38965}, {11.62449, 14.3584}, {13.61224, 
            13.845852}, {15.00095, 12.052766}, {15., 10.}}, {{7., 10.}, {6., 
            10.}, {5.998837, 12.052669999999999`}, {7.387368, 
            13.845787000000001`}, {9.375000000000002, 14.3584}, {
            9.623999999999999, 13.38965}, {8.078326999999998, 
            12.990908999999998`}, {6.998712, 11.596276}, {7., 10.}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1,
              3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
             0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGCwBmIQDQG6DhBay2HribJ983dpO0x7xRSXBuQnfi7MXTFD
yyFv6fW05LNaDm8emUkd0NaCqteB0ho4+NoORUeiariA/AWGk1eI79FyEFb/
bi3yVN3hVPuCrC9VWg5ZsqG+AlvVHaQOHvv63kvLwWC3Oj93q7qDBnd8/Gsp
LYe77wNEXjirOwRx+r/4+l8Taq463L0QWhnOh9ijBFcPsUcJbp4k2B4luH2a
YHEluHsg+hTh7oWYqwT3Dypfx0HTatLp+hXycL6KuxWz8no5h3XOpqqR87Uc
3n5ay//6rrQDX1429/nTmg5rXj0tn/VHwiGP73oWPzcwPA9YKntJizlcWud0
yh/ont3cU0QiGEQcyoVrLn/p1IbzYfEE43e+adbhLtOD69cP3Gu6Yas+3PwJ
HzWmfviiD7f/l4dXlYSUAdx9gXtO3VqWoI/mfj00/6Hz9eHhk3AuJ/yFsz48
/Mwq4qdyt+rDw/eZnSWXANA9sPC/8WXBApGn+vD4Ca++wc3KYIAWfzC+OpwP
i3+Yelj6gJkHSz8w+2DpC+YeWPqDuRc1faLz9dDSt57D6Zb4V8/XAtPFlZnV
HgX6DrLMm67v1tdxCDii1CarZOCgvE94c9waXYcPPdu0Ot/oO8xWeGXHoKnv
0NCwNev6FH2HDr0V+TOFDRwsfOfLFujqOWx5VbxV9Le+w8b7wq9DVuo4PL2g
dPvnOX0HraKOHZaq2g7zbXSuzGrTc3iSfV6HE56+EfkTAK7YJ3o=
             "], {{14.5, 15.}, {14.223859999999998`, 15.}, {14., 14.776142}, {
             14., 14.5}, {14., 14.223858}, {14.223859999999998`, 14.}, {14.5, 
             14.}, {14.77614, 14.}, {15., 14.223858}, {15., 14.5}, {14.99981, 
             14.776065000000001`}, {14.77606, 14.999812}, {14.5, 15.}}, {{10.,
              14.}, {11., 14.}, {11., 15.}, {10., 15.}}, {{6.5, 15.}, {
             6.223858, 15.}, {6., 14.776142}, {6., 14.5}, {6., 14.223858}, {
             6.223858, 14.}, {6.5, 14.}, {6.776142000000001, 14.}, {7., 
             14.223858}, {7., 14.5}, {6.999812, 14.776065000000001`}, {
             6.776065000000001, 14.999812}, {6.5, 15.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1,
              0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxdlHlUFWUYxvGqIJBwl7lzl1nuxTI1jmhFQAT4IAUEqCcDssRSkDCCEDFB
ELcEzRYkCNc4uRCulLJISqyCIhVbbIqmCCaLQQgoINY3d5A/mnPmzPnOzLzf
+7zP8/usAiOWBkuMjIx8yS08G/175l0M0cA/PisvcIEK1kN7b6SYqLGTbvn9
YYoKfOY9T5siGum9mRXe9mp4FsVzDplKuNxrOT3CarDkx9TgXXcoVLTm7thU
o0FIw1+h1hsoRDXJ+12rtVgofBhLIR/b2y43Mzgckt0V9SkFz9uxVJYJByvd
QJj/GAWLuee+653FY5+P8kuvLiWO5Ng/Km3n0evwhse6YRpma2aExVzQIcb8
udmbfdRYAsWqMoUePvafu67M0KA7Klc5aq6HsZxaUHFIi+TNo45rLfTQtC1T
nU9mcHGWpXnuXR1OVTf490Sw2H8xbY9lrA6rV7S6T3bgELSlxXmjWgdm+q25
e25xqAi33Xp+K4+5hgZ5vHQ3a2Z7GYd/gn5d4X2FR+qQ8Qf7nuEQWrA+RT1F
B/e8B2N/OLAYrfq7skyiw4lji0mHDM6MBISXP2En1mZNR9c6m3Fo3hblnmrH
osGUCMtnIbt8If8rYw6SA9OYdJ7F+95XTJwPctgQSToKZ7CeyKuy4THTeNu3
bl9oEXi40bY3hp/QXzvj+vDmUB6ZGy/PcaxTo7GcCIjmYa8tXq6fpEYcleVx
25GHoayfCh015IdCDttJG0MVNEgKZll6c+I8Ymi4sd1tdgdYPHEbud+9lcZb
Hx+IPtTGwK/k+LHFZB3Rl1Dp68qg5vXmvoGrNOYEJJUOHtci7rN5Pj94qTB4
vYko1GJVWb11sEaN4e+J8dkalA3ODkiSaMb306B+UaB02bAGS/P5hG7Z0/cM
AvSuZNRqXDpr88nRSSwSK31Ljq9W407GwUv6PhZC7IJuqGAYfxqHb6q2kGiq
YOf0y9I0Kx4Fgr1DtNhHIvHPb/4LJ96mIcTO4zaP0sTMd66eU4KnQxc9sNCh
a4qtzO4xBbczH92MNNOh5NVnveLcKJEDhQ6PSlefXEkpRH27eYSZEkUPZMgj
qc/ez6GnmPzwmkyss4nF2aKedKcwKe7YCQYwuHaaBGGqFMJYtcUaCJgMqaRw
WlybHFCoxo70305WK6WQFEyVU0Uq0WdvqZjzehqCuwU5UqTuTHiv/rFS5E0q
Q4YQKzclBn++tnssY3z/Amp8XnIxfy4UFq4kjjMKdHra/Gs1poBA2ZQBBYwM
F4Vy/U/r1tRSou7J9MSadEcioESRxaGXj5DvDXWW0/A1GKFAQ0zn8y9OU0Ea
a3fKZa8cQhw7alSwFQCWyPHhrqAVrRVqkY982YR+wzzKZRO8vim0lScDgd2y
M5rBzcjdX7f3yyDQF2/DIqm9X1cXIcfD9lWHG3NYcf9bctACcJMJT30DXu8m
KsQ8E46Esq2vUKgzuikxJbwJx0dsByXyUMKiSioAp0Rlx4Jjf7qwE7odDEYz
GCTVHNJo3J9eOH9/qHacIxX+f17+BzFaMpA=
             "], {{9.8738, 4.7586}, {10.959, 7.9704}, {11.507, 7.9704}, {
             10.098, 4.0765}, {9.6543, 4.0765}, {8.2481, 7.9704}, {8.7935, 
             7.9704}}, CompressedData["
1:eJxlU2dMFGEQPZUIMQb3jvPuvMYhSraiFAvB8myAjaJiUAEF0RAiajCIIhCI
QUDsioVqMELU06C5H1gCBiT2jlEBo4glF1GwYDsJfnsL5w8n2ezOfjvzZt57
6xG/YdGawTKZLJBc4l0KbxQfI7FMgcOzCte9vyxAeS64Pf2QHNF7G3roaAHW
EO8+j14KW61ePi6dPPjm4neGagqM+EEij6phQWNTZ1IQj81tHCbeDQx9KKdw
+vOjhfHhHJ68T+K+qym4mPXLEy6zaEw4vWqJor+eZqGNaNFlxFGYTeBtpxg4
d6tCwv9QOKhxWuoqMCiJrDhz9qgcw56e2Dj1Fo2VzG3qeroCd++Q2EVjblm2
V8MONwgXyrqqg2h0TZ4TnHJRCfXzez8We9IojyUFziosmFQwY9VYGq5144+x
UWpH7psmeLhbNBj3YszQnJE0cooIEdVa7P+YMX1CLI3jBTXt1iI9RonjfKER
5xs5nmWM0NkLGBSnlVZ6bnXHvOGDubylLLJD6jMNGhOqSq6Zanw5ibfhJviI
BLzhUO9a6lepNOFl2O4j6w/wSIhpCxpS6460ugrtOIMg6fHcCPfcDxG15QLM
ha2Jsi4DCDrZUADc4hofn9FjQD/ZhhynpjAdNiWSift4R87lqQgDPPK/tT7N
8dMjnMApGgnenZj5N5wNEr/JPFY8vtKhLDNI86t42OXwNUKkr+MkB8/WX1lJ
GUaExlNRAf4cHo4WXxhhubG5rqKYdZxfmksaOLPQk+rI7v7+ZxmsGfU6Sv1D
j6PrFduvzmOQtPDrnsUWHe6L7XUMVpyv7yyfosW33uYtVi8G/pWWST8bNI7c
7r9MdT8/DCbEikgqLKo1EoYYWJb1XGzZqURNCiHgCoPe76mvSiPcpPm0LOw2
DlNI+l1gsU00+CU5mkykIoJDi/l3dHKTXMKr4mC7/elmY4Nc+h9sHJo5ssEz
OVLFhUJ5rM1fHdM2VOHQL1B88FZIfn/A40jfviwb8afdH4ME5OcuJwz/y9vT
yQBxKrx9QIicxv2XBxD7/hqhceg7kP8F0n559w==
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerKernelIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAElBwht4IDCb0Dwg3h/2248ZuCwROpbdVKv
IlTcEEqj81ng/IKp6gJlpxjR5Bng5sH4qPZB+Qw8cH4D/3SZ8lOcaOZxoNkH
5TcYwfkCcrkyG48Zoak3hpsH46PaB+Prw/kQf+ujmWeAZp+BAwACrS35
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 14.}, {3., 14.}, {
            3., 15.75}, {3., 15.888071}, {3.111929, 16.}, {3.25, 16.}, {7.75, 
            16.}, {7.888071, 16.}, {8., 15.888071}, {8., 15.75}, {8., 15.}, {
            17.75, 15.}, {17.88807, 15.}, {18., 14.888071}, {18., 14.75}}}]}, 
          FaceForm[
           GrayLevel[0.89804]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}}}, {{{19., 13.}, {19., 3.5}, {19., 
            3.223860000000002}, {18.776139999999998`, 3.}, {18.5, 3.}, {7., 
            3.}, {7., 4.}, {3.25, 4.}, {3.111929, 4.}, {3., 
            4.111930000000001}, {3., 4.25}, {3., 13.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAQAWIQfW91mNqfJH0HgVL5hitmCg7uU76xxe/Qd3Awjdvl
2aPskHpf9OD/ZToOd9kVtnYaKznseaHtYfxNy2HHqje7lSRUHfas9Gjd6Krp
INZuvH8WUP6Ot9TiUhM1hyk3FSb3APXXsGYeW9Sp5rCT3yFL2FzB4a4KW+NU
Z2UHK6kD0QqM8g42tyySdOtUHSwEJrH6MEg5iBo0RpcD5cPAFos4cL+KflYC
1B+0wP+J5yRhhx8iDI8lgeYzaLeL3TzH6ZDB2rYmD2h/wdc5X/YZ8jsI/slX
tQa67wS77ezQ+cwOem8y2/cD3W+w2i48GiifGnvHjRnoP47iLz/2nuV06HRM
eHoB6H+zs9Z+FycKOyx++SalIMTQ4dRT+yX3/4k4pJqdUFE2N3CQOwkU+C/p
ILrO/WEVUH7NLIVXdgzyDgCwloC6
             "], {{14.356890000000002`, 8.80715}, {15.26808, 9.20715}, {
             14.75798, 8.51929}, {13.889980000000001`, 8.210630000000002}}, {{
             15.50572, 9.055660000000001}, {15.40481, 8.047169999999998}, {
             14.95886, 7.41475}, {14.98468, 8.353030000000002}}, {{14.69925, 
             8.2}, {14.66778, 7.05536}, {13.62143, 6.702780000000002}, {
             13.62143, 7.816750000000001}}, {{13.48092, 9.9899}, {14.09851, 
             8.93313}, {13.48093, 8.144059999999998}, {12.86377, 
             8.933209999999999}}, {{12.60539, 8.80729}, {13.07211, 8.2105}, {
             12.20383, 8.51926}, {11.69399, 9.207640000000001}}, {{13.34039, 
             7.816750000000001}, {13.34039, 6.702810000000001}, {
             12.293999999999999`, 7.055390000000001}, {12.262530000000002`, 
             8.2}}, {{11.97714, 8.353090000000002}, {12.00295, 
             7.415180000000001}, {11.55736, 8.047659999999999}, {
             11.456740000000002`, 9.055730000000002}}, {{10.16199, 
             7.578840000000001}, {11.359990000000002`, 7.839730000000001}, {
             11.93624, 7.021730000000002}, {10.97586, 6.66539}}, {{
             11.016440000000001`, 6.38067}, {11.74664, 6.651610000000002}, {
             11.18759, 5.92502}, {10.357750000000001`, 5.64171}}, {{
             10.419440000000002`, 5.365740000000002}, {11.27625, 5.65826}, {
             12.181249999999999`, 5.391480000000001}, {11.41413, 5.14879}}, {{
             11.429440000000001`, 3.6768399999999986`}, {11.551440000000001`, 
             4.897399999999999}, {12.526169999999999`, 5.205770000000001}, {
             12.55101, 4.16919}}, {{12.60754, 5.558840000000002}, {
             11.509590000000001`, 5.88251}, {12.20647, 6.788230000000002}, {
             13.253540000000001`, 6.435409999999999}}, {{13.34042, 
             3.2504900000000028`}, {12.833490000000001`, 4.117919999999998}, {
             12.814119999999999`, 4.925980000000001}, {13.34042, 4.15807}}, {{
             13.48096, 4.450240000000001}, {12.83467, 5.3932400000000005`}, {
             13.48096, 6.270240000000001}, {14.127249999999998`, 
             5.3932400000000005`}}, {{14.127959999999998`, 
             4.117769999999998}, {13.62153, 3.250720000000001}, {13.62153, 
             4.15807}, {14.147639999999999`, 4.925700000000001}}, {{
             13.708409999999999`, 6.435409999999999}, {14.755480000000002`, 
             6.788230000000002}, {15.45236, 5.88251}, {14.35436, 
             5.558840000000002}}, {{14.41041, 4.168940000000001}, {14.43565, 
             5.205680000000003}, {15.41, 4.897}, {15.531869999999998`, 
             3.6763200000000005`}}, {{15.547509999999999`, 
             5.1483599999999985`}, {14.780389999999999`, 5.391360000000001}, {
             15.68567, 5.65821}, {16.542669999999998`, 5.365090000000002}}, {{
             16.60379, 5.641249999999999}, {15.774359999999998`, 
             5.924939999999999}, {15.21554, 6.651240000000001}, {
             15.945540000000001`, 6.380030000000001}}, {{15.98616, 6.66484}, {
             15.025730000000001`, 7.021660000000001}, {15.602219999999999`, 
             7.8392}, {16.8, 7.578090000000001}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           FilledCurveBox[{CompressedData["
1:eJxTTMoPSmJiYGDYBsTMQMzIwszIDEUMjAxw9qjIgDtgkIgAAMeOBqk=
             "], {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1: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
             "], {{13.48089, 1.9509299999999996`}, {10.96851, 
             1.9509499999999989`}, {8.931845, 3.9876499999999986`}, {
             8.931859999999999, 6.500030000000001}, {8.931874999999998, 
             9.0124}, {10.96857, 11.049077}, {13.48094, 
             11.049069999999999`}, {15.993319999999999`, 
             11.049062999999999`}, {18.03, 9.01238}, {18.03, 6.5}, {18.03, 
             5.2935}, {17.55072, 4.1364199999999975`}, {16.6976, 
             3.2833000000000006`}, {15.84447, 2.4301899999999996`}, {
             14.687389999999999`, 1.95092}, {13.48089, 
             1.9509299999999996`}}}]}, 
          FaceForm[
           GrayLevel[0.53726]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerDocumentationIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAElBwht4IDCb0Dwg3h/2248ZuCwROpbdVKv
IlTcEEqj81ng/IKp6gJlpxjR5Bng5sH4qPZB+Qw8cH4D/3SZ8lOcaOZxoNkH
5TcYwfkCcrkyG48Zoak3hpsH46PaB+Prw/kQf+ujmWeAZp+BAwACrS35
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 14.}, {3., 14.}, {
            3., 15.75}, {3., 15.888071}, {3.111929, 16.}, {3.25, 16.}, {7.75, 
            16.}, {7.888071, 16.}, {8., 15.888071}, {8., 15.75}, {8., 15.}, {
            17.75, 15.}, {17.88807, 15.}, {18., 14.888071}, {18., 14.75}}}]}, 
          FaceForm[
           GrayLevel[0.89804]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{19., 13.}, {19., 
            3.5}, {19., 3.223860000000002}, {18.776139999999998`, 3.}, {18.5, 
            3.}, {10., 3.}, {10., 4.}, {3.25, 4.}, {3.111929, 4.}, {3., 
            4.111930000000001}, {3., 4.25}, {3., 13.}, {19., 13.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJxIGZigAFjBz2T65lLlqo6wPg3sjzuJGdyOqScifU+
8d/I4YfNDutscxaHy/P/eghWGjmssHqStoORwUF81muTS5cMofoYHNzOHZpX
VqEB5xclVx0Sqld3YNgxSVYaqD7rccfWH1vUHDR2RAQ2azI7/Oxdb7sZyC8A
qeNnh/On8l37b2mjBlf/OtxKfp6pOsK8oNkWO/+ro9mn4TC3Qe1QW7shnP+p
eva/N88NHTY4m6pGAtVH7n7rVGxr5NC6y2OhTou6w+0v6fZBMUYO61+Lv2k7
q+agNdFFf3GCkQPPGS7XXefVHNgWT7JiTDVy+CqUPLPuoprDUYUNRRmZRg4S
YH+rOSxymH9i8h4jh/5/07MvAvk7g60i/gPDa/Hx97m/vNUc0MMXAJkejkw=

            "]]}, 
          FaceForm[
           GrayLevel[0.53726]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {1, 3, 3}, {0, 1, 0}}}, {{{17.824, 11.118}, {17.823, 
            11.28}, {17.692, 11.412}, {17.529, 11.412}, {12.235, 11.412}, {
            12.073, 11.412}, {11.941, 11.28}, {11.941, 11.118}, {11.941, 
            2.8823}, {11.942, 2.8372}, {11.953, 2.7929}, {11.974, 2.7531}, {
            12.045, 3.002}, {12.271, 3.1746}, {12.529, 3.1765}, {17.824, 
            3.1765}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 
             4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {
             0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
              0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 
             1, 0}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.04675, 6.052660000000001}, {
             14.98306, 6.096589999999999}, {14.9068, 6.11858}, {
             14.829500000000001`, 6.115309999999999}, {14.83814, 6.15225}, {
             14.84931, 6.188549999999999}, {14.862930000000002`, 6.22396}, {
             14.989640000000001`, 6.231980000000002}, {15.1139, 
             6.186519999999998}, {15.20552, 6.09862}, {15.130299999999998`, 
             6.077719999999999}, {15.121929999999999`, 6.073559999999999}, {
             15.04675, 6.052660000000001}}, {{16.107940000000003`, 
             7.377000000000001}, {16.689980000000002`, 6.79499}, {16.77984, 
             5.8828700000000005`}, {16.32256, 5.198469999999999}, {
             15.865280000000002`, 4.5140699999999985`}, {14.988219999999998`, 
             4.247999999999999}, {14.227759999999998`, 4.562980000000001}, {
             13.4673, 4.87796}, {13.03524, 5.686269999999999}, {13.19582, 
             6.493559999999999}, {13.356390000000001`, 7.30086}, {14.06488, 
             7.882300000000001}, {14.88799, 7.882300000000001}, {15.34556, 
             7.88232}, {15.784389999999998`, 7.70055}, {16.107940000000003`, 
             7.377000000000001}}, CompressedData["
1:eJxlU31MzHEcvvKWRnSX7+9XXaULdfr+7kShOD3GSpzcctRizcupVja3y+at
MJQQtVO3it6U90Niul4c5b2oE5bJEpGGpdKLzNuvf/zjj88+e/Zsn8+z59nj
vmFL2CZrgUAwk5/h3f4gu8pgkaHuVqNJO1mEKd8euo17zaGj/ZXKJ5TAVTX7
g206B1JW+SIhjCArV2GxTePALpCcWczjbpVDp+gQj1s/SMwrCaoNGRN2pnCI
9rk6ZFpNUPyz5NVZEYeuz7f9PeII0vXhH9lCCrYnL7t/A8HH83YVjjIKdeCW
6WELCRx26Lc+8aXo/jpLJn5IMPfAdL9dKgrZkllkeTADfdrJZEUSRWbrHPOA
kcGYqY+v/1pDsbjKVhr4iMGNGMPIc/4UGVcU16a0MQiRdg7oCcW7p/ft43sY
bB47VBjjQaFL3laRuoJFwGjNlW0FFO/XHr5YZ2Zxn+wTZ5ZS2ChOrCqoZ7Ho
i7LoWy5Fl29T2I4TLExWBW5BqRSFxx6MU0ezyB0xMqFvO0WEZt6bFRwLRUhl
dG8ehYTLKvcQs9B2Jz9S1/D3dx88hT8M/EpX7bv3liLf/vTNmmYGz1zuNjhU
Ulx3k0ruHGaw7rjfJ3f+n9EfM4LlDEqG/dvP62ku1irqCMbqVLXKKoqOaF7J
G4ISq+pRwj6Kl8LehY0dBE8ifPPyKAdrtrGwiOdFkraJFzLlSLGvLT66keCy
kNrFNMihnKkjA33/48Ra4QSvKjm2V6R+vbuZ9zdH854a5ehkM262JjE4oLES
mfpleH2rrKlEzUJvMSRIQ2VI7C1VxUc6oty8JLa+gkN3s+bozlQneNGevWU5
HAw9fKDznRHVxF4qjuOgbj2mjSwVQ3IoKuiqksP3QUfGTuOC5ZPSln56Tv/x
jvd0yy7y/k3zsTGKI53RbloZELGHIvRCUoBrghMaZs854/nFG4gTeQ62sAgv
2+gxMd0bAst6c7WAgVN+lLRe643Mtb8X/Rg/CRZJy9DuAIpIeYru1C8hvEKa
lWZe3w9XmX+XrxDO49u4DL4PW41HWmL5PvwFn0hNig==
             "], {{14.929780000000001`, 6.679259999999999}, {14.99634, 
             6.637309999999998}, {15.059230000000001`, 6.58981}, {15.11778, 
             6.537259999999998}, {15.13069, 6.72777}, {15.13348, 
             6.918830000000002}, {15.12614, 7.109630000000001}, {15.0175, 
             7.005190000000001}, {15.00081, 6.98846}, {14.888, 
             6.879850000000001}, {14.90472, 6.82555}, {14.929780000000001`, 
             6.679309999999999}, {14.929780000000001`, 
             6.679309999999999}}, CompressedData["
1:eJxTTMoPSmViYGBQB2IQ/fq/zLPT0QYOjyLEt19cIOGgUm/w4Q6QH8NRFHCI
R9pBfUHnhoc/9R1mxZ9lbLKUdXh/ZI248009hxjjn2mzpeUcdr48X7dkh66D
zQ7r7O1/5Rx6X3J62xToODQUu035libnsG5mzeazc7UdJhznCTk2X8bhvOd7
6fjTWg5zpC8LT7sh5TAr5YnOm5laDgpbOyf/tpVwkFpcGmKqqO1wQi9wr6mA
mMNXV6foc6naDhsy7xV2nRN3sBBdabDtgrbDsSkei6YXSjqw/HKZpxKr43Bj
XqTQgmdSDiBjZLt0HDy2+h9PVpNxMOuL6PZ/qOOgJTH1CqeHrIP6VTvZ/khd
h3XMz3s0dOUcIu6+snxZq+tg8kpR6q6jrMOaFQdNePp1HY6JNclM+SDj8Dux
5UPGZl0Hn797VnqwyjgIlMo3XGHTc7CadLreA+ifblHTGW2Ceg51QW8vf9wh
47BQ44L6pxQ9h1UVyp9PxMs6fFs1lXN/iZ7Dr1vG3kwmMg7qntd99lXqOdz6
8MUrkk3aIcvjTvLLYj2HOeVzFinflHQIm7967Y3/eg4JKluexryScFjkMP/E
5Cn6DkElKtP/C0g49MYuqsqWMHCYsOCH4TM/cYdN13fb32M2cPiRpKF+66qY
w8zGUz++39R3MDqyUS8vWcxB694Jm0/L9R1SPhfmrvgh6vCsR+Mtb52+A0vx
lx9734o6+L9M+Ds/GMHnnnFg7W5NhPolBbZc14P1HOZ92fdxq7qYg+D9zkj9
MKD58xyd/y8Rdqg71sqsKGngcM2SLWX9dhEHI+apH98D08+WnLX6QrPEHCoj
VpieBfKPPTyz/hkwfQEAdeMU4A==
             "], {{13.11765, 9.647049999999998}, {16.647060000000003`, 
             9.647049999999998}, {16.647060000000003`, 10.23529}, {13.11765, 
             10.23529}}, {{13.11765, 8.47058}, {16.647060000000003`, 
             8.47058}, {16.647060000000003`, 9.058810000000001}, {13.11765, 
             9.058810000000001}}}]}, {
           EdgeForm[
            CapForm["Butt"]], 
           EdgeForm[
            JoinForm[{"Miter", 10.}]], 
           EdgeForm[
            Thickness[0.]], 
           EdgeForm[
            GrayLevel[0.65098]], 
           FaceForm[
            GrayLevel[0.65098]]}]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerTIFFIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}}}, {{{7.476430000000001, 7.56917}, {6.447, 7.56917}, {
             6.447, 4.}, {6.027209999999999, 4.}, {6.027209999999999, 
             7.56917}, {5., 7.56917}, {5., 8.}, {7.476430000000001, 8.}}, {{
             8.85472, 4.}, {8.43225, 4.}, {8.43225, 8.}, {8.85472, 8.}}, {{
             11.84251, 5.766640000000002}, {10.49879, 5.766640000000002}, {
             10.49879, 4.}, {10.07679, 4.}, {10.07679, 8.}, {12.06027, 8.}, {
             12.06027, 7.56917}, {10.49879, 7.56917}, {10.49879, 
             6.197459999999998}, {11.84251, 6.197459999999998}}, {{
             14.782259999999999`, 5.766640000000002}, {13.43854, 
             5.766640000000002}, {13.43854, 4.}, {13.01654, 4.}, {13.01654, 
             8.}, {15., 8.}, {15., 7.56917}, {13.43854, 7.56917}, {13.43854, 
             6.197459999999998}, {14.782259999999999`, 6.197459999999998}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerUnknownIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGBQB2IQHTjbYud9Rz2HG+e+Bz9eyu5wzDjjxfwJBg4r1tVM
e87I4uCr4XJA8Y2BwwHdUzkTOFkcdLZvkRKyN3QoCExr9tnE6sC86fpu+zRD
hx2SeQeeu3M4rLfdrOLw1cAhQPK/3eMmdofDjRN0EibpO2wou936rIrLYef9
hRoX9A0dElo+ZDw+wevAAAINhg4bLnt4P33LA+c7vPFZ+HmXgINTwtMLStGG
DueSkj4XvhVw2NV8Y6ZTvYHDHR7zB5+TReHqWwI95zY8E4bz+yK6/RkNxBy2
nijbN1/JwOHa0VyTBnMJBz7dTXPf8xs6NKzbllRfKeuwM9gq4n+9oYPHmqPL
GSQQfD52p00NnvIOohMTRfNtDB0ObH95vq5FHm6+ptWk0/Ucqgj7JFf01Mer
OrzdrfTj/i1dhw2gcJBVhsgzaENpDYdWLdPqBaoaDi8M4uMagPLXQe76ruRw
R1N2zf9kVYg725UdFrTM3FbfKu+wepbCKzsGGQe2AxVsvLKyDkvMCov2H1Z0
cOnOef57pQjUXBmHDd23MxjyORy8zTsdE0Rh9rI4vH5kJnXgtgqcvy7luJvC
PnWHDztvdf0FxvfB5+2Chw6rw+Xr7oUsOcShBefPWPvV1em1hkNA7/Q8oWYu
uH++mC8UYHwu5NDGrBh5QEQXLj/v0sFf9t+14forlT+fkLfRg/MB09PfBQ==

             "], {{16.686, 7.765140000000002}, {16.00777, 
             6.803710000000001}, {16.04777, 8.25342}, {16.841960000000004`, 
             9.32471}}, {{14.986, 8.997559999999998}, {16.38884, 9.61328}, {
             15.61564, 8.57028}, {14.28, 8.0957}}, {{12.01489, 8.998}, {
             12.720699999999999`, 8.09516}, {11.38452, 8.57026}, {
             10.611329999999999`, 9.614259999999998}}, {{10.952150000000001`, 
             8.253860000000001}, {10.99215, 6.80415}, {10.31441, 
             7.766060000000001}, {10.1589, 9.32466}}, {{8.01074, 6.94966}, {
             9.938229999999999, 7.369580000000001}, {10.86475, 6.05415}, {
             9.319580000000002, 5.481}}, {{9.397, 4.937999999999999}, {
             10.50345, 5.348640000000001}, {9.643999999999998, 
             4.231930000000002}, {8.38424, 3.8017600000000016`}}, {{10.04153, 
             2.939460000000004}, {8.50174, 3.275400000000001}, {9.81326, 
             3.723149999999997}, {11.21365, 3.3105600000000024`}}, {{12.0264, 
             3.6294000000000004`}, {10.25809, 4.15089}, {11.38016, 
             5.608890000000001}, {13.066440000000002`, 5.04102}}, {{13.22659, 
             5.550790000000001}, {11.544459999999999`, 6.118169999999999}, {
             11.49222, 7.961920000000001}, {13.22659, 7.34474}}, {{12.50759, 
             9.23779}, {13.5, 10.937499999999998`}, {14.49341, 9.23779}, {
             13.5, 7.968750000000002}}, {{13.77346, 7.34473}, {
             15.506369999999999`, 7.961910000000001}, {15.457, 6.11816}, {
             13.77341, 5.550780000000001}}, {{13.93361, 5.04102}, {15.61989, 
             5.608890000000001}, {16.741960000000002`, 4.15089}, {
             14.973650000000001`, 3.6294000000000004`}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerWLIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJxllAtMk1cUxyvSCSgOaUtftP2+rxT5KAXFqUVE/tOCVREVg07GBGFA6iwG
EAEHuimE1SG+R1ScgFJBqCAL4Mx4jIGOKuqc4nyhNgMVxmM8dFMHaxfDEj3J
yc0v59yce3L/55BRm0NirBgMxjKzW07H992OJc52wa2q6nr1bzKE/lhyKnil
C5xrFMZNqW44sng08pGPCwx1K0IL+XKsqptdGTooRWyB92hGjQJUPeu79ekU
jim/f1io9EDbperCqCAKT2dv1XX/I4eClAxvaidAbdVfTzvujlPBYG2YRaDd
mBnRXesBZsvemSltEsxx6Ts3nKCAXD3LaXm2GOFh9rrPc7wwZN0UfG6pAJNr
011kGQrkje3b/moeF/n6a1PPd7mDDt/bNFLCweUd6oYMezfEF9+OjY6ZhtSC
4LQtx2SIfz7JqPWdgrq1hqC/Wigw/jMb3OQZTp7RSMZ56vwXYk8fx3c46bbj
4IebHfFgElGtWy1Dj/PEqtv3nJDVs+q8mDkdyQd51ms8+fBsCY15yKGxZX10
XkkHH2yV+YbMA2OpFWFHHMTIfW/ASd2owDO15xgpkiBIbxcoM8f1vRHrNFEE
Znz5ccqQNY2fFjcfUg8S2JArbqjVTMdX7bvnXNJJseJwP1/X6IIby6McPkpz
ha6/uZybRKGy/AOaaaBhena4asp+Aoy1VdHSARr9fuGJ9zUELtjR/qWB7hAr
41SaCvE7/Jn6fvSzRTSsbHdLos8KwTm7+PG2YWfEWqxLhF8t9f4WwOGTlQ+9
J4lBt3Ul8F7zMBznH6Iyx6e0JQs0tlw0ZoiUcZkitEXmqNlGLjaG2F2oU0lQ
cWDvA2Y3D3ZanzzTRgKa/b3p/qECPHlV+ucNexJZ83cKaV8+vOJPTvghmYSX
cldDxGsuvk4YdWU3kchgai4WlTrBSp7tdKePRL1wst0uby72DM0tdEigcPB0
ub7nDhfVneG7y7opSAsVT0LyeTgaVtPOXSeFdt+SwKtWPPSY5ggafaVY9MQs
zDMsPI1hX1b4UZjad/Wudi4Lz93MQoohoev8Zs2iRDaMnI5OagGJm0ULWkV6
DlQve3sabUn8/MUfI33XnLDjYtZEspVASlxvzWQ/Dp5eHM6U1UuwzPKvAWzk
h54oM6SKsDDpeGCYHRvNCw2ajmlCrGf7Dcy04cH8WmN9mRAs5kvVt2xnpAYM
NBy+IkTbtpmHWPYEmoyFATVJQhSZxnJLeAQKHkUF2McKIXdk3RyQEfh9e3YR
IoTj88SYdyWPGylE5WnR6NEcEpR3uWlPkBAjQ3qKE+v6RtcMhCsdDjCD6HF+
8Uup/ESxFDZmea7MF2BGuipI9+l0PJ+g1pqa+fCxpBNueBmubRk9wIdk2mpK
1/E/uxYX3Ft2lB7PP7Qz3kuT7o4z8hOdadeFqF5aqcxfIkeXpeFR0Zu6Hrib
aJ4Ycx+PK1oFI6CRZaPMdL9FwqzKzQPFrvCn9CrHOine3k//Ak892E8=
             "], {{9.617389999999999, 11.266640000000002`}, {
             9.355364000000002, 11.506809}, {9.073421, 11.7243}, {8.7746, 
             11.91677}, {8.7746, 11.91677}, {8.66219, 12.48534}, {
             8.587309999999999, 12.73394}, {9.09304, 13.23107}, {9.16793, 
             13.30761}, {9.65491, 13.785590000000001`}, {9.687847, 
             12.945878}, {9.675329, 12.104999}, {9.61741, 
             11.266640000000002`}}, {{8.50275, 9.731640000000002}, {
             9.072936000000002, 9.76756}, {9.631433, 9.558930000000002}, {
             10.038419999999999`, 9.15798}, {9.701419999999999, 9.06244}, {
             9.66393, 9.043289999999999}, {9.32679, 8.947599999999998}, {
             9.042788, 9.148219999999998}, {8.700315999999999, 9.24909}, {
             8.352910000000001, 9.23443}, {8.391562, 9.40336}, {8.441624, 
             9.56948}, {8.50275, 9.731640000000002}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerXMLIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.726999999999999, 6.01648}, {
             7.884519999999999, 4.}, {7.323999999999999, 4.}, {
             6.443760000000001, 5.560419999999999}, {5.55859, 4.}, {5., 4.}, {
             6.160519999999999, 6.01648}, {5.027529999999999, 8.}, {
             5.580260000000001, 8.}, {6.44373, 6.4670000000000005`}, {7.30133,
              8.}, {7.858, 8.}}, {{10.21241, 4.736269999999999}, {9.04211, 
             8.}, {8.43231, 8.}, {8.43231, 4.}, {8.90442, 4.}, {8.90442, 
             5.558230000000002}, {8.85815, 7.23077}, {10.03149, 4.}, {
             10.392400000000002`, 4.}, {11.56769, 7.239559999999999}, {
             11.52338, 5.558230000000002}, {11.52338, 4.}, {
             11.995480000000002`, 4.}, {11.995480000000002`, 8.}, {
             11.382750000000001`, 8.}}, {{13.303540000000002`, 4.43079}, {
             13.303540000000002`, 8.}, {12.82854, 8.}, {12.82854, 4.}, {15., 
             4.}, {15., 4.43079}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerTXTIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
            1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
            0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0,
             2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
            0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0,
             1, 0}}}, CompressedData["
1:eJx10DEKgDAQRNFFbexTWGyhSwgp9hA5g0cQrL1/Z8Bs4cAIYXjwhZDjes57
FpG1n6WfSeLb27c2Volz+/dhBxtxrIPL2Ar/oQtZg16JsQ879Gyxx3vEuygx
3iPs0Fdi7NHb2EycoA8b9EqMfWovO5kdXA==
            "]]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerFileOpenerTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TagBox[
         PaneBox[#, ImageSize -> {Full, Automatic}], 
         EventHandlerTag[{{"MouseClicked", 1} :> If[
             FileExistsQ[#2], 
             SystemOpen[#2], 
             DefinitionNotebookClient`FancyMessageDialog[
             "Paclet", "File not found: " <> ToString[#2]]], Method -> 
           "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
        MouseAppearanceTag["LinkHand"]]& )}], 
   Cell[
    StyleData["FileManagerFile", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{60, Inherited}, {0, 0}}, Deployed -> True, Evaluatable -> 
    True, CellGroupingRules -> {"SectionGrouping", 100}, 
    CellFrameMargins -> {{5, 5}, {2, 2}}, 
    CellFrameLabelMargins -> {{0, Inherited}, {Inherited, Inherited}}, 
    ContextMenu -> {
      MenuItem["Open", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeOpen[EvaluationCell[]]"]], 
       MenuEvaluator -> Automatic, Method -> "Queued"], 
      MenuItem["Un/Mark as Excluded", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeExclusionToggle[EvaluationCell[]]"]]\
, MenuEvaluator -> Automatic, Method -> "Queued"], 
      MenuItem["Copy Path to Clipboard", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeCopy[EvaluationCell[]]"]], 
       MenuEvaluator -> Automatic, Method -> "Queued"]}, ShowStringCharacters -> 
    False, Background :> FEPrivate`If[
      CurrentValue["MouseOver"], 
      GrayLevel[0.92], 
      GrayLevel[0.99]]], 
   Cell[
    StyleData[
    "FileManagerDirectory", StyleDefinitions -> StyleData["FileManagerFile"]],
     ShowGroupOpener -> "Inline", Evaluatable -> False, CellEventActions -> 
    None, CellFrameLabels -> {{
       Cell[
        BoxData[
         TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
        None], None}, {None, None}}, ContextMenu -> {
      MenuItem["Open/Close Group", 
       KernelExecute[SelectionMove[
          EvaluationCell[], All, Cell]; FrontEndTokenExecute[
          EvaluationNotebook[], "OpenCloseGroup"]], MenuEvaluator -> 
       Automatic, Method -> "Queued"], 
      MenuItem["Open Directory", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeOpen[EvaluationCell[]]"]], 
       MenuEvaluator -> Automatic, Method -> "Queued"], 
      MenuItem["Un/Mark as Excluded", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeExclusionToggle[EvaluationCell[]]"]]\
, MenuEvaluator -> Automatic, Method -> "Queued"], 
      MenuItem["Copy Path to Clipboard", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeCopy[EvaluationCell[]]"]], 
       MenuEvaluator -> Automatic, Method -> "Queued"]}, Background -> 
    GrayLevel[0.99]], 
   Cell[
    StyleData[
    "FileManagerEmptyDirectory", StyleDefinitions -> 
     StyleData["FileManagerDirectory"]], CellFrameLabels -> {{
       Cell[
        BoxData[
         TemplateBox[{}, "FileManagerEmptyDirectoryIconTemplate"]], 
        Background -> None], None}, {None, None}}], 
   Cell[
    StyleData["FileManagerBottomSpacer"], ShowCellBracket -> False], 
   Cell[
    StyleData["UsageInputs", StyleDefinitions -> StyleData["Input"]], 
    CellMargins -> {{66, 10}, {0, 8}}, 
    StyleKeyMapping -> {"Tab" -> "UsageDescription"}, Evaluatable -> False, 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell["", "UsageDescription"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoStyles -> False, ShowCodeAssist -> False, 
    CodeAssistOptions -> {"DynamicHighlighting" -> False}, 
    LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> "Text", 
    FontFamily -> "Source Sans Pro", FontSize -> 15, FontWeight -> "Plain"], 
   Cell[
    StyleData["UsageDescription", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{86, 10}, {7, 0}}, 
    StyleKeyMapping -> {"Backspace" -> "UsageInputs"}, CellGroupingRules -> 
    "OutputGrouping", 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell[
           BoxData[""], "UsageInputs", FontFamily -> "Source Sans Pro"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoSpellCheck -> False], 
   Cell[
    StyleData["Notes", StyleDefinitions -> StyleData["Item"]], CellDingbat -> 
    StyleBox["\[FilledVerySmallSquare]", FontColor -> GrayLevel[0.6]], 
    CellMargins -> {{66, 24}, {9, 7}}, ReturnCreatesNewCell -> False, 
    StyleKeyMapping -> {}, DefaultNewCellStyle -> "Notes", ShowAutoSpellCheck -> 
    False, GridBoxOptions -> {BaseStyle -> "TableNotes"}], 
   Cell[
    StyleData["TableNotes", StyleDefinitions -> StyleData["Notes"]], 
    CellDingbat -> None, CellFrameColor -> RGBColor[0.749, 0.694, 0.553], 
    StyleMenuListing -> None, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    GridBoxOptions -> {
     FrameStyle -> GrayLevel[0.906], 
      GridBoxAlignment -> {
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}}, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{True}}}, 
      GridDefaultElement -> Cell["\[Placeholder]", "TableText"]}], 
   Cell[
    StyleData["TableText"], DefaultInlineFormatType -> 
    "DefaultInputInlineFormatType", AutoQuoteCharacters -> {}, 
    StyleMenuListing -> None], 
   Cell[
    StyleData["ExampleDelimiter"], Selectable -> False, ShowCellBracket -> 
    Automatic, CellMargins -> {{66, 14}, {5, 10}}, Evaluatable -> True, 
    CellGroupingRules -> {"SectionGrouping", 58}, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False, 
    CellLabelAutoDelete -> True, TabFilling -> 
    "\[LongDash]\[NegativeThickSpace]", TabSpacings -> {100}, 
    StyleMenuListing -> None, FontFamily -> "Verdana", FontWeight -> Bold, 
    FontSlant -> "Plain", FontColor -> GrayLevel[0.906]], 
   Cell[
    StyleData["ExampleText", StyleDefinitions -> StyleData["Text"]]], 
   Cell[
    StyleData["PageBreak", StyleDefinitions -> StyleData["ExampleDelimiter"]],
     Selectable -> False, CellFrame -> {{0, 0}, {1, 0}}, 
    CellMargins -> {{66, 14}, {15, -5}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), CellFrameColor -> 
    GrayLevel[
      Rational[77, 85]]], 
   Cell[
    StyleData["Subsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   Cell[
    StyleData["Subsubsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   Cell[
    StyleData["ExampleImage"], PageWidth :> First[{650}], 
    CellMargins -> {{66, 66}, {16, 5}}, Evaluatable -> False, ShowCellLabel -> 
    False, MenuSortingValue -> 10000, 
    RasterBoxOptions -> {ImageEditMode -> False}], 
   Cell[
    StyleData["Link"], FontFamily -> "Source Sans Pro", FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.855, 0.396, 0.145], 
       RGBColor[0.02, 0.286, 0.651]]]], 
   Cell[
    StyleData["StringTypeLink", StyleDefinitions -> StyleData["Link"]], 
    FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.969, 0.467, 0.], 
       GrayLevel[0.467]]]], 
   Cell[
    StyleData["CharactersRefLink"], ShowSpecialCharacters -> False], 
   Cell[
    StyleData["Excluded"], 
    CellBracketOptions -> {
     "Color" -> RGBColor[0.9, 0.4, 0.4], "Thickness" -> 2}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Excluded"}, 
      "Message" -> {"Message", "MSG", "Excluded"}, 
      "Output" -> {"Output", "Excluded"}, "Print" -> {"Print", "Excluded"}, 
      "PrintTemporary" -> {"PrintTemporary", "Excluded"}}, CellFrameMargins -> 
    4, CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         TemplateBox[{
           StyleBox[
           "\"excluded\"", "ExcludedCellLabel", StripOnInput -> False], 
           "\"Excluded cells will not appear anywhere in the published \
resource except for the definition notebook\""}, "PrettyTooltipTemplate"]], 
        "ExcludedCellLabel"]}, {None, None}}, StyleMenuListing -> None, 
    Background -> RGBColor[1, 0.95, 0.95]], 
   Cell[
    StyleData["ExcludedCellLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontFamily -> "Source Sans Pro", FontSize -> 
    9, FontWeight -> Plain, FontSlant -> Italic, FontColor -> 
    RGBColor[0.9, 0.4, 0.4, 0.5], Background -> None], 
   Cell[
    StyleData["Comment", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> {{3, 0}, {0, 0}}, CellMargins -> {{66, 0}, {1, 0}}, 
    CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Comment"}, 
      "Message" -> {"Message", "MSG", "Comment"}, 
      "Output" -> {"Output", "Comment"}, "Print" -> {"Print", "Comment"}, 
      "PrintTemporary" -> {"PrintTemporary", "Comment"}}, CellFrameColor -> 
    RGBColor[0.88072, 0.61104, 0.14205], 
    CellFrameLabelMargins -> {{0, 10}, {0, 0}}, FontColor -> GrayLevel[0.25], 
    Background -> RGBColor[0.982, 0.942, 0.871]], 
   Cell[
    StyleData["AuthorComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "AuthorComment"}, 
      "Message" -> {"Message", "MSG", "AuthorComment"}, 
      "Output" -> {"Output", "AuthorComment"}, 
      "Print" -> {"Print", "AuthorComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "AuthorComment"}}, 
    CellFrameColor -> RGBColor[0.36842, 0.50678, 0.7098], Background -> 
    RGBColor[0.905, 0.926, 0.956]], 
   Cell[
    StyleData["ReviewerComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "ReviewerComment"}, 
      "Message" -> {"Message", "MSG", "ReviewerComment"}, 
      "Output" -> {"Output", "ReviewerComment"}, 
      "Print" -> {"Print", "ReviewerComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "ReviewerComment"}}, 
    CellFrameColor -> RGBColor[0.56018, 0.69157, 0.19488], Background -> 
    RGBColor[0.934, 0.954, 0.879]], 
   Cell[
    StyleData["CommentLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontSlant -> "Italic", FontColor -> 
    GrayLevel[0.5]], 
   Cell[
    StyleData["FormObjectCell"], CellMargins -> {{66, 66}, {16, 5}}], 
   Cell[
    StyleData["LocalFileInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 1053094956087266899; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog["Paclet", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "FileOpen"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[1053094956087266899]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell[
    StyleData["LocalDirectoryInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 4898876371082581810; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog["Paclet", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "Directory"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[4898876371082581810]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell[
    StyleData["Item"], DefaultNewCellStyle -> "Item"], 
   Cell[
    StyleData["ButtonText"], FontFamily -> "Sans Serif", FontSize -> 11, 
    FontWeight -> Bold, FontColor -> RGBColor[0.459, 0.459, 0.459]], 
   Cell[
    StyleData["InlineFormula"], 
    HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"}, 
    LanguageCategory -> "Formula", AutoSpacing -> True, ScriptLevel -> 1, 
    SingleLetterItalics -> False, SpanMaxSize -> 1, StyleMenuListing -> None, 
    FontFamily -> "Source Sans Pro", FontSize -> 1. Inherited, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    FractionBoxOptions -> {BaseStyle -> {SpanMaxSize -> Automatic}}, 
    GridBoxOptions -> {
     GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}}], 
   Cell[
    StyleData["Input"], CellProlog :> First[{
       Quiet[
        (Block[{$ContextPath}, Once[
           ReleaseHold[
            CurrentValue[#, {TaggingRules, "CompatibilityTest"}]], 
           "KernelSession"]; If[$VersionNumber >= 12.2, 
           Needs["DefinitionNotebookClient`"], 
           Needs["ResourceSystemClient`DefinitionNotebook`"]]; 
         DefinitionNotebookClient`LoadDefinitionNotebook["Paclet", #]; 
         Null]& )[
         InputNotebook[]]]}]], 
   Cell[
    StyleData["Code"], CellProlog :> First[{
       Quiet[
        (Block[{$ContextPath}, Once[
           ReleaseHold[
            CurrentValue[#, {TaggingRules, "CompatibilityTest"}]], 
           "KernelSession"]; If[$VersionNumber >= 12.2, 
           Needs["DefinitionNotebookClient`"], 
           Needs["ResourceSystemClient`DefinitionNotebook`"]]; 
         DefinitionNotebookClient`LoadDefinitionNotebook["Paclet", #]; 
         Null]& )[
         InputNotebook[]]]}]], 
   Cell[
    StyleData["DockedCell"], CellFrameColor -> GrayLevel[0.75], Background -> 
    GrayLevel[
      Rational[16, 17]]], 
   Cell[
    StyleData["DisclosureDetails"], CellMargins -> {{94, Inherited}, {10, 0}},
     FontSize -> 12, FontColor -> GrayLevel[0.5]]}, Visible -> False, 
  FrontEndVersion -> "13.2 for Microsoft Windows (64-bit) (July 8, 2022)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"50a3b7ce-49e6-41df-90da-f1163e212d04"
]

